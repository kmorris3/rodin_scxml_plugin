----------------------- REVIEW 1 ---------------------
PAPER: 34
TITLE: Refinement of SCXML Statecharts via translation to Event-B
AUTHORS: Colin Snook, Karla Morris, Robert Armstrong, Thai Son Hoang and Michael Butler

Overall evaluation: -1 (weak reject)

----------- Overall evaluation -----------
This paper proposes a semantics and refinement strategy for Statecharts via mapping into Event-B. The main focus is on considering the run to completion semantics of Statecharts. Mechanised support verification is then possible with the tools available for Event-B. An example is presented to illustrate the overall approach. 

The topic addressed is certainly relevant, and the work has a potential for practical applicability. Nevertheless, I have some reservations concerning the proposed approach.

- The introduction shall briefly consider the main related works, and motivate the work with respect to these works. More importantly, there is no proper discussion on related work in the entire paper. A quick google search shows several related approaches, including the following works: 
* On semantics and refinement of UML statecharts: a coalgebraic view. By Sun Meng, Zhang Naixiao and L.S. Barbosa. 
*  Behavioral Refinements of UML Statecharts. By Nora Szasz and Pedro Vilanova.
* Controlling Reﬁnements of Statecharts. By Conner Hansen, Eugene Syriani, and Levi Lucio.

- It is not clear the precise contribution of this paper with respect to [9]. Saying "... but had not arrived at the translation we now use" is too vague. The new contribution must be emphasised, also with respect to [13]. 

- Overall, the presentation is too informal. The discussion in Section 4 is certainly helpful, but it seems challenging to relate all these decisions to what was briefly presented in Section 2.2 on Event-B. As refinement for Statecharts is the central intended contribution of this paper, via mapping into Event-B, a formal account of Refinement in Event-B seems fundamental. As is, the requirements in Section 4 looks like a list of postulated decisions, without a unifying notion. Some terms, like raise actions, are not explained.

- The extensions to SCXML are purely syntactic, and it is not at all clear that engineers that use Statecharts would be happy to adopt these extensions. 

Small issues:
- To what sort of instantiation are you referring to in the abstract?
- has no parameters and guard -> ... and no guard
- In, Event-B -> In Event-B,
- systems components -> system components
- After the ASIC moves -> After that the ASIC moves
- the we have -> we have
- common semantic -> ... semantcis
- Right-margin is exceeded on Page 13. 
- Furthermore,in -> Furthermore, in
- 'run to completion' semantic ->  ... semantics


----------------------- REVIEW 2 ---------------------
PAPER: 34
TITLE: Refinement of SCXML Statecharts via translation to Event-B
AUTHORS: Colin Snook, Karla Morris, Robert Armstrong, Thai Son Hoang and Michael Butler

Overall evaluation: 1 (weak accept)

----------- Overall evaluation -----------
The research topic of this work focuses on the correct execution semantics of state machine, and tries to apply the refinement and proof techniques to address the correctness. The authors aim at proving the "run-to-completion" property of the statechart by using Event-B. To achieve this goal, they extend the SCXML syntax with "run-to-completion" annotations to describe refinements and exploit Event-B's tool support by translating SCXML format to Event-B model. Some synchronization properties can then be verified based on this extension. The topic is interesting, and falls in the scope of the conference. Some comments are given hereafter.

- Sect. 4 discusses some important issues when handling the 'run-to-completion' semantics in the refinement. It is suggested to use an example when the authors explain the difficulty with refining 'run-to-completion' semantics for the micro-step. 

- Similarly to the last comment, it is desired to give a visual example when explaining the difficulty with non-deterministic firing of user transitions. 

- In Sect. 4, the authors state that " we wish to explore verification that considers ‘run to completion’ behaviour as closely as possible", and they simulate the run-to-completion semantics in Event-B by using Boolean flags. It is suggested to give a summary on the "how close is your simulation to the real run to completion semantics" and on the differences between them at the end of the section. 

- Sect. 7 gives verificaton results of the synchronization property in the IDS example. The authors could give some statistics on the refinement modeling and verification results, such as the number of refinements, the number of invariants, the number of invariants proven automatically/manually, etc. 

To conclude, this paper shows preliminary work on refining the statechart with run-to-completion semantics. Some important issues such as the complexity of refinement/proof and their optimization is not yet considered. More experimental results are expected. The paper well organized and it is easy to follow the presentation. The decision of the reviewer is weak accepted.


----------------------- REVIEW 3 ---------------------
PAPER: 34
TITLE: Refinement of SCXML Statecharts via translation to Event-B
AUTHORS: Colin Snook, Karla Morris, Robert Armstrong, Thai Son Hoang and Michael Butler

Overall evaluation: 1 (weak accept)

----------- Overall evaluation -----------
The paper describes the translation of the Statechart model for hierarchical structures into the refinement model of Event-B, which then allows proving properties specified in the original Statechart model.
The authors claim two contributions:
1. addition of run to completion semantics to a UML version of Statecharts (SC)
2. augmentation of the textual and parse format of SC to support formal analysis.

The paper is clearly written  and organised. It addresses an important issue and aims at providing a tool that would certainly be useful to the formal system development community. 
The paper is an extension of the work in reference [11].
I think the authors should then  be more explicit into what is different from that reference. For instance, section 5 (contribution 2 above) seems already present in [11]. The translator from SCXML to iUML-B is also mentioned in [11].

What is indeed a contribution is the implementation  of the SC completion semantics  into the iUML_B/Event_B framework. This is done by a translation of SCXML into iUML_B, coupled with a predefined Event-B context and machine implementation of the completion semantics.
While the snippet of the Event-B machine shown in figure 7 (and description in page 14) does give an idea about the semantics, invariants in the machine do not really specify relevant properties of it, so the fact that it is indeed a correct implementation is not really strongly supported.

Other comments:
Statecharts refinement possibilities are constrained to comply with Event-B superposition refinement scheme
Authors should illustrate with some possible (and reasonable) SCXML refinement  that does not comply with the imposed refinement conditions.

the authors say that “[transition] T1 could fire alone even if T2 is enabled since we cannot add the negation of T2’s guard to T1 “. It is then not clear how this complies with the Statechart completion semantics.


Minor comments:
Page 5:
In, Event-B —> In Event-B

Page 8:
model the we have —> model then we have