@Article{lamport1977proving,
author = {Lamport, Leslie},
title = {Proving the Correctness of Multiprocess Programs},
year = {1977},
month = {March},
url = {https://www.microsoft.com/en-us/research/publication/proving-correctness-multiprocess-programs/},
pages = {125-143},
journal = {IEEE Transactions on Software Engineering SE-3},
volume = {2},
}

@article{hoang2016ltl,
author = {Hoang, Thai Son and Schneider, Steve and Treharne, Helen and Williams, David},
year = {2016},
month = {04},
pages = {},
title = {Foundations for using linear temporal logic in Event-B refinement},
volume = {28},
journal = {Formal Aspects of Computing},
doi = {10.1007/s00165-016-0376-0}
}

@Book{abrial10:_model_event_b,
  author = 	 {J-R. Abrial},
  title = 	 {Modeling in {Event-B}: System and Software Engineering},
  publisher = 	 {Cambridge University Press},
  year = 	 2010
}

@Article{abrial10:_rodin,
  author = 	 {J-R. Abrial and M. Butler and S. Hallerstede and T.S. Hoang and F. Mehta and L. Voisin},
  title = 	 {{Rodin}: An Open Toolset for Modelling and Reasoning in {Event-B}},
  journal = 	 {Software Tools for Technology Transfer},
  year = 	 2010,
  month = 	 nov,
  volume = 	 12,
  number = 	 6,
  pages = 	 {447--466},
  publisher =    {Springer-Verlag}
}

@misc{scxmlwebsite,
  author = {{W3C}},
  title = {State Chart {XML} {SCXML}: State Machine Notation for Control Abstraction},
  month = sep,
  year = 2015,
  howpublished = {http://www.w3.org/TR/scxml/}
}


@misc{siriuswebsite,
  author = {{Eclipse Foundation}},
  title = {{Sirius} Project Website},
  month = mar,
  year = {2016},
  howpublished = {\hfill\break https://eclipse.org/sirius/overview.html}
}

@book{MATLAB:2019, 
year = {2019}, 
author = {MATLAB}, 
title = {9.7.0.1190202 (R2019b)}, 
publisher = {The MathWorks Inc.}, 
address = {Natick, Massachusetts} 
} 

@book{steinberg2009emf,
  title={EMF: Eclipse Modeling Framework},
  author={Steinberg, D. and Budinsky, F. and Merks, E.},
  isbn={9780321331885},
  lccn={2007049160},
  series={Eclipse (Addison-Wesley)},
  url={https://books.google.co.uk/books?id=oAYcAAAACAAJ},
  year={2009},
  publisher={Addison-Wesley}
}

@article{Snook2006,
	author = {Snook, Colin and Butler, Michael},
	title = {{UML-B}: Formal Modeling and Design Aided by {UML}},
	journal = {ACM Trans. Softw. Eng. Methodol.},
	issue_date = {January 2006},
	volume = {15},
	number = {1},
	month = jan,
	year = {2006},
	issn = {1049-331X},
	pages = {92--122},
	numpages = {31},
	url = {http://doi.acm.org/10.1145/1125808.1125811},
	doi = {10.1145/1125808.1125811},
	acmid = {1125811},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Modeling, UML-B, refinement},
}

@InProceedings{snook14:_b_statem,
  author = 	 {C. Snook},
  title = 	 {{iUML-B} Statemachines},
  booktitle = {Proceedings of the Rodin Workshop 2014},
  year = 	 2014,
  address = 	 {Toulouse, France},
  note = 	 {\url{http://eprints.soton.ac.uk/365301/}}}

@InProceedings{Snook12:FMCO,
	author="Snook, Colin
	and Savicks, Vitaly
	and Butler, Michael",
	editor="Aichernig, Bernhard K.
	and de Boer, Frank S.
	and Bonsangue, Marcello M.",
	title="Verification of {UML} Models by Translation to {UML-B}",
	booktitle="Formal Methods for Components and Objects",
	year="2012",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="251--266",
	abstract="UML-B is a `UML like' notation based on the Event-B formalism which allows models to be progressively detailed through refinements that are proven to be consistent and to satisfy safety invariants using the Rodin platform and its automatic proof tools. UML, on the other hand, encourages large models to be expressed in a single, detailed level and relies on simulation and model testing techniques for verification. The advantage of proof over model-testing is that the proof is valid for all instantiations of the model whereas a simulation must choose a typical instantiation. In the INESS project we take an extant UML model of a railway interlocking system and explore methodical ways to translate it into UML-B in such a way as to facilitate proof that the model satisfies certain safety properties which are expressed as invariants. We describe the translation attempted so far and insights that we have gained from attempting to prove a safety property. We propose some possible improvements to the translation which we believe will make the proof easier.",
	isbn="978-3-642-25271-6"
}


@article{Harel,
 author = {Harel, David},
 title = {Statecharts:  A Visual Formalism for Complex Systems},
 journal = {Sci. Comput. Program.},
 issue_date = {June 1, 1987},
 volume = {8},
 number = {3},
 month = jun,
 year = {1987},
 issn = {0167-6423},
 pages = {231--274},
 numpages = {44},
 url = {http://dx.doi.org/10.1016/0167-6423(87)90035-9},
 doi = {10.1016/0167-6423(87)90035-9},
 acmid = {34886},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
}


@INPROCEEDINGS{Maraninchi91theargos,
    author = {F. Maraninchi},
    title = {The {Argos} Language: Graphical Representation of Automata and Description of Reactive Systems},
    booktitle = {In IEEE Workshop on Visual Languages},
    year = {1991}
}

@InProceedings{Alexandre,
author="David, Alexandre
and M{\"o}ller, M. Oliver
and Yi, Wang",
editor="Kutsche, Ralf-Detlef
and Weber, Herbert",
title="Formal Verification of {UML} Statecharts with Real-Time Extensions",
booktitle="Fundamental Approaches to Software Engineering",
year="2002",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="218--232",
abstract="We present a framework for formal veri.cation of a realtime extension of UML statecharts. For clarity, we restrict ourselves to a reasonable subset of the rich UML statechart model and extend this with real-time constructs (clocks, timed guards, and invariants). We equip the obtained formalism, called hierarchical timed automata (HTA), with an operational semantics. We outline a translation of one HTA to a network of flat timed automata, that can serve as input to the real-time model checking tool Uppaal. This translation can be used to faithfully verify deadlock-freedom, safety, and unbounded response properties of the HTA model. We report on an XML-based implementation of this translation, use the well-known pacemaker example to illustrate our technique, and report run-time data for the formal verification part.",
isbn="978-3-540-45923-1"
}

%\bibliographystyle{alpha}
%\bibliographystyle{unsrt}
%\bibliographystyle{abbrv}

@article{Eshuis_2009,
	doi = {10.1016/j.scico.2008.09.001},
	url = {https://doi.org/10.1016%2Fj.scico.2008.09.001},
	year = 2009,
	month = jan,
	publisher = {Elsevier {BV}},
	volume = {74},
	number = {3},
	pages = {65--99},
	author = {Rik Eshuis},
	title = {Reconciling statechart semantics},
	journal = {Science of Computer Programming}
}

@article{Syriani_2019,
	doi = {},
	url = {https://doi.org/10.1016/j.scico.2018.10.005},
	year = 2019,
	month = jan,
	publisher = {Elsevier {BV}},
	volume = {170},
	number = {15},
	pages = {45--79},
	author = {Eugene Syriani, Vasco Sousa, Levi Lucio},
	title = {Structure and behavior preserving statecharts refinements},
	journal = {Science of Computer Programming}
}

@INPROCEEDINGS{MoSn16,
	author = {Morris, Karla and Snook, Colin},
	title = {Reconciling {SCXML} Statechart Representations and {Event-B} Lower Level Semantics},
	booktitle = {HCCV - Workshop on High-Consequence Control Verification},
	year = {2016},
	url = {http://www.sandia.gov/hccv/_assets/documents/HCCV_2016_Morris.pdf}
}

@InProceedings{MoSnHo18,
	author="Morris, Karla
	and Snook, Colin
	and Hoang, Thai Son
	and Armstrong, Robert
	and Butler, Michael",
	editor="Artho, Cyrille
	and {\"O}lveczky, Peter Csaba",
	title="Refinement of Statecharts with Run-to-Completion Semantics",
	booktitle="Formal Techniques for Safety-Critical Systems",
	year="2019",
	publisher="Springer International Publishing",
	address="Cham",
	pages="121--138",
	abstract="Statechart modelling notations, with so-called `run to completion' semantics and simulation tools for validation, are popular with engineers for designing systems. However, they do not support formal refinement and they lack formal static verification methods and tools. For example, properties concerning the synchronisation between different parts of a system may be difficult to verify for all scenarios, and impossible to verify at an abstract level before the full details of sub-states have been added. , on the other hand, is based on refinement from an initial abstraction and is designed to make formal verification by automatic theorem provers feasible, restricting instantiation and testing to a validation role. In this paper, we introduce a notion of refinement, similar to that of , into a `run to completion' Statechart modelling notation, and leverage 's tool support for proof. We describe the pitfalls in translating `run to completion' models into refinements and suggest a solution. We illustrate the approach using our prototype translation tools and show by example, how a synchronisation property between parallel Statecharts can be automatically proven at an intermediate refinement level.",
	isbn="978-3-030-12988-0"
}

@InProceedings{MoSnHo-ABZ2020,
author="Morris, Karla
and Snook, Colin
and Hoang, Thai Son
and Hulette, Geoffrey
and Armstrong, Robert
and Butler, Michael",
editor="Raschke, Alexander
and M{\'e}ry, Dominique
and Houdek, Frank",
title="Refinement and Verification of Responsive Control Systems",
booktitle="Rigorous State-Based Methods",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="272--277",
abstract="Statechart notations with `run to completion' semantics, are popular with engineers for designing controllers that respond to events in the environment with a sequence of state transitions. However, they lack formal refinement and rigorous verification methods., on the other hand, is based on refinement from an initial abstraction and is designed to make formal verification by automatic theorem provers feasible. We introduce a notion of refinement into a `run to completion' statechart modelling notation, and leveragetool support for theorem proving. We describe the difficulties in translating `run to completion' semantics intorefinements and suggest a solution. We outline how safety and liveness properties could be verified.",
isbn="978-3-030-48077-6"
}

@InCollection{hoang13:_introd_event_b_model_method,
  author = 	 {Thai Son Hoang},
  title = 	 {An Introduction to the {Event-B} Modelling Method},
  booktitle = 	 {Industrial Deployment of System Engineering Methods},
  publisher = 	 {Springer-Verlag},
  year = 	 2013,
  pages =        {211--236}
}

@BOOK{Rumbaugh2004,
	title = {Unified Modeling Language Reference Manual, The (2nd Edition)},
	publisher = {Pearson Higher Education},
	year = {2004},
	author = {Rumbaugh, James and Jacobson, Ivar and Booch, Grady},
	isbn = {0321245628}
}

@article{HaSyLu15,
  author    = {Conner Hansen and
               Eugene Syriani and
               Levi Lucio},
  title     = {Towards Controlling Refinements of Statecharts},
  journal   = {CoRR},
  volume    = {abs/1503.07266},
  year      = {2015},
  url       = {http://arxiv.org/abs/1503.07266},
  archivePrefix = {arXiv},
  eprint    = {1503.07266},
  timestamp = {Wed, 07 Jun 2017 14:43:11 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/HansenSL15},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@INPROCEEDINGS{MeNaBa04,
author={Sun Meng and Zhang Naixiao and L. S. Barbosa},
booktitle={Proceedings of the Second International Conference on Software Engineering and Formal Methods, 2004. SEFM 2004.},
title={On semantics and refinement of {UML} statecharts: a coalgebraic view},
year={2004},
volume={},
number={},
pages={164-173},
keywords={Unified Modeling Language;algebraic specification;object-oriented programming;programming language semantics;UML statechart refinement;UML statechart semantics;behavioral refinement;coalgebraic description;operational semantics;reactive system design;step-wise system development;visual formalism;Concurrent computing;Context;Contracts;Informatics;Proposals;Software engineering;Software systems;Sun;Unified modeling language},
doi={10.1109/SEFM.2004.1347517},
ISSN={},
month={Sept},}

@TechReport{SzVi10,
  author = 	 {Nora Szasz and Pedro Vilanova},
  title = 	 {Behavioral Refinements of {UML-Statecharts}},
  institution =  {Universidad de la Rep\'ublica},
  year = 	 2010,
  number = 	 {RT 10-13},
  address = 	 {Montevideo, Uruguay}}

@INPROCEEDINGS{MiCa14,
	author= {Miyazawa, Alvaro and Cavalcanti, Ana},
	editor=	{Albert, Elvira and Sekerinski, Emil},
	title=	{Formal Refinement in {SysML}},
	booktitle= {Integrated Formal Methods},
	year= {2014},
	publisher= {Springer International Publishing},
	pages= {155--170},
	isbn= {978-3-319-10181-1}
}

@article{LiMiCaCoTySaHaLaLe17,
	author={Lima, Lucas
	and Miyazawa, Alvaro
	and Cavalcanti, Ana
	and Corn{\'e}lio, M{\'a}rcio
	and Iyoda, Juliano
	and Sampaio, Augusto
	and Hains, Ralph
	and Larkham, Adrian
	and Lewis, Vaughan},
	title={An integrated semantics for reasoning about {SysML} design models using refinement},
	journal="Software {\&} Systems Modeling",
	year="2017",
	month="Jul",
	day="01",
	volume="16",
	number="3",
	pages="875--902",
	abstract="SysML is a variant of UML for systems design. Several formalisations of SysMLÂ (and UML) are available. Our work is distinctive in two ways:Â a semantics for refinement and for a representative collection of elements from the UML4SysML profileÂ (blocks, state machines, activities, and interactions) used in combination. We provide a means to analyse and refine design models specified using SysML. This facilitates the discovery of problems earlier in the system development lifecycle, reducing time, and costs of production. Here, we describe our semantics, which is defined using a state-rich process algebra and implemented in a tool for automatic generation of formal models. We also show how the semantics can be used for refinement-based analysis and development. Our case study is a leadership-election protocol, a critical component of an industrial application. Our major contribution is a framework for reasoning using refinement about systems specified by collections of SysML diagrams.",
	issn="1619-1374",
	doi="10.1007/s10270-015-0492-y",
	url="https://doi.org/10.1007/s10270-015-0492-y"
}

@inproceedings{Mashkoor16,
	author = {Mashkoor, Atif},
	title = {The Hemodialysis Machine Case Study},
	booktitle = {Proceedings of the 5th International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z - Volume 9675},
	series = {ABZ 2016},
	year = {2016},
	isbn = {978-3-319-33599-5},
	location = {Linz, Austria},
	pages = {329--343},
	numpages = {15},
	url = {https://doi.org/10.1007/978-3-319-33600-8_29},
	doi = {10.1007/978-3-319-33600-8_29},
	acmid = {2990722},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
}

@inproceedings{HoSnLaBu16,
	author = {Hoang, Thai Son and Snook, Colin and Ladenberger, Lukas and Butler, Michael},
	title = {Validating the Requirements and Design of a Hemodialysis Machine Using {iUML-B}, {BMotion Studio}, and Co-Simulation},
	booktitle = {Proceedings of the 5th International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z - Volume 9675},
	series = {ABZ 2016},
	year = {2016},
	isbn = {978-3-319-33599-5},
	location = {Linz, Austria},
	pages = {360--375},
	numpages = {16},
	url = {https://doi.org/10.1007/978-3-319-33600-8_31},
	doi = {10.1007/978-3-319-33600-8_31},
	acmid = {2990724},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	keywords = {BMotion Studio, Co-Simulation, Event-B, Hemodialysis machine, Validation, Visualisation, iUML-B},
}

@InProceedings{HoBuRe18,
	author="Hoang, Thai Son
	and Butler, Michael
	and Reichl, Klaus",
	editor="Butler, Michael
	and Raschke, Alexander
	and Hoang, Thai Son
	and Reichl, Klaus",
	title="The Hybrid {ERTMS/ETCS} Level 3 Case Study",
	booktitle="Abstract State Machines, Alloy, B, TLA, VDM, and Z",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="251--261",
	abstract="This document presents a description of the European Rail Traffic Management System ({ERTMS}) case study. {ERTMS} is a system of standards for management and interoperation of signalling for railways by the European Union (EU). The case study focuses on the {ERTMS} Level 3 Hybrid principle, which accommodates different types of trains including {ERTMS} trains equiped with the Train Integrity Monitoring System (TIMS), {ERTMS} trains without TIMS, and non-{ERTMS} trains.",
	isbn="978-3-319-91271-4"
}

@article{said15:umlbSosym,
	author = {Said, Mar Yah and Butler, Michael and Snook, Colin},
	title = {A Method of Refinement in {UML-B}},
	journal = {Softw. Syst. Model.},
	issue_date = {October   2015},
	volume = {14},
	number = {4},
	month = oct,
	year = {2015},
	issn = {1619-1366},
	pages = {1557--1580},
	numpages = {24},
	url = {http://dx.doi.org/10.1007/s10270-013-0391-z},
	doi = {10.1007/s10270-013-0391-z},
	acmid = {2826611},
	publisher = {Springer-Verlag New York, Inc.},
	address = {Secaucus, NJ, USA},
	keywords = {Class diagram, Event-B, Formal specification, State machine, UML-B, Visual modelling languages},
}

@article{snook06umlbTosem,
	author = {Snook, Colin and Butler, Michael},
	title = {{UML-B}: Formal Modeling and Design Aided by {UML}},
	journal = {ACM Trans. Softw. Eng. Methodol.},
	issue_date = {January 2006},
	volume = {15},
	number = {1},
	month = jan,
	year = {2006},
	issn = {1049-331X},
	pages = {92--122},
	numpages = {31},
	url = {http://doi.acm.org/10.1145/1125808.1125811},
	doi = {10.1145/1125808.1125811},
	acmid = {1125811},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Modeling, UML-B, refinement},
}

@InProceedings{snook14:iumlbStatem,
	author = 	 {Colin Snook},
	title = 	 {{iUML-B} Statemachines},
	booktitle = {Proceedings of the Rodin Workshop 2014},
	year = 	 2014,
	pages =        {29--30},
	address = 	 {Toulouse, France},
	note = 	 {\url{http://eprints.soton.ac.uk/365301/}}}