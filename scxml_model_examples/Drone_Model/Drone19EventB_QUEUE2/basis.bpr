<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="INITIALISATION/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p15,p9" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p15,p9" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="p15,p9" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p15,p9" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15,p9" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5,p6,p39,p24,p7,p15,p9,p2,p23,p10,p1,p13,p20,p18,p8,p3,p25,p28,p16,p4,p30,p31,p37,p38,p41,p42,p43,p44,p47,p48">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∈InternalQueueType"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p17,p10" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p17,p10" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p17,p10" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p17,p10" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17,p10" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5,p6,p41,p26,p8,p17,p10,p2,p25,p11,p1,p15,p22,p7,p14,p20,p9,p3,p27,p30,p18,p4,p32,p33,p39,p40,p43,p44,p45,p46,p49,p50">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p10,p4,p19,p8,p17,p14,p7,p18,p16,p9,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p11,p20,p12,p5,p15,p13,p2,p6,p10,p4,p19,p8,p17,p14,p7,p18,p16,p9,p3">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iqSCXML_iq_ext∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p7,p2,p15,p5,p13,p9,p4,p14,p12,p6,p11,p8"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p16,p10,p17,p18,p3,p7,p2,p15,p5,p13,p9,p4,p14,p12,p6,p11,p8">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{min(dom(SCXML_iq))} ⩤ SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="min(dom(SCXML_iq)) ↦ SCXML_it∈SCXML_iq"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44,p45"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44,p45"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="p25,p15" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="p25,p15" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="p25,p15" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p25,p15" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="p25,p15" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="p40" org.eventb.core.prInfHyps="p61"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p61"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p65"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p8,p56,p36,p13,p25,p15,p3,p35,p16,p2,p23,p32,p10,p21,p28,p14,p4,p37,p42,p26,p5,p9,p38,p18,p22,p29,p30,p40,p17,p11,p7,p1,p44,p45,p51,p52,p55,p58,p59,p60,p62,p67,p68">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_eq∈dom(Seq_tail)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Seq_tail(SCXML_eq)∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_content(SCXML_iq)∩Seq_content(SCXML_eq)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p9,p2,p18,p14,p10,p7,p15,p12,p8,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p4,p3,p16,p13,p11,p17,p1,p6,p9,p2,p18,p14,p10,p7,p15,p12,p8,p5">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq∪SCXML_eq_ext∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤔ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))&gt;max(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p11,p5,p19,p9,p17,p14,p8,p18,p16,p10,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p12,p13,p6,p15,p4,p7,p11,p5,p19,p9,p17,p14,p8,p18,p16,p10,p3">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∪SCXML_iq_ext∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p33" org.eventb.core.prInfHyps="p32"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p38"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p39"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="One Point Rule in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p1,p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p45">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·Seq_head(SCXML_iq)=t"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{Seq_head(SCXML_iq)}≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·{Seq_head(SCXML_iq)}={t})"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.onePointRule:2"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p33" org.eventb.core.prInfHyps="p32"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p38"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p39"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="One Point Rule in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p1,p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p45">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·Seq_head(SCXML_eq)=t"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{Seq_head(SCXML_eq)}≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·{Seq_head(SCXML_eq)}={t})"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.onePointRule:2"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_noTriggeredTransitionsEnabled/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/SCXML_raiseExternalTriggers/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40,p41"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p40,p41"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p34"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p35"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41"/>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p63">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p31"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTrigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq ↦ SCXML_raisedTrigger∈dom(Seq_append)∧Seq_append∈ℙ(ℤ × SCXML_TRIGGER) × SCXML_TRIGGER ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_append∈ℙ(ℤ × SCXML_TRIGGER) × SCXML_TRIGGER ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_eq ↦ SCXML_raisedTrigger∈dom(Seq_append)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/SCXML_raiseInternalTriggers/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p33"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p34"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p38">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/SCXML_raiseInternalTriggers/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p30" org.eventb.core.prInfHyps="p29"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p29"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p36"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p40">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/SCXML_consumeDequeuedTrigger/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p32" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq∈dom(Seq_tail)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/SCXML_consumeDequeuedTrigger/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p21,p13" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="p21,p13" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="p21,p13" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p21,p13" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p21,p13" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p56"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p56"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p59"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p5,p6,p51,p30,p11,p21,p13,p2,p29,p14,p1,p19,p26,p8,p18,p24,p12,p3,p32,p37,p22,p4,p7,p33,p31,p35,p15,p9,p39,p40,p46,p47,p50,p53,p54,p55,p57,p62,p63">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p65">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p26"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_eq∈dom(Seq_tail)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="disjointQueues/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p8,p9"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p12,p13" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p12,p13" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p12,p13" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p12,p13" org.eventb.core.prInfHyps="p19"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p12,p13" org.eventb.core.prInfHyps="p21"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37,p38,p26,p39,p40,p12,p13,p41,p42,p43,p44,p45,p46,p2,p47,p48,p49,p4,p50,p6,p51,p52,p53,p54,p55,p23,p25,p28,p29,p30,p31,p35,p36"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p9,p2,p4,p5,p31,p8,p6">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Seq_content(SCXML_iq)∩Seq_content(SCXML_eq)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/SCXML_storeDequeuedTrigger/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p32" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p31"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p38"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/SCXML_storeDequeuedTrigger/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="p23,p13" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p23,p13" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="p23,p13" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p23,p13" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p23,p13" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p59"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p59"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p63"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p5,p6,p54,p34,p11,p23,p13,p2,p33,p14,p1,p21,p30,p8,p19,p26,p12,p3,p35,p40,p24,p4,p7,p36,p16,p20,p27,p28,p38,p15,p9,p42,p43,p49,p50,p53,p56,p57,p58,p60,p65,p66">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p68">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p21"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_content(SCXML_iq)∩Seq_content(SCXML_eq)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/typeof_SCXML_raisedTriggers/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p2" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p8,p2" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p8,p2" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p8,p2" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p8,p2" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/typeof_SCXML_raisedTriggers/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p4,p2,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p3,p32,p33"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/PO/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p17,p24">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p20,p11" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p59"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p59"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p63"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p5,p6,p53,p32,p9,p20,p11,p2,p31,p12,p1,p18,p27,p8,p16,p23,p10,p3,p33,p39,p21,p4,p7,p34,p13,p17,p24,p25,p28,p36,p37,p41,p42,p49,p50,p55,p56,p57,p60,p65,p66">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p68">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p69">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p1">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p70">
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p16">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70">
                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p70"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p71">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p71" org.eventb.core.prHyps="p5,p6,p53,p32,p9,p20,p11,p2,p31,p12,p1,p18,p27,p8,p16,p23,p10,p3,p33,p39,p21,p4,p7,p34,p13,p17,p24,p25,p28,p36,p37,p41,p42,p49,p50,p55,p56,p57,p60,p65,p66">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_raisedTriggers∈Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)∧Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)∧SCXML_iq∈dom(Seq_content)∧SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)∧SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_content(SCXML_iq)∩Seq_content(SCXML_eq)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)∧⊤∧⊤∧SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/PO/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p18,p26">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="p21,p12" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p21,p12" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="p21,p12" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p21,p12" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p21,p12" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p61"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p6,p7,p53,p34,p10,p21,p12,p3,p33,p13,p2,p19,p29,p9,p17,p25,p11,p4,p35,p40,p22,p5,p8,p36,p14,p18,p26,p27,p1,p30,p38,p42,p43,p50,p51,p52,p55,p56,p57,p59,p64,p65">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p67">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p2"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p68">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p2">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p69">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p17">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p69"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p70">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p6,p7,p53,p34,p10,p21,p12,p3,p33,p13,p2,p19,p29,p9,p17,p25,p11,p4,p35,p40,p22,p5,p8,p36,p14,p18,p26,p27,p1,p30,p38,p42,p43,p50,p51,p52,p55,p56,p57,p59,p64,p65">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_raisedTriggers∈Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)∧Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)∧SCXML_iq∈dom(Seq_content)∧SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)∧SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq_content(SCXML_iq)∩Seq_content(SCXML_eq)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)∧⊤∧⊤∧SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/PO/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p19,p26">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="p22,p12" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="p22,p12" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="p22,p12" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p22,p12" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p22,p12" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p60"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p60"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p63"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p5,p6,p54,p33,p9,p22,p12,p2,p32,p13,p1,p20,p29,p8,p18,p25,p11,p3,p34,p39,p23,p4,p7,p35,p15,p19,p26,p27,p37,p14,p41,p42,p49,p50,p53,p56,p57,p58,p61,p66,p67">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p69">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p20"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p70">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p5,p6,p54,p33,p9,p22,p12,p2,p32,p13,p1,p20,p29,p8,p18,p25,p11,p3,p34,p39,p23,p4,p7,p35,p15,p19,p26,p27,p37,p14,p41,p42,p49,p50,p53,p56,p57,p58,p61,p66,p67">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p71">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p71" org.eventb.core.prHyps="p29"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p72">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Seq_tail(SCXML_iq)" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p29">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p73">
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p18">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p73">
                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p73" org.eventb.core.prHyps="p73"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER∧SCXML_iq∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_tail(SCXML_iq)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_tail(SCXML_iq)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="SCXML_iq∈dom(Seq_tail)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)∧Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)∧SCXML_iq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER∧SCXML_iq∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_tail(SCXML_iq)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="⊤∧⊤∧SCXML_iq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER∧SCXML_iq∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)∧Seq_tail(SCXML_iq)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_content(SCXML_iq)∩Seq_content(SCXML_eq)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="Seq_tail(SCXML_iq)∈Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/PO/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p31" org.eventb.core.prInfHyps="p30"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p30"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p36"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),T⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒Seq_head(s)∈T">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/PO/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45,p46"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="p24,p15" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="p24,p15" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="p24,p15" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p24,p15" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="p24,p15" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p63"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p7,p10,p55,p36,p13,p24,p15,p4,p35,p16,p3,p22,p31,p12,p20,p28,p14,p5,p38,p43,p25,p6,p11,p39,p37,p1,p32,p41,p17,p2,p9,p29,p21,p8,p45,p46,p52,p53,p54,p57,p58,p59,p60,p65,p66">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_raisedTriggers∈Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Seq_content(Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers))=Seq_content(SCXML_iq)∪Seq_content(SCXML_raisedTriggers)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/PO/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44,p45"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44,p45"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="p23,p14" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="p23,p14" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="p23,p14" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p23,p14" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p23,p14" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p60"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p60"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p63"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p9,p55,p34,p12,p23,p14,p3,p33,p15,p2,p21,p29,p11,p19,p26,p13,p4,p36,p42,p24,p5,p10,p37,p35,p30,p39,p40,p16,p1,p8,p27,p20,p7,p44,p45,p51,p52,p57,p58,p59,p61,p66,p67">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_raisedTriggers∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_raisedTriggers∈Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers)∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Seq_content(Seq_concat(SCXML_iq ↦ SCXML_raisedTriggers))=Seq_content(SCXML_iq)∪Seq_content(SCXML_raisedTriggers)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="disjointQueues/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p18,p11" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="p18,p11" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="p18,p11" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p18,p11" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p18,p11" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="p5,p6,p43,p27,p9,p18,p11,p2,p26,p12,p1,p16,p23,p8,p15,p21,p10,p3,p28,p32,p19,p4,p7,p29,p34,p35,p41,p42,p45,p46,p47,p48,p51,p52">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p54">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p15"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p55"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_content" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒ran(s)={Seq_head(s)}∪ran(Seq_tail(s))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType⊆Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq_content=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ ran(s))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒ran(Seq_concat(s1 ↦ s2))=ran(s1)∪ran(s2)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)∧Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)∧SCXML_eq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_content∈Seq(SCXML_TRIGGER) → ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_iq∈dom(Seq_content)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Seq_content∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
