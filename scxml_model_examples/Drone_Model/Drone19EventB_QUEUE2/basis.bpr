<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="INITIALISATION/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∩(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureExternalTrigger/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p1,p2">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger∧SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq∪SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureExternalTrigger/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p8"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p1"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5,p2,p6,p7,p3,p1">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∩(SCXML_eq∪SCXML_raisedTriggers)=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureExternalTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p1,p2">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger∧SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∪SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureExternalTransitionSet/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p6"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p4,p5,p8,p7,p9,p10,p2,p6">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_et" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq ∖ {SCXML_et}⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_et∈SCXML_eq"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureExternalTransitionSet/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_iq=∅" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p13"/>
                                        <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p1,p6"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p4,p5,p8,p7,p9,p10,p2,p1,p6">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_et" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(SCXML_iq∪SCXML_raisedTriggers)∩SCXML_eq⊆{SCXML_et}"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(SCXML_iq∪SCXML_raisedTriggers)∩(SCXML_eq ∖ {SCXML_et})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_et∈SCXML_eq"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_raisedTriggers∩SCXML_eq⊆{SCXML_et}"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="((∅ ⦂ ℙ(SCXML_TRIGGER))∪SCXML_raisedTriggers)∩SCXML_eq⊆{SCXML_et}"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureInternalTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p8,p9"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p4"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2,p5,p7,p6,p8,p9,p1,p4">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_it∈SCXML_iq"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(SCXML_iq∪SCXML_raisedTriggers) ∖ {SCXML_it}⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureInternalTransitionSet/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p8,p9"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p1"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p7,p6,p8,p9,p2,p1">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="(SCXML_iq∪SCXML_raisedTriggers)∩SCXML_eq⊆{SCXML_it}"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="((SCXML_iq∪SCXML_raisedTriggers) ∖ {SCXML_it})∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_it∈SCXML_iq"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p10,p4,p19,p8,p17,p14,p7,p18,p16,p9,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p11,p20,p12,p5,p15,p13,p2,p6,p10,p4,p19,p8,p17,p14,p7,p18,p16,p9,p3">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iqSCXML_iq_ext∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p1,p34,p35,p36,p37,p38,p39,p40,p41,p42"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(SCXML_iq∪SCXML_iq_ext)∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p1,p2">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger∧SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∪SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTransitionSet/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p8,p9"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p1"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5,p2,p7,p6,p8,p9,p3,p1">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(SCXML_iq∪SCXML_raisedTriggers)∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p7,p2,p15,p5,p13,p9,p4,p14,p12,p6,p11,p8"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p16,p10,p17,p18,p3,p7,p2,p15,p5,p13,p9,p4,p14,p12,p6,p11,p8">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{min(dom(SCXML_iq))} ⩤ SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="min(dom(SCXML_iq)) ↦ SCXML_it∈SCXML_iq"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{min(dom(SCXML_iq))} ⩤ SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{min(dom(SCXML_eq))} ⩤ SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∩({min(dom(SCXML_eq))} ⩤ SCXML_eq)=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/typeof_SCXML_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p9,p2,p18,p14,p10,p7,p15,p12,p8,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p4,p3,p16,p13,p11,p17,p1,p6,p9,p2,p18,p14,p10,p7,p15,p12,p8,p5">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq∪SCXML_eq_ext∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤔ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))&gt;max(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p4,p8,p7,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p6,p29,p30,p31,p1,p32,p33,p34,p35,p36,p37,p38,p39,p40"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∩(SCXML_eq∪SCXML_eq_ext)=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/typeof_SCXML_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p11,p5,p19,p9,p17,p14,p8,p18,p16,p10,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p12,p13,p6,p15,p4,p7,p11,p5,p19,p9,p17,p14,p8,p18,p16,p10,p3">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∪SCXML_iq_ext∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/disjointQueues/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p1,p34,p35,p36,p37,p38,p39,p40,p41,p42"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(SCXML_iq∪SCXML_iq_ext)∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="check/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p4"/>
                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p6"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_uc=FALSE⇒SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/check/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒(∅ ⦂ ℙ(SCXML_TRIGGER))=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/check/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_uc=TRUE⇒SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒{SCXML_it}=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc=TRUE">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/check/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_et" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_uc=TRUE⇒SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒{SCXML_et}=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc=TRUE">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/check/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_uc=TRUE⇒(∅ ⦂ ℙ(SCXML_TRIGGER))=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_noTriggeredTransitionsEnabled/check/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_uc=TRUE⇒(∅ ⦂ ℙ(SCXML_TRIGGER))=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_NoUntriggeredTransitions/check/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p6"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc=TRUE⇒SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc=TRUE⇒⊤">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TRUE=TRUE⇒⊤"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/oneDt/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/oneDt/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p8" org.eventb.core.prInfHyps="p7"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="One Point Rule in goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{SCXML_it}≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·{SCXML_it}={t})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·SCXML_it=t"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.onePointRule:2"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/oneDt/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p8" org.eventb.core.prInfHyps="p7"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="One Point Rule in goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_et" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·SCXML_et=t"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{SCXML_et}≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·{SCXML_et}={t})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.onePointRule:2"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/oneDt/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_noTriggeredTransitionsEnabled/oneDt/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·SCXML_dt={t}">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38,p39"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38,p39"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p19,p11" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="p19,p11" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="p19,p11" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p19,p11" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p19,p11" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p54">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p25,p7,p49,p29,p9,p19,p11,p3,p16,p27,p12,p1,p17,p24,p4,p31,p36,p20,p8,p32,p30,p5,p28,p14,p2,p45,p46,p50,p51,p52,p53"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p34,p13,p38,p39,p47,p48,p6,p25,p7,p49,p29,p9,p19,p11,p3,p16,p27,p12,p1,p17,p24,p4,p31,p36,p20,p8,p32,p30,p5,p28,p14,p2,p45,p46,p50,p51,p52,p53">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·Seq_head(SCXML_iq)=t"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{Seq_head(SCXML_iq)}≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·{Seq_head(SCXML_iq)}={t})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p26,p7,p50,p30,p11,p20,p12,p3,p17,p28,p13,p1,p18,p25,p4,p32,p37,p21,p8,p33,p31,p5,p29,p14,p2,p46,p47,p51,p52,p53,p54"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p35,p15,p9,p39,p40,p48,p49,p6,p26,p7,p50,p30,p11,p20,p12,p3,p17,p28,p13,p1,p18,p25,p4,p32,p37,p21,p8,p33,p31,p5,p29,p14,p2,p46,p47,p51,p52,p53,p54">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∃t⦂SCXML_TRIGGER·Seq_head(SCXML_eq)=t"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{Seq_head(SCXML_eq)}≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·{Seq_head(SCXML_eq)}={t})"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_noTriggeredTransitionsEnabled/oneDequeuedTrigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(SCXML_TRIGGER))≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·(∅ ⦂ ℙ(SCXML_TRIGGER))={t})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/grd1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/SCXML_raiseExternalTriggers/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p32"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p33"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37"/>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p38">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTrigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq ↦ SCXML_raisedTrigger∈dom(Seq_append)∧Seq_append∈ℙ(ℤ × SCXML_TRIGGER) × SCXML_TRIGGER ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_append∈ℙ(ℤ × SCXML_TRIGGER) × SCXML_TRIGGER ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_eq ↦ SCXML_raisedTrigger∈dom(Seq_append)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/SCXML_raiseInternalTriggers/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p32"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p33"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37"/>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p38">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/SCXML_raiseInternalTriggers/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p29" org.eventb.core.prInfHyps="p28"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p28"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p34"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39"/>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p40">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq ↦ SCXML_raisedTriggers∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × SCXML_TRIGGER) × ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/typeof_SCXML_it/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p24">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="p1"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬⊥∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/SCXML_consumeDequeuedTrigger/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p20,p12" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p55"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p26,p8,p50,p30,p10,p20,p12,p3,p17,p28,p13,p1,p18,p25,p4,p32,p37,p21,p9,p33,p31,p5,p29,p15,p2,p46,p47,p51,p52,p53,p54"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p35,p14,p39,p40,p49,p55,p7,p26,p8,p50,p30,p10,p20,p12,p3,p17,p28,p13,p1,p18,p25,p4,p32,p37,p21,p9,p33,p31,p5,p29,p15,p2,p46,p47,p51,p52,p53,p54">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_uc=TRUE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_it=Seq_head(SCXML_iq)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℙ(ℤ × SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/typeof_SCXML_et/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p24">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="p2"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬⊥∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/SCXML_consumeDequeuedTrigger/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p1"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/grd2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p14"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p15"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p16,p17">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p1,p4,p6,p9,p12"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p2,p3,p10,p11,p16,p17,p8,p1,p4,p6,p9,p12">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p20">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p1,p4,p6,p9,p12"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p2,p3,p10,p11,p16,p17,p8,p1,p4,p6,p9,p12">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p17">
                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p17"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p21">
                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p9"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="inv1/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite of domain of a relation" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.finiteDom"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(dom(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/inv1/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))&gt;max(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))&gt;max(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/inv1/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p10"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(dom({min(dom(SCXML_eq))} ⩤ SCXML_eq))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq) ∖ {min(dom(SCXML_eq))})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p18"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p19"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p20,p21">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p1,p3,p13,p10,p8,p4,p11,p16"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p2,p12,p9,p14,p15,p20,p21,p7,p1,p3,p13,p10,p8,p4,p11,p16">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p24">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p1,p3,p13,p10,p8,p4,p11,p16"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p2,p12,p9,p14,p15,p20,p21,p7,p1,p3,p13,p10,p8,p4,p11,p16">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p21">
                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p21"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p25">
                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p8"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/finite_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/finite_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p17,p18,p19,p20,p21,p22,p23,p24,p7,p11,p15"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p1,p2">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(SCXML_eq)∧finite(SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))=0">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(SCXML_eq∪SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))=0">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))=max(dom(SCXML_eq))+1">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_eq_ext))=max(dom(SCXML_eq))+1">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/finite_eq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p10"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite set" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p1">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p15">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22,p23"/>
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite({min(dom(SCXML_eq))} ⩤ SCXML_eq)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="finite(SCXML_iq)">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="finite(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="{min(dom(SCXML_eq))} ⩤ SCXML_eq⊆SCXML_eq"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≤x"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="SCXML_eq"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.finiteSet:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="inv3/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite of domain of a relation" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.finiteDom"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p10"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite set" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p1">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p15">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22,p23"/>
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite({min(dom(SCXML_iq))} ⩤ SCXML_iq)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="{min(dom(SCXML_iq))} ⩤ SCXML_iq⊆SCXML_iq"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="SCXML_iq"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.finiteSet:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p1">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite set" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p2">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p19">
                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p20,p21,p22,p23,p24,p25,p26,p7,p11"/>
                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(dom(SCXML_iq_ext) ⩤ SCXML_iq)∧finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(dom(SCXML_iq_ext) ⩤ SCXML_iq)∧⊤"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(dom(SCXML_iq_ext) ⩤ SCXML_iq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="dom(SCXML_iq_ext) ⩤ SCXML_iq⊆SCXML_iq"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(SCXML_iqSCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite((dom(SCXML_iq_ext) ⩤ SCXML_iq)∪SCXML_iq_ext)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="SCXML_iq"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.relOvrRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.finiteSet:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p14"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p15"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay=" rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p1">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite set" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p2">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p21">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p22,p23,p24,p25,p26,p27,p28,p11"/>
                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(dom(SCXML_iq_ext) ⩤ SCXML_iq)∧finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(dom(SCXML_iq_ext) ⩤ SCXML_iq)∧⊤"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="finite(dom(SCXML_iq_ext) ⩤ SCXML_iq)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="dom(SCXML_iq_ext) ⩤ SCXML_iq⊆SCXML_iq"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(SCXML_iqSCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite((dom(SCXML_iq_ext) ⩤ SCXML_iq)∪SCXML_iq_ext)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="SCXML_iq"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.relOvrRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.finiteSet:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p21"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p22"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p23,p24">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p1,p2,p13,p11,p9,p4,p12"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p7,p14,p8,p3,p10,p15,p16,p23,p24,p6,p1,p2,p13,p11,p9,p4,p12">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p1,p2,p13,p11,p9,p4,p12"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p7,p14,p8,p3,p10,p15,p16,p23,p24,p6,p1,p2,p13,p11,p9,p4,p12">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p24">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p24"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p28">
                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="p12"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p22,p23">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p1,p3,p15,p13,p11,p5,p14,p18"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2,p9,p10,p4,p12,p16,p17,p22,p23,p8,p1,p3,p15,p13,p11,p5,p14,p18">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p26">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p1,p3,p15,p13,p11,p5,p14,p18"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p4">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p23">
                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p23"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p27">
                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p14"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="finite_dom_eq/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite of domain of a relation" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.finiteDom"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="finite_dom_iq/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite of domain of a relation" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.finiteDom"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/finite_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p1" org.eventb.core.prHyps=""/>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureRaiseExternalTrigger/queue_extension_extends_sequeuce/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p18"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p19"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p20,p21">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p1,p3,p13,p10,p8,p4,p11,p16"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p2,p12,p9,p14,p15,p20,p21,p7,p1,p3,p13,p10,p8,p4,p11,p16">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p24">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p1,p3,p13,p10,p8,p4,p11,p16"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p2,p12,p9,p14,p15,p20,p21,p7,p1,p3,p13,p10,p8,p4,p11,p16">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p21">
                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p21"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p25">
                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p8"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_eq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧dom(SCXML_eq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(SCXML_eq_ext)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_eq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq_ext)⇒b≤x)∧¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_eq)⇒b≥x"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_eq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/finite_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p10"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="finite set" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p1">
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p15">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16,p17,p18,p19,p20,p21,p22,p23"/>
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prExprRef name=".expr" org.eventb.core.prRef="e0"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≤x"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite({min(dom(SCXML_iq))} ⩤ SCXML_iq)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="{min(dom(SCXML_iq))} ⩤ SCXML_iq⊆SCXML_iq"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="SCXML_iq"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.finiteSet:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/finite_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p7,p11"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p1,p2">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(SCXML_iq∪SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(SCXML_iq)∧finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/finite_iq/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p7,p11,p15"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p1,p2">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="finite(SCXML_iq∪SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))=0">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))=0">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(SCXML_iq)∧finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)">
            <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/queue_extension_extends_sequeuce/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p22,p23">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p1,p3,p15,p13,p11,p5,p14,p18"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2,p9,p10,p4,p12,p16,p17,p22,p23,p8,p1,p3,p15,p13,p11,p5,p14,p18">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p26">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p1,p3,p15,p13,p11,p5,p14,p18"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p4">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p23">
                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p23"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p27">
                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p14"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/queue_extension_extends_sequeuce/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p21"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p22"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p23,p24">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p1,p2,p13,p11,p9,p4,p12"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p7,p14,p8,p3,p10,p15,p16,p23,p24,p6,p1,p2,p13,p11,p9,p4,p12">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p6,p1,p2,p13,p11,p9,p4,p12"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p7,p14,p8,p3,p10,p15,p16,p23,p24,p6,p1,p2,p13,p11,p9,p4,p12">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p24">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p24"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p28">
                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Existence of minimum or maximum in goal with finite hypothesis" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="p12"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_iq_ext)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(SCXML_eq)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.finiteHypBoundedGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/grd1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/grd1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_iq∈ℕ ⇸ SCXML_FutureInternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_eq∈ℕ ⇸ SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq_ext∈ℕ ⤀ SCXML_raisedTriggers"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(SCXML_iq)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(dom(SCXML_eq))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(SCXML_eq)">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(dom(SCXML_iq))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/grd1/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p13"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p6,p7" org.eventb.core.prInfHyps="p15"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p34"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p40"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p41"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p45,p46">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p45,p46" org.eventb.core.prInfHyps="p48"/>
                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p45,p46" org.eventb.core.prInfHyps="p49"/>
                                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="p45,p46" org.eventb.core.prInfHyps="p50"/>
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p48"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p49"/>
                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq_ext" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬⊥∧⊤⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))=0"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))=0"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="min(dom(SCXML_iq_ext))=0"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬⊥∧¬⊤⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬⊤∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬SCXML_raisedTriggers=(∅ ⦂ ℙ(SCXML_TRIGGER))∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒¬SCXML_iq_ext=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)∧dom(SCXML_iq)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq)⇒b≥x)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_raisedTriggers≠(∅ ⦂ ℙ(SCXML_TRIGGER))∧SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒dom(SCXML_iq_ext)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈dom(SCXML_iq_ext)⇒b≤x)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬⊥∧¬⊤⇒min(dom(SCXML_iq_ext))&gt;max(dom(SCXML_iq))+1"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="disjointQueues/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p7,p5,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p3,p28,p6,p29"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueInternalTrigger/SCXML_storeDequeuedTrigger/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p31" org.eventb.core.prInfHyps="p30"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p30"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p36"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41"/>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_iq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_iq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_iq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_dequeueExternalTrigger/SCXML_storeDequeuedTrigger/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p31" org.eventb.core.prInfHyps="p30"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p30"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p36"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41"/>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="SCXML_uc∈BOOL">
            <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧⊤ ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="SCXML_eq≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_eq∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × SCXML_TRIGGER) ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·⊤∧⊤∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧¬s=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬⊤⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·⊤∧⊤∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureTriggeredTransitionSet/typeof_SCXML_raisedTriggers/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p17,p6,p23,p7,p28,p27,p24,p9,p16,p10,p3,p13,p30,p25,p11,p33,p2,p12,p14,p15,p34,p20,p22,p4,p31,p35,p18,p8,p32,p29,p5,p26,p19"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p21,p17,p6,p23,p7,p28,p27,p24,p9,p16,p10,p3,p13,p30,p25,p11,p33,p2,p12,p14,p15,p34,p20,p22,p4,p31,p35,p18,p8,p32,p29,p5,p26,p19">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_trigger" org.eventb.core.type="SCXML_TRIGGER"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_trigger∈SCXML_dt"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="SCXML_iq∈InternalQueueType"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SCXML_futureUntriggeredTransitionSet/typeof_SCXML_raisedTriggers/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="SCXML_TRIGGER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p1,p20,p21,p22,p23,p24,p25,p26,p27,p28,p4,p29,p30,p31,p32,p33,p34,p35"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="ExternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
        <org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_dt" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        <org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(SCXML_TRIGGER)×ℙ(ℙ(ℤ×SCXML_TRIGGER)))"/>
        <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℤ)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Seq_concat∈Seq(SCXML_TRIGGER) × Seq(SCXML_TRIGGER) → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → SCXML_TRIGGER⇒card(s)=n"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="InternalQueueType=Seq(SCXML_FutureInternalTrigger)">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="SCXML_uc∈BOOL"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) → ℙ(ℕ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_iq∈InternalQueueType">
            <org.eventb.core.prIdent name="InternalQueueType" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER))"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Seq_length∈Seq(SCXML_TRIGGER) → ℕ"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Seq_concat=(λs1⦂ℙ(ℤ×SCXML_TRIGGER) ↦ s2⦂ℙ(ℤ×SCXML_TRIGGER)·s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1∧(i&lt;Seq_length(s1)⇒v=s1(i))∧(i≥Seq_length(s1)⇒v=s2(i − Seq_length(s1))) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×SCXML_TRIGGER) ↦ t⦂SCXML_TRIGGER·s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒0∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Seq_head∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → SCXML_TRIGGER">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_TRIGGER∈dom(Seq)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_FutureExternalTrigger∈dom(Seq)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="SCXML_dt≠(∅ ⦂ ℙ(SCXML_TRIGGER))⇒(∃t⦂SCXML_TRIGGER·SCXML_dt={t})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_uc=FALSE"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail∈Seq(SCXML_TRIGGER) ∖ {∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)} → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Seq=(λT⦂ℙ(SCXML_TRIGGER)·T⊆SCXML_TRIGGER ∣ {n⦂ℤ,s⦂ℙ(ℤ×SCXML_TRIGGER)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)⇒finite(s))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Seq_append∈Seq(SCXML_TRIGGER) × SCXML_TRIGGER → Seq(SCXML_TRIGGER)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×SCXML_TRIGGER×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_dt⊆SCXML_TRIGGER"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Seq_length=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER) ∣ card(s))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)⇒finite(s)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_iq∩SCXML_eq=(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER))">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
            <org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×SCXML_TRIGGER),t⦂SCXML_TRIGGER·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s∈Seq(SCXML_TRIGGER)∧t∈SCXML_TRIGGER⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ SCXML_TRIGGER)))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="SCXML_FutureInternalTrigger∈dom(Seq)">
            <org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_eq∈ExternalQueueType">
            <org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(ℤ×SCXML_TRIGGER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×SCXML_TRIGGER),s2⦂ℙ(ℤ×SCXML_TRIGGER)·SCXML_TRIGGER∈dom(Seq)∧Seq∈ℙ(SCXML_TRIGGER) ⇸ ℙ(ℙ(ℤ × SCXML_TRIGGER))∧(s1∈Seq(SCXML_TRIGGER)∧s2∈Seq(SCXML_TRIGGER)⇒(∀i⦂ℤ,v⦂SCXML_TRIGGER·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × SCXML_TRIGGER) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ SCXML_TRIGGER)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ SCXML_TRIGGER))))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_dt=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="ExternalQueueType=Seq(SCXML_FutureExternalTrigger)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×SCXML_TRIGGER)·s∈Seq(SCXML_TRIGGER)∧s≠(∅ ⦂ ℙ(ℤ×SCXML_TRIGGER)) ∣ {i⦂ℤ,v⦂SCXML_TRIGGER·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×SCXML_TRIGGER)×ℙ(ℤ×SCXML_TRIGGER))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
