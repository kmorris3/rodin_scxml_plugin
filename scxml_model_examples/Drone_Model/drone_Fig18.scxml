<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:iumlb="urn:xmlns:ac.soton.uk:iumlb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" initial="OFF" name="drone" version="1.0" iumlb:refinement="0">
  <!-- <iumlb:invariant iumlb:refinement="1" predicate="" name=""/> -->
  <datamodel>
    <!-- How to define GPS coordinates -->
    <data expr="0" id="startPos_x" iumlb:type="NAT" iumlb:refinement="1" />
    <data expr="0" id="startPos_y" iumlb:type="NAT" iumlb:refinement="1" />
    <data expr="0" id="startPos_z" iumlb:type="NAT" iumlb:refinement="1" />
    <data expr="0" id="getGPS_x" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="0" id="getGPS_y" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="0" id="getGPS_z" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="::NAT" id="rise" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="10" id="min" iumlb:type="NAT" iumlb:refinement="2" />
    <data expr="0" id="dir" iumlb:type="NAT" iumlb:refinement="3" />
    <data expr="::{0..100}" id="charge" iumlb:type="{0..100}" iumlb:refinement="4" />
  </datamodel>


  <state id="OFF" iumlb:refinement="1">
    <transition event="on" target="START" iumlb:label="OFF_START"/>
  </state>

  <state id="START" iumlb:refinement="1">
    <onentry>
      <!-- execute startup() -->
      <assign expr="::NAT" location="getGPS_x" iumlb:refinement="1"/>
      <assign expr="::NAT" location="getGPS_y" iumlb:refinement="1"/>
      <assign expr="::NAT" location="getGPS_z" iumlb:refinement="1"/>
    </onentry>
    <transition event="toTakeoff" target="OPERATIONAL" iumlb:label="START_OPERATIONAL"/>
  </state>

  <state id="OPERATIONAL" iumlb:refinement="1">
    <!-- In refinement 5 we are adding another parallel state.   -->
    <!-- Do we need to update the refinement level for the parallel construct? -->
    <parallel id="FLYOP_BATTERYOP" iumlb:refinement="4">
      <!-- Flying Region -->
      <state id="FLYOP" iumlb:refinement="4">
        <initial>
          <transition target="TAKEOFF"/>
        </initial>

        <state id="TAKEOFF" iumlb:refinement="1">
          <onentry>
            <!-- execute startPos = getGPS() -->
            <assign expr="getGPS_x" location="startPos_x" iumlb:refinement="1"/>
            <assign expr="getGPS_y" location="startPos_y" iumlb:refinement="1"/>
            <assign expr="getGPS_z" location="startPos_z" iumlb:refinement="1"/>
            <!-- execute rise() -->
            <assign expr="getGPS_y + rise" location="getGPS_y" iumlb:refinement="1"/>
          </onentry>
          <initial>
            <transition target="CLIMB" iumlb:refinement="2"/>
          </initial>

          <state id="CLIMB" iumlb:refinement="2">
            <initial>
              <transition target="CLIMB2" iumlb:refinement="5" />
            </initial>

            <state id="CLIMB2" iumlb:refinement="5">
              <transition event="cancel" target="ABORT">
                <raise event="toLand"/>
              </transition>
            </state>

            <state id="ABORT" iumlb:refinement="5"/>

            <transition target="HOVER" iumlb:label="CLIMB_HOVER">
              <!-- getAlt()=getGPS_y -->
              <iumlb:guard predicate="getGPS_y&gt;min" name="check_min"/>
              <raise event="toFly"/>
            </transition>
          </state> <!-- End of State=CLIMB -->

          <state id="HOVER" iumlb:refinement="2">
            <!-- <onentry> -->
              <!-- execute hover() -->
              <!-- <assign expr="" location="" iumlb:refinement="1"/> -->
            <!-- </onentry> -->
          </state>

          <transition event="toFly" target="FLY" iumlb:label="TAKEOFF_FLY"/>
          <!-- Tansition added in fig 16 -->
          <transition event="toLand" target="DESCEND" iumlb:label="TAKEOFF_DESCEND"/>
        </state> <!-- End of State=TAKEOFF -->

        <state id="FLY" iumlb:refinement="1">
          <transition event="toLand" target="DESCEND" iumlb:label="FLY_DESCEND"/>
        </state>

        <state id="DESCEND" iumlb:refinement="1">
          <initial>
            <transition target="ALIGN" iumlb:refinement="3"/>
          </initial>

          <state id="ALIGN" iumlb:refinement="3">
            <onentry>
              <!-- execute rotate(1) -->
              <!-- <assign expr="" location="" iumlb:refinement="3"/> -->
              <assign expr="1" location="dir" iumlb:refinement="3"/>
            </onentry>
            <transition target="GOFORWARD" iumlb:label="ALIGN_GOFORWARD">
              <iumlb:guard predicate="isAligned(startPos_x,startPos_y,startPos_z)" name="check_Aligned"/>
            </transition>
          </state>

          <state id="GOFORWARD" iumlb:refinement="3">
            <onentry>
              <!-- execute goForward() -->
              <!-- <assign expr="" location="" iumlb:refinement="3"/> -->
              <assign expr="dir*-1" location="dir" iumlb:refinement="3"/>
            </onentry>
            <transition target="DESCEND2" iumlb:label="GOFORWARD_DESCEND2">
              <assign expr="startPos_x" location="getGPS_x" iumlb:refinement="3"/>
              <assign expr="startPos_y" location="getGPS_y" iumlb:refinement="3"/>
              <assign expr="startPos_z" location="getGPS_z" iumlb:refinement="3"/>
            </transition>
          </state>

          <state id="DESCEND2" iumlb:refinement="3">
            <!-- <onentry> -->
              <!-- execute descend() -->
              <!-- <assign expr="" location="" iumlb:refinement="3"/> -->
            <!-- </onentry> -->
          </state>

          <transition event="Landed" target="LANDED" iumlb:label="DESCEND_LANDED"/>
        </state> <!-- End of State=DESCEND -->

        <final id="LANDED" iumlb:refinement="1"/> 
        <transition event="off" target="SHUTDOWN" iumlb:label="LANDED_SHUTDOWN"/>
        <transition event="toTakeoff" target="OPERATIONAL" iumlb:label="LANDED_OPERATIONAL"/>
      </state> <!-- End FLYOP Region -->

      <!-- Battery Operation Region -->
      <state id="BATTERYOP" iumlb:refinement="4">
        <initial>
          <transition target="BATERRY" />
        </initial>

        <state id="BATERRY">
          <onentry>
            <!-- execute charge=getCharge() -->
            <assign expr="::{0..100}" location="charge" iumlb:refinement="4"/>
          </onentry>
          <transition target="BATERRY" iumlb:label="BATERRY_BATERRY">
            <iumlb:guard predicate="charge&lt;10" name="check_charge"/>
            <raise event="toLand"/>
          </transition>
        </state>
      </state>  <!-- End BATERRYOP Region -->

      <!-- Sensor Operation Region -->
      <state id="SENSOROP" iumlb:refinement="5">
        <initial>
          <transition target="SENSOR" iumlb:refinement="5"/>
        </initial>

        <state id="SENSOR" iumlb:refinement="5">
          <transition event="obstacleDetected" target="CANCELING">
            <raise event="cancel"/>
          </transition>
        </state>

        <state id="CANCELING" iumlb:refinement="5"/>
      </state>  <!-- End SENSOROP Region -->

    </parallel> <!-- End of OPERATIONAL PARALLEL -->
  </state> <!-- End of State=OPERATIONAL -->

  <state id="SHUTDOWN" iumlb:refinement="1">
    <!-- <onentry> -->
      <!-- execute shutdown() -->
      <!-- <assign expr="" location="" iumlb:refinement="1"/> -->
    <!-- </onentry> -->
    <transition target="OFF" iumlb:label="SHUTDOWN_OFF"/>
  </state>

</scxml>

