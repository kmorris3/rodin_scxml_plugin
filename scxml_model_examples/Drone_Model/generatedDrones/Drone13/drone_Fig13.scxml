<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:iumlb="urn:xmlns:ac.soton.uk:iumlb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" initial="OFF" name="drone" version="1.0" iumlb:refinement="0">
  <!-- <iumlb:invariant iumlb:refinement="1" predicate="" name=""/> -->
  <datamodel>
    <!-- How to define GPS coordinates -->
    <data expr="0" id="startPos_x" iumlb:type="NAT" iumlb:refinement="1" />
    <data expr="0" id="startPos_y" iumlb:type="NAT" iumlb:refinement="1" />
    <data expr="0" id="startPos_z" iumlb:type="NAT" iumlb:refinement="1" />
    <data expr="0" id="getGPS_x" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="0" id="getGPS_y" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="0" id="getGPS_z" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="::NAT" id="rise" iumlb:type="NAT" iumlb:refinement="1"/>
    <data expr="10" id="minimum" iumlb:type="NAT" iumlb:refinement="2" />
  </datamodel>

  <state id="OFF" iumlb:refinement="1">
    <transition event="on" target="START" iumlb:label="OFF_START"/>
  </state>

  <state id="START" iumlb:refinement="1">
    <onentry>
      <!-- execute startup() -->
      <assign expr="::NAT" location="getGPS_x" iumlb:refinement="1"/>
      <assign expr="::NAT" location="getGPS_y" iumlb:refinement="1"/>
      <assign expr="::NAT" location="getGPS_z" iumlb:refinement="1"/>
    </onentry>
    <transition event="toTakeoff" target="OPERATIONAL" iumlb:label="START_OPERATIONAL"/>
  </state>

  <state id="OPERATIONAL" iumlb:refinement="1">
    <initial>
      <transition target="TAKEOFF"/>
    </initial>

      <state id="TAKEOFF" iumlb:refinement="1">
        <onentry>
          <!-- execute startPos = getGPS() -->
          <assign expr="getGPS_x" location="startPos_x" iumlb:refinement="1"/>
          <assign expr="getGPS_y" location="startPos_y" iumlb:refinement="1"/>
          <assign expr="getGPS_z" location="startPos_z" iumlb:refinement="1"/>
          <!-- execute rise() -->
          <assign expr="getGPS_y + rise" location="getGPS_y" iumlb:refinement="1"/>
        </onentry>
        <initial>
          <transition target="CLIMB" iumlb:refinement="2"/>
        </initial>

        <state id="CLIMB" iumlb:refinement="2">
          <transition target="HOVER" iumlb:label="CLIMB_HOVER">
            <!-- getAlt()=getGPS_y -->
            <iumlb:guard predicate="getGPS_y&gt;minimum" name="check_min"/>
            <raise event="toFly"/>
          </transition>
        </state>

        <state id="HOVER" iumlb:refinement="2">
          <!-- <onentry> -->
            <!-- execute hover() -->
            <!-- <assign expr="" location="" iumlb:refinement="1"/> -->
          <!-- </onentry> -->
        </state>

        <transition event="toFly" target="FLY" iumlb:label="TAKEOFF_FLY"/>
        <!-- Tansition added in fig 16 -->
        <transition event="toLand" target="DESCEND" iumlb:label="TAKEOFF_DESCEND"/>
      </state> <!-- End of State=TAKEOFF -->

      <state id="FLY" iumlb:refinement="1">
        <transition event="toLand" target="DESCEND" iumlb:label="FLY_DESCEND"/>
      </state>

      <state id="DESCEND" iumlb:refinement="1">
        <transition event="Landed" target="LANDED" iumlb:label="DESCEND_LANDED"/>
      </state>

      <state id="LANDED" iumlb:refinement="1"> 
        <transition event="off" target="SHUTDOWN" iumlb:label="LANDED_SHUTDOWN"/>
        <transition event="toTakeoff" target="OPERATIONAL" iumlb:label="LANDED_OPERATIONAL"/>
      </state>

  </state> <!-- End of State=OPERATIONAL -->

  <state id="SHUTDOWN" iumlb:refinement="1">
    <!-- <onentry> -->
      <!-- execute shutdown() -->
      <!-- <assign expr="" location="" iumlb:refinement="1"/> -->
    <!-- </onentry> -->
    <transition target="OFF" iumlb:label="SHUTDOWN_OFF"/>
  </state>

</scxml>
