<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
<org.eventb.core.prProof name="INITIALISATION/minimum_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="10∈ℕ"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∧({FALSE}∩{TRUE})∩({FALSE}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒partition({TRUE},{FALSE}∩{TRUE},{FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__LANDED_OPERATIONAL/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p35,p36,p37"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p35,p36,p37"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p16,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p23,p24,p25,p26,p18,p27,p28,p29,p19,p30,p31,p20,p32,p21,p22"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p16,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p23,p24,p25,p26,p18,p27,p28,p29,p19,p30,p31,p20,p32,p21,p22"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p37,p35,p36"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p37,p35,p36"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53,p54"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56,p37,p57,p58,p59,p60,p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56,p37,p57,p58,p59,p60,p54"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61,p62,p63,p64,p65,p66,p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61,p62,p63,p64,p65,p66,p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p76"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p91">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="p90" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="p90" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="p90" org.eventb.core.prInfHyps="p97"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="p90" org.eventb.core.prInfHyps="p98"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p93"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p95"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p97"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99,p100,p101,p102,p103,p104,p105"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p106"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p107"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p108"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p109"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p110"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p111"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p112"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p113"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p114"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p115"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p116"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p117"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p118"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p119"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p120"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p121"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p122"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p123"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p124"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p125"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p126"/>
<org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p127"/>
<org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p128"/>
<org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p129"/>
<org.eventb.core.prHypAction name="HIDE24" org.eventb.core.prHyps="p130"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p91" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p131">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with LANDED=TRUE" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p99" org.eventb.core.prInfHyps="p132"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p102" org.eventb.core.prInfHyps="p133"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p104" org.eventb.core.prInfHyps="p134"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p105" org.eventb.core.prInfHyps="p135"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p99,p102,p104,p105"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p132" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p136"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p133" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p137"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p134" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p138"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p135" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p139"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_et=toTakeoff" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p140" org.eventb.core.prInfHyps="p141"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p140"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p142"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p143"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p144"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p11,p12,p39"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}" org.eventb.core.prHyps="p17">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p145"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p146"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p147"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p142" org.eventb.core.prInfHyps="p148"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p143" org.eventb.core.prInfHyps="p149"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p144" org.eventb.core.prInfHyps="p150"/>
<org.eventb.core.prHypAction name="DESELECT6" org.eventb.core.prHyps="p13,p14,p15,p142,p143,p144"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1" org.eventb.core.prHyps="p52">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p151" org.eventb.core.prInfHyps="p152"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p56" org.eventb.core.prInfHyps="p153"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p148" org.eventb.core.prInfHyps="p154"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p149" org.eventb.core.prInfHyps="p155"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p151,p56,p148,p149"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}" org.eventb.core.prHyps="p53">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p156"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p157"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p158"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p52" org.eventb.core.prInfHyps="p159"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p152" org.eventb.core.prInfHyps="p160"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p153" org.eventb.core.prInfHyps="p161"/>
<org.eventb.core.prHypAction name="FORWARD_INF6" org.eventb.core.prHyps="p154" org.eventb.core.prInfHyps="p162"/>
<org.eventb.core.prHypAction name="FORWARD_INF7" org.eventb.core.prHyps="p155" org.eventb.core.prInfHyps="p163"/>
<org.eventb.core.prHypAction name="DESELECT8" org.eventb.core.prHyps="p34,p35,p36,p52,p152,p153,p154,p155"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OPERATIONAL=TRUE" org.eventb.core.prHyps="p90">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p164"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p165"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p82" org.eventb.core.prInfHyps="p166"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p84" org.eventb.core.prInfHyps="p167"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p61,p80,p82,p84"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p164" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p168"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p165" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p169"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p166" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p170"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p167" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p171"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with TAKEOFF=FALSE" org.eventb.core.prHyps="p137">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p86" org.eventb.core.prInfHyps="p172"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p100" org.eventb.core.prInfHyps="p173"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p101" org.eventb.core.prInfHyps="p174"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p136" org.eventb.core.prInfHyps="p175"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p86,p100,p101,p136"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p172"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with FLY=FALSE" org.eventb.core.prHyps="p138">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p87" org.eventb.core.prInfHyps="p176"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p173" org.eventb.core.prInfHyps="p177"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p175" org.eventb.core.prInfHyps="p178"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p87,p173,p175"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p176"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p178" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p179"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with DESCEND=FALSE" org.eventb.core.prHyps="p139">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p88" org.eventb.core.prInfHyps="p180"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p103" org.eventb.core.prInfHyps="p181"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p179" org.eventb.core.prInfHyps="p182"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p88,p103,p174,p179"/>
<org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p180"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p182" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p183"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with FLY=FALSE" org.eventb.core.prHyps="p138">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p181"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OFF=FALSE" org.eventb.core.prHyps="p169">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p79" org.eventb.core.prInfHyps="p184"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p81" org.eventb.core.prInfHyps="p185"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p168" org.eventb.core.prInfHyps="p186"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p79,p81,p168"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=FALSE" org.eventb.core.prHyps="p170">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p186" org.eventb.core.prInfHyps="p187"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p184,p186"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p187" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p188"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=SHUTDOWN" org.eventb.core.prHyps="p171">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p189"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p188" org.eventb.core.prInfHyps="p190"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p83,p185,p188"/>
<org.eventb.core.prHypAction name="SELECT3" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p190" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p183"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=FALSE" org.eventb.core.prHyps="p170">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p189"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p191">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with LANDED=TRUE" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p99" org.eventb.core.prInfHyps="p132"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p102" org.eventb.core.prInfHyps="p133"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p104" org.eventb.core.prInfHyps="p134"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p105" org.eventb.core.prInfHyps="p135"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p99,p102,p104,p105"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p132" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p136"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p133" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p137"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p134" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p138"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p135" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p139"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_et=toTakeoff" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p140" org.eventb.core.prInfHyps="p141"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p140"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}" org.eventb.core.prHyps="p13">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p142"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p143"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p144"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p11,p12,p39"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}" org.eventb.core.prHyps="p17">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p145"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p146"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p147"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p142" org.eventb.core.prInfHyps="p148"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p143" org.eventb.core.prInfHyps="p149"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p144" org.eventb.core.prInfHyps="p150"/>
<org.eventb.core.prHypAction name="DESELECT6" org.eventb.core.prHyps="p13,p14,p15,p142,p143,p144"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1" org.eventb.core.prHyps="p52">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p151" org.eventb.core.prInfHyps="p152"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p56" org.eventb.core.prInfHyps="p153"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p148" org.eventb.core.prInfHyps="p154"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p149" org.eventb.core.prInfHyps="p155"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p151,p56,p148,p149"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}" org.eventb.core.prHyps="p53">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p156"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p157"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p158"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p52" org.eventb.core.prInfHyps="p159"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p152" org.eventb.core.prInfHyps="p160"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p153" org.eventb.core.prInfHyps="p161"/>
<org.eventb.core.prHypAction name="FORWARD_INF6" org.eventb.core.prHyps="p154" org.eventb.core.prInfHyps="p162"/>
<org.eventb.core.prHypAction name="FORWARD_INF7" org.eventb.core.prHyps="p155" org.eventb.core.prInfHyps="p163"/>
<org.eventb.core.prHypAction name="DESELECT8" org.eventb.core.prHyps="p34,p35,p36,p52,p152,p153,p154,p155"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OPERATIONAL=TRUE" org.eventb.core.prHyps="p90">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p164"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p165"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p82" org.eventb.core.prInfHyps="p166"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p84" org.eventb.core.prInfHyps="p167"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p61,p80,p82,p84"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p164" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p168"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p165" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p169"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p166" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p170"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p167" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p171"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with TAKEOFF=FALSE" org.eventb.core.prHyps="p137">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p86" org.eventb.core.prInfHyps="p172"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p100" org.eventb.core.prInfHyps="p173"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p101" org.eventb.core.prInfHyps="p174"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p136" org.eventb.core.prInfHyps="p175"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p86,p100,p101,p136"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p172"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with FLY=FALSE" org.eventb.core.prHyps="p138">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p87" org.eventb.core.prInfHyps="p176"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p173" org.eventb.core.prInfHyps="p177"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p175" org.eventb.core.prInfHyps="p178"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p87,p173,p175"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p176"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p178" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p179"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with DESCEND=FALSE" org.eventb.core.prHyps="p139">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p88" org.eventb.core.prInfHyps="p180"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p103" org.eventb.core.prInfHyps="p181"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p179" org.eventb.core.prInfHyps="p182"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p88,p103,p174,p179"/>
<org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p180"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p182" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p183"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with FLY=FALSE" org.eventb.core.prHyps="p138">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p181"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OFF=FALSE" org.eventb.core.prHyps="p169">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p79" org.eventb.core.prInfHyps="p184"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p81" org.eventb.core.prInfHyps="p185"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p168" org.eventb.core.prInfHyps="p186"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p79,p81,p168"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=FALSE" org.eventb.core.prHyps="p170">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p186" org.eventb.core.prInfHyps="p187"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p184,p186"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p187" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p188"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=SHUTDOWN" org.eventb.core.prHyps="p171">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p189"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p188" org.eventb.core.prInfHyps="p190"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p83,p185,p188"/>
<org.eventb.core.prHypAction name="SELECT3" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p190" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p183"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=FALSE" org.eventb.core.prHyps="p170">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p189"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p177"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p177"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_et" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p149" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p164" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({TRUE}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p109" org.eventb.core.predicate="OPERATIONAL∈BOOL"/>
<org.eventb.core.prPred name="p168" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p135" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p155" org.eventb.core.predicate="({toLand}∪{toFly}∪SCXML_FutureInternalTrigger1)∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒partition({TRUE},{TRUE}∩{TRUE},{ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬toLand=cancel"/>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="⊤⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p106" org.eventb.core.predicate="SCXML_uc∈BOOL">
<org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬Landed=off"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p130" org.eventb.core.predicate="ABORT∈BOOL"/>
<org.eventb.core.prPred name="p151" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p115" org.eventb.core.predicate="FORWARD1∈BOOL">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p156" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger2∪{cancel}∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬toTakeoff=ShortStepReached"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬toFly=cancel"/>
<org.eventb.core.prPred name="p132" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({TRUE}∩{TRUE})"/>
<org.eventb.core.prPred name="p129" org.eventb.core.predicate="CLIMB2∈BOOL">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p116" org.eventb.core.predicate="TURN1∈BOOL">
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p146" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p189" org.eventb.core.predicate="{START}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p117" org.eventb.core.predicate="FORWARD2∈BOOL">
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p179" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({DESCEND}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p186" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({START}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p184" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p114" org.eventb.core.predicate="FLY∈BOOL"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬TurnDone=off"/>
<org.eventb.core.prPred name="p127" org.eventb.core.predicate="DESCEND2∈BOOL">
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p152" org.eventb.core.predicate="SCXML_raisedTriggers⊆{toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p138" org.eventb.core.predicate="FLY=FALSE"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)"/>
<org.eventb.core.prPred name="p140" org.eventb.core.predicate="SCXML_et∈SCXML_eq">
<org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p112" org.eventb.core.predicate="CLIMB∈BOOL">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p157" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p133" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬toTakeoff=on"/>
<org.eventb.core.prPred name="p111" org.eventb.core.predicate="TAKEOFF∈BOOL"/>
<org.eventb.core.prPred name="p139" org.eventb.core.predicate="DESCEND=FALSE"/>
<org.eventb.core.prPred name="p175" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="{TRUE}={TRUE}∪({ABORT}∩{TRUE})∧FALSE=ABORT"/>
<org.eventb.core.prPred name="p158" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p166" org.eventb.core.predicate="{START}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_et=toTakeoff"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬toTakeoff=Landed"/>
<org.eventb.core.prPred name="p113" org.eventb.core.predicate="HOVER∈BOOL">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p159" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p122" org.eventb.core.predicate="TURN4∈BOOL">
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬Landed=TurnDone"/>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="DESCEND=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p178" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∪({DESCEND}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p150" org.eventb.core.predicate="SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p188" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p183" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p124" org.eventb.core.predicate="DESCEND∈BOOL"/>
<org.eventb.core.prPred name="p137" org.eventb.core.predicate="TAKEOFF=FALSE"/>
<org.eventb.core.prPred name="p165" org.eventb.core.predicate="{OFF}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p169" org.eventb.core.predicate="OFF=FALSE"/>
<org.eventb.core.prPred name="p161" org.eventb.core.predicate="{toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬Landed=LongStepReached"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬ShortStepReached=off"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬on=off"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p173" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="LANDED=TRUE"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p121" org.eventb.core.predicate="FORWARD4∈BOOL">
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬LongStepReached=TurnDone"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬toTakeoff=TurnDone"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬Landed=ShortStepReached"/>
<org.eventb.core.prPred name="p162" org.eventb.core.predicate="SCXML_TRIGGER={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p108" org.eventb.core.predicate="START∈BOOL"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬toTakeoff=LongStepReached"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})"/>
<org.eventb.core.prPred name="p153" org.eventb.core.predicate="{toLand}∪{toFly}∪SCXML_FutureInternalTrigger1={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="FLY=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p148" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p170" org.eventb.core.predicate="START=FALSE"/>
<org.eventb.core.prPred name="p181" org.eventb.core.predicate="{FLY}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="FLY=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p191" org.eventb.core.predicate="FALSE=ABORT"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p142" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p107" org.eventb.core.predicate="OFF∈BOOL"/>
<org.eventb.core.prPred name="p128" org.eventb.core.predicate="LANDED∈BOOL"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬LongStepReached=off"/>
<org.eventb.core.prPred name="p110" org.eventb.core.predicate="SHUTDOWN∈BOOL"/>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="TRUE=TRUE⇒{TRUE}=({TRUE}∩{TRUE})∪({ABORT}∩{TRUE})∧({TRUE}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p171" org.eventb.core.predicate="FALSE=SHUTDOWN"/>
<org.eventb.core.prPred name="p136" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p180" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p141" org.eventb.core.predicate="toTakeoff∈SCXML_eq">
<org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p176" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p154" org.eventb.core.predicate="SCXML_TRIGGER={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬on=TurnDone"/>
<org.eventb.core.prPred name="p120" org.eventb.core.predicate="TURN3∈BOOL">
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬ShortStepReached=TurnDone"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p125" org.eventb.core.predicate="ALIGN∈BOOL">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p131" org.eventb.core.predicate="{TRUE}={TRUE}∪({ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬on=ShortStepReached"/>
<org.eventb.core.prPred name="p118" org.eventb.core.predicate="TURN2∈BOOL">
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p147" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p167" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p190" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p160" org.eventb.core.predicate="SCXML_raisedTriggers⊆{toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬ShortStepReached=LongStepReached"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬on=LongStepReached"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toLand=toFly"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)"/>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="DESCEND=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p134" org.eventb.core.predicate="{FLY}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p187" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p182" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p177" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p143" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩(SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p105" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p172" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬toTakeoff=off"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="TAKEOFF=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p174" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬on=Landed"/>
<org.eventb.core.prPred name="p119" org.eventb.core.predicate="FORWARD3∈BOOL">
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p144" org.eventb.core.predicate="SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p185" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p126" org.eventb.core.predicate="GOFORWARD∈BOOL">
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p163" org.eventb.core.predicate="({toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel})∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p145" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p123" org.eventb.core.predicate="HOLD∈BOOL">
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__LANDED_OPERATIONAL/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p89">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p89" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="LANDED=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒TRUE=TRUE"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__LANDED_OPERATIONAL/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p89">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p89" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="LANDED=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="ABORT=TRUE⇒TRUE=TRUE"/>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__START_OPERATIONAL/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33,p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33,p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p14,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p21,p22,p23,p24,p16,p25,p26,p27,p17,p28,p29,p18,p30,p19,p20"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p14,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p21,p22,p23,p24,p16,p25,p26,p27,p17,p28,p29,p18,p30,p19,p20"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50,p35,p33,p34"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50,p35,p33,p34"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p52"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54,p35,p55,p56,p57,p58,p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54,p35,p55,p56,p57,p58,p52"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59,p60,p61,p62,p63,p64,p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59,p60,p61,p62,p63,p64,p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p88">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p89"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p90"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p91"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p92"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p93"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p94"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p95"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p96"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p97"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p98"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p99"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p100"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p101"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p102"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p103"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p104"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p105"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p106"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p107"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p108"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p109"/>
<org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p110"/>
<org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p111"/>
<org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p112"/>
<org.eventb.core.prHypAction name="HIDE24" org.eventb.core.prHyps="p113"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p88" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p114">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=TRUE" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p59" org.eventb.core.prInfHyps="p115"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p116"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p117"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p81" org.eventb.core.prInfHyps="p118"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p59,p77,p80,p81"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p115" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p119"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p116" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p120"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p117" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p121"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p118" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p122"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_et=toTakeoff" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p123" org.eventb.core.prInfHyps="p124"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p123"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p125"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p126"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p127"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p9,p10,p37"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}" org.eventb.core.prHyps="p15">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p128"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p129"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p130"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p125" org.eventb.core.prInfHyps="p131"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p126" org.eventb.core.prInfHyps="p132"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p127" org.eventb.core.prInfHyps="p133"/>
<org.eventb.core.prHypAction name="DESELECT6" org.eventb.core.prHyps="p11,p12,p13,p125,p126,p127"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1" org.eventb.core.prHyps="p50">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p134" org.eventb.core.prInfHyps="p135"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p54" org.eventb.core.prInfHyps="p136"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p131" org.eventb.core.prInfHyps="p137"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p132" org.eventb.core.prInfHyps="p138"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p134,p54,p131,p132"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}" org.eventb.core.prHyps="p51">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p32" org.eventb.core.prInfHyps="p139"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p33" org.eventb.core.prInfHyps="p140"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p141"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p50" org.eventb.core.prInfHyps="p142"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p135" org.eventb.core.prInfHyps="p143"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p136" org.eventb.core.prInfHyps="p144"/>
<org.eventb.core.prHypAction name="FORWARD_INF6" org.eventb.core.prHyps="p137" org.eventb.core.prInfHyps="p145"/>
<org.eventb.core.prHypAction name="FORWARD_INF7" org.eventb.core.prHyps="p138" org.eventb.core.prInfHyps="p146"/>
<org.eventb.core.prHypAction name="DESELECT8" org.eventb.core.prHyps="p32,p33,p34,p50,p135,p136,p137,p138"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OFF=FALSE" org.eventb.core.prHyps="p120">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p78" org.eventb.core.prInfHyps="p147"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p79" org.eventb.core.prInfHyps="p148"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p119" org.eventb.core.prInfHyps="p149"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p78,p79,p119"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=OPERATIONAL" org.eventb.core.prHyps="p121">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p150"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p147" org.eventb.core.prInfHyps="p151"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p149" org.eventb.core.prInfHyps="p152"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p83,p147,p149"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p150"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p152" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p153"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=SHUTDOWN" org.eventb.core.prHyps="p122">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p82" org.eventb.core.prInfHyps="p154"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p153" org.eventb.core.prInfHyps="p155"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p82,p148,p153"/>
<org.eventb.core.prHypAction name="SELECT3" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p155" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p156"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=OPERATIONAL" org.eventb.core.prHyps="p121">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p154"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p151"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p157">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=TRUE" org.eventb.core.prHyps="p4">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p59" org.eventb.core.prInfHyps="p115"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p116"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p117"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p81" org.eventb.core.prInfHyps="p118"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p59,p77,p80,p81"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p115" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p119"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p116" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p120"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p117" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p121"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p118" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p122"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_et=toTakeoff" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p123" org.eventb.core.prInfHyps="p124"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p123"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p125"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p126"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p127"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p9,p10,p37"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}" org.eventb.core.prHyps="p15">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p128"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p129"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p130"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p125" org.eventb.core.prInfHyps="p131"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p126" org.eventb.core.prInfHyps="p132"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p127" org.eventb.core.prInfHyps="p133"/>
<org.eventb.core.prHypAction name="DESELECT6" org.eventb.core.prHyps="p11,p12,p13,p125,p126,p127"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1" org.eventb.core.prHyps="p50">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p134" org.eventb.core.prInfHyps="p135"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p54" org.eventb.core.prInfHyps="p136"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p131" org.eventb.core.prInfHyps="p137"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p132" org.eventb.core.prInfHyps="p138"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p134,p54,p131,p132"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}" org.eventb.core.prHyps="p51">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p32" org.eventb.core.prInfHyps="p139"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p33" org.eventb.core.prInfHyps="p140"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p141"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p50" org.eventb.core.prInfHyps="p142"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p135" org.eventb.core.prInfHyps="p143"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p136" org.eventb.core.prInfHyps="p144"/>
<org.eventb.core.prHypAction name="FORWARD_INF6" org.eventb.core.prHyps="p137" org.eventb.core.prInfHyps="p145"/>
<org.eventb.core.prHypAction name="FORWARD_INF7" org.eventb.core.prHyps="p138" org.eventb.core.prInfHyps="p146"/>
<org.eventb.core.prHypAction name="DESELECT8" org.eventb.core.prHyps="p32,p33,p34,p50,p135,p136,p137,p138"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OFF=FALSE" org.eventb.core.prHyps="p120">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p78" org.eventb.core.prInfHyps="p147"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p79" org.eventb.core.prInfHyps="p148"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p119" org.eventb.core.prInfHyps="p149"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p78,p79,p119"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=OPERATIONAL" org.eventb.core.prHyps="p121">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p150"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p147" org.eventb.core.prInfHyps="p151"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p149" org.eventb.core.prInfHyps="p152"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p83,p147,p149"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p150"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p152" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p153"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=SHUTDOWN" org.eventb.core.prHyps="p122">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p82" org.eventb.core.prInfHyps="p154"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p153" org.eventb.core.prInfHyps="p155"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p82,p148,p153"/>
<org.eventb.core.prHypAction name="SELECT3" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p155" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p156"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=OPERATIONAL" org.eventb.core.prHyps="p121">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p154"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p151"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_et" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p132" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="OPERATIONAL∈BOOL"/>
<org.eventb.core.prPred name="p138" org.eventb.core.predicate="({toLand}∪{toFly}∪SCXML_FutureInternalTrigger1)∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒partition({TRUE},{TRUE}∩{TRUE},{ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toLand=cancel"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="SCXML_uc∈BOOL">
<org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬Landed=off"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p113" org.eventb.core.predicate="ABORT∈BOOL"/>
<org.eventb.core.prPred name="p134" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="FORWARD1∈BOOL">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p139" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger2∪{cancel}∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬toTakeoff=ShortStepReached"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬toFly=cancel"/>
<org.eventb.core.prPred name="p112" org.eventb.core.predicate="CLIMB2∈BOOL">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="TURN1∈BOOL">
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p129" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="FORWARD2∈BOOL">
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p121" org.eventb.core.predicate="FALSE=OPERATIONAL"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="FLY∈BOOL">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p150" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬TurnDone=off"/>
<org.eventb.core.prPred name="p110" org.eventb.core.predicate="DESCEND2∈BOOL">
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p135" org.eventb.core.predicate="SCXML_raisedTriggers⊆{toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)"/>
<org.eventb.core.prPred name="p119" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪{TRUE}∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p123" org.eventb.core.predicate="SCXML_et∈SCXML_eq">
<org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="CLIMB∈BOOL">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p140" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p115" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({TRUE}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬toTakeoff=on"/>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="TAKEOFF∈BOOL">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{TRUE}={TRUE}∪({ABORT}∩{TRUE})∧FALSE=ABORT"/>
<org.eventb.core.prPred name="p141" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="SCXML_et=toTakeoff"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff=Landed"/>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="HOVER∈BOOL">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p142" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p105" org.eventb.core.predicate="TURN4∈BOOL">
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬Landed=TurnDone"/>
<org.eventb.core.prPred name="p133" org.eventb.core.predicate="SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p153" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p156" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p149" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p107" org.eventb.core.predicate="DESCEND∈BOOL">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p116" org.eventb.core.predicate="{OFF}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p120" org.eventb.core.predicate="OFF=FALSE"/>
<org.eventb.core.prPred name="p144" org.eventb.core.predicate="{toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬Landed=LongStepReached"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬ShortStepReached=off"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬on=off"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="FORWARD4∈BOOL">
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="START=TRUE"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬LongStepReached=TurnDone"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬toTakeoff=TurnDone"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬Landed=ShortStepReached"/>
<org.eventb.core.prPred name="p145" org.eventb.core.predicate="SCXML_TRIGGER={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="START∈BOOL"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬toTakeoff=LongStepReached"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})"/>
<org.eventb.core.prPred name="p136" org.eventb.core.predicate="{toLand}∪{toFly}∪SCXML_FutureInternalTrigger1={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p131" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p157" org.eventb.core.predicate="FALSE=ABORT"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p125" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="OFF∈BOOL"/>
<org.eventb.core.prPred name="p111" org.eventb.core.predicate="LANDED∈BOOL">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬LongStepReached=off"/>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="SHUTDOWN∈BOOL"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TRUE=TRUE⇒{TRUE}=({TRUE}∩{TRUE})∪({ABORT}∩{TRUE})∧({TRUE}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p122" org.eventb.core.predicate="FALSE=SHUTDOWN"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p147" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p124" org.eventb.core.predicate="toTakeoff∈SCXML_eq">
<org.eventb.core.prIdent name="SCXML_eq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p137" org.eventb.core.predicate="SCXML_TRIGGER={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬on=TurnDone"/>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="TURN3∈BOOL">
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p152" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({FALSE}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬ShortStepReached=TurnDone"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p108" org.eventb.core.predicate="ALIGN∈BOOL">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p114" org.eventb.core.predicate="{TRUE}={TRUE}∪({ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on=ShortStepReached"/>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="TURN2∈BOOL">
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p130" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p118" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p155" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p143" org.eventb.core.predicate="SCXML_raisedTriggers⊆{toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬ShortStepReached=LongStepReached"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬on=LongStepReached"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toLand=toFly"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)"/>
<org.eventb.core.prPred name="p154" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p151" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p126" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩(SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬toTakeoff=off"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=Landed"/>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="FORWARD3∈BOOL">
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p127" org.eventb.core.predicate="SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p148" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p109" org.eventb.core.predicate="GOFORWARD∈BOOL">
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p146" org.eventb.core.predicate="({toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel})∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p128" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p117" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p106" org.eventb.core.predicate="HOLD∈BOOL">
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__START_OPERATIONAL/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p85">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p85" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒TRUE=TRUE"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__START_OPERATIONAL/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p85">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p85" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="ABORT=TRUE⇒TRUE=TRUE"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toLand__TAKEOFF_DESCEND/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p74" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p96">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94,p95"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p96" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∧({FALSE}∩{TRUE})∩({FALSE}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒partition({TRUE},{FALSE}∩{TRUE},{FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="CLIMB=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toLand__TAKEOFF_DESCEND/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p95">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93,p94"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p95" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toLand__TAKEOFF_DESCEND/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p95">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93,p94"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p95" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="cancel__CLIMB2_ABORT/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12" org.eventb.core.prSets="SCXML_TRIGGER">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38,p39,p40"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38,p39,p40"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p19,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p26,p27,p28,p29,p21,p30,p31,p32,p22,p33,p34,p23,p35,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p19,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p26,p27,p28,p29,p21,p30,p31,p32,p22,p33,p34,p23,p35,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55,p40,p38,p39"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55,p40,p38,p39"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56,p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56,p57"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59,p40,p60,p61,p62,p63,p57"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59,p40,p60,p61,p62,p63,p57"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64,p65,p66,p67,p68,p69,p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64,p65,p66,p67,p68,p69,p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p77"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p79">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p79" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p93">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p93" org.eventb.core.prHyps="p92">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p98">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p92" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="p92" org.eventb.core.prInfHyps="p96"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="p92" org.eventb.core.prInfHyps="p97"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p98" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p102">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p96"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100,p101"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p99" org.eventb.core.prInfHyps="p103"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p104" org.eventb.core.prHyps="p99" org.eventb.core.prInfHyps="p105"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="p99" org.eventb.core.prInfHyps="p106"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p103" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p105"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p106" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108,p109"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p110" org.eventb.core.prHyps="p107" org.eventb.core.prInfHyps="p111"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p112" org.eventb.core.prHyps="p107" org.eventb.core.prInfHyps="p113"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p114" org.eventb.core.prHyps="p107" org.eventb.core.prInfHyps="p115"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="p107" org.eventb.core.prInfHyps="p116"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p111"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p113"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p115"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p116" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p117,p118,p119,p120,p121,p122,p123"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p124"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p125"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p126"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p127"/>
<org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p128"/>
<org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p129"/>
<org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p130"/>
<org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p131"/>
<org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p132"/>
<org.eventb.core.prHypAction name="HIDE9" org.eventb.core.prHyps="p133"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p134"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p135"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p136"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p137"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p138"/>
<org.eventb.core.prHypAction name="HIDE15" org.eventb.core.prHyps="p139"/>
<org.eventb.core.prHypAction name="HIDE16" org.eventb.core.prHyps="p140"/>
<org.eventb.core.prHypAction name="HIDE17" org.eventb.core.prHyps="p141"/>
<org.eventb.core.prHypAction name="HIDE18" org.eventb.core.prHyps="p142"/>
<org.eventb.core.prHypAction name="HIDE19" org.eventb.core.prHyps="p143"/>
<org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p144"/>
<org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p145"/>
<org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p146"/>
<org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p147"/>
<org.eventb.core.prHypAction name="HIDE24" org.eventb.core.prHyps="p148"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with CLIMB2=TRUE" org.eventb.core.prHyps="p11">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p100" org.eventb.core.prInfHyps="p149"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p101" org.eventb.core.prInfHyps="p150"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p100,p101"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p149" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p151"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p150" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p152"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_it=cancel" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p153" org.eventb.core.prInfHyps="p154"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p153"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}" org.eventb.core.prHyps="p16">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p155"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p156"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p42" org.eventb.core.prInfHyps="p157"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p14,p15,p42"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}" org.eventb.core.prHyps="p20">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p158"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p159"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p160"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p155" org.eventb.core.prInfHyps="p161"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p156" org.eventb.core.prInfHyps="p162"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p157" org.eventb.core.prInfHyps="p163"/>
<org.eventb.core.prHypAction name="DESELECT6" org.eventb.core.prHyps="p16,p17,p18,p155,p156,p157"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1" org.eventb.core.prHyps="p55">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p164" org.eventb.core.prInfHyps="p165"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p59" org.eventb.core.prInfHyps="p166"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p161" org.eventb.core.prInfHyps="p167"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p162" org.eventb.core.prInfHyps="p168"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p164,p59,p161,p162"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}" org.eventb.core.prHyps="p56">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p169"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p170"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p171"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p55" org.eventb.core.prInfHyps="p172"/>
<org.eventb.core.prHypAction name="FORWARD_INF4" org.eventb.core.prHyps="p165" org.eventb.core.prInfHyps="p173"/>
<org.eventb.core.prHypAction name="FORWARD_INF5" org.eventb.core.prHyps="p166" org.eventb.core.prInfHyps="p174"/>
<org.eventb.core.prHypAction name="FORWARD_INF6" org.eventb.core.prHyps="p167" org.eventb.core.prInfHyps="p175"/>
<org.eventb.core.prHypAction name="FORWARD_INF7" org.eventb.core.prHyps="p168" org.eventb.core.prInfHyps="p176"/>
<org.eventb.core.prHypAction name="DESELECT8" org.eventb.core.prHyps="p37,p38,p39,p55,p165,p166,p167,p168"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with CLIMB=TRUE" org.eventb.core.prHyps="p92">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p108" org.eventb.core.prInfHyps="p177"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p109" org.eventb.core.prInfHyps="p178"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p108,p109"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p177" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p179"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p178" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p180"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with TAKEOFF=TRUE" org.eventb.core.prHyps="p99">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p117" org.eventb.core.prInfHyps="p181"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p118" org.eventb.core.prInfHyps="p182"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p119" org.eventb.core.prInfHyps="p183"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p120" org.eventb.core.prInfHyps="p184"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p117,p118,p119,p120"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p181" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p185"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p182" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p186"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p183" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p187"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p184" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p188"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OPERATIONAL=TRUE" org.eventb.core.prHyps="p107">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p64" org.eventb.core.prInfHyps="p189"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p82" org.eventb.core.prInfHyps="p190"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p84" org.eventb.core.prInfHyps="p191"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p86" org.eventb.core.prInfHyps="p192"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p64,p82,p84,p86"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p189" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p193"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p190" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p194"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p191" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p195"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p192" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p196"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=ABORT" org.eventb.core.prHyps="p152">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p151" org.eventb.core.prInfHyps="p197"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p151"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=FLY" org.eventb.core.prHyps="p186">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p89" org.eventb.core.prInfHyps="p198"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p121" org.eventb.core.prInfHyps="p199"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p122" org.eventb.core.prInfHyps="p200"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p185" org.eventb.core.prInfHyps="p201"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p89,p121,p122,p185"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p198"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=DESCEND" org.eventb.core.prHyps="p187">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p90" org.eventb.core.prInfHyps="p202"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p199" org.eventb.core.prInfHyps="p203"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p201" org.eventb.core.prInfHyps="p204"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p90,p199,p201"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p202"/>
<org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p204" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p205"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=LANDED" org.eventb.core.prHyps="p188">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p123" org.eventb.core.prInfHyps="p206"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p205" org.eventb.core.prInfHyps="p207"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p123,p200,p205"/>
<org.eventb.core.prHypAction name="SELECT3" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p207" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p197"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=DESCEND" org.eventb.core.prHyps="p187">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p206"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with OFF=FALSE" org.eventb.core.prHyps="p194">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p81" org.eventb.core.prInfHyps="p208"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p209"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p193" org.eventb.core.prInfHyps="p210"/>
<org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p81,p83,p193"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with START=FALSE" org.eventb.core.prHyps="p195">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p210" org.eventb.core.prInfHyps="p211"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p208,p210"/>
<org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p211" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p212"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with FALSE=SHUTDOWN" org.eventb.core.prHyps="p196">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p85" org.eventb.core.prInfHyps="p213"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p212" org.eventb.core.prInfHyps="p214"/>
<org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p85,p209,p212"/>
<org.eventb.core.prHypAction name="SELECT3" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p203"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p214" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p102" org.eventb.core.prHyps="p102"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_it" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prPred name="p180" org.eventb.core.predicate="FALSE=HOVER">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p189" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({TRUE}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p168" org.eventb.core.predicate="({toLand}∪{toFly}∪SCXML_FutureInternalTrigger1)∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬Landed=off"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p133" org.eventb.core.predicate="FORWARD1∈BOOL">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p169" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger2∪{cancel}∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p150" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p159" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p213" org.eventb.core.predicate="{START}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p208" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="CLIMB=TRUE"/>
<org.eventb.core.prPred name="p165" org.eventb.core.predicate="SCXML_raisedTriggers⊆{toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p130" org.eventb.core.predicate="CLIMB∈BOOL"/>
<org.eventb.core.prPred name="p118" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="TAKEOFF=TRUE"/>
<org.eventb.core.prPred name="p197" org.eventb.core.predicate="{TRUE}={TRUE}∪({FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="ABORT=TRUE⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p129" org.eventb.core.predicate="TAKEOFF∈BOOL"/>
<org.eventb.core.prPred name="p185" org.eventb.core.predicate="{TRUE}={TRUE}∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p191" org.eventb.core.predicate="{START}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬Landed=TurnDone"/>
<org.eventb.core.prPred name="p112" org.eventb.core.predicate="DESCEND=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="⊤⇒TAKEOFF=TRUE"/>
<org.eventb.core.prPred name="p163" org.eventb.core.predicate="SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p212" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p181" org.eventb.core.predicate="{TRUE}=({TRUE}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p190" org.eventb.core.predicate="{OFF}∩{TRUE}∩{TRUE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p174" org.eventb.core.predicate="{toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p114" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p108" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p139" org.eventb.core.predicate="FORWARD4∈BOOL">
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬Landed=ShortStepReached"/>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({FALSE}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬toTakeoff=LongStepReached"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})"/>
<org.eventb.core.prPred name="p188" org.eventb.core.predicate="FALSE=LANDED"/>
<org.eventb.core.prPred name="p110" org.eventb.core.predicate="FLY=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p111" org.eventb.core.predicate="FLY=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p152" org.eventb.core.predicate="FALSE=ABORT"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p155" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p128" org.eventb.core.predicate="SHUTDOWN∈BOOL"/>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p119" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p167" org.eventb.core.predicate="SCXML_TRIGGER={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p177" org.eventb.core.predicate="{TRUE}=({TRUE}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬on=TurnDone"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬on=ShortStepReached"/>
<org.eventb.core.prPred name="p136" org.eventb.core.predicate="TURN2∈BOOL">
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p122" org.eventb.core.predicate="{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬ShortStepReached=LongStepReached"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p179" org.eventb.core.predicate="{TRUE}={TRUE}∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬toLand=toFly"/>
<org.eventb.core.prPred name="p200" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p113" org.eventb.core.predicate="DESCEND=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p211" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="ABORT=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p203" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬toTakeoff=off"/>
<org.eventb.core.prPred name="p199" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p115" org.eventb.core.predicate="LANDED=TRUE⇒⊤"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬on=Landed"/>
<org.eventb.core.prPred name="p157" org.eventb.core.predicate="SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p209" org.eventb.core.predicate="{FALSE}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p144" org.eventb.core.predicate="GOFORWARD∈BOOL">
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{FALSE}∩{TRUE},{TRUE}∩{TRUE})"/>
<org.eventb.core.prPred name="p176" org.eventb.core.predicate="({toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel})∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0"/>
<org.eventb.core.prPred name="p141" org.eventb.core.predicate="HOLD∈BOOL">
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p162" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩(SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p127" org.eventb.core.predicate="OPERATIONAL∈BOOL"/>
<org.eventb.core.prPred name="p193" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬toLand=cancel"/>
<org.eventb.core.prPred name="p116" org.eventb.core.predicate="⊤⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p124" org.eventb.core.predicate="SCXML_uc∈BOOL">
<org.eventb.core.prIdent name="SCXML_uc" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p148" org.eventb.core.predicate="ABORT∈BOOL"/>
<org.eventb.core.prPred name="p164" org.eventb.core.predicate="SCXML_raisedTriggers⊆SCXML_FutureInternalTrigger">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p107" org.eventb.core.predicate="OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="CLIMB2=TRUE"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬toTakeoff=ShortStepReached"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬toFly=cancel"/>
<org.eventb.core.prPred name="p147" org.eventb.core.predicate="CLIMB2∈BOOL"/>
<org.eventb.core.prPred name="p134" org.eventb.core.predicate="TURN1∈BOOL">
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p135" org.eventb.core.predicate="FORWARD2∈BOOL">
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p182" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p210" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪({START}∩{TRUE})∪{TRUE}∪({SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p120" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_it=cancel"/>
<org.eventb.core.prPred name="p132" org.eventb.core.predicate="FLY∈BOOL"/>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬TurnDone=off"/>
<org.eventb.core.prPred name="p145" org.eventb.core.predicate="DESCEND2∈BOOL">
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p105" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p170" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p121" org.eventb.core.predicate="{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p201" org.eventb.core.predicate="{TRUE}={TRUE}∪({FALSE}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p186" org.eventb.core.predicate="FALSE=FLY"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="⊤⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬toTakeoff=on"/>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="⊤⇒{TRUE}=({FALSE}∩{TRUE})∪{TRUE}"/>
<org.eventb.core.prPred name="p187" org.eventb.core.predicate="FALSE=DESCEND"/>
<org.eventb.core.prPred name="p171" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬toTakeoff=Landed"/>
<org.eventb.core.prPred name="p131" org.eventb.core.predicate="HOVER∈BOOL">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p172" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)"/>
<org.eventb.core.prPred name="p140" org.eventb.core.predicate="TURN4∈BOOL">
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p204" org.eventb.core.predicate="{TRUE}={TRUE}∪({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p142" org.eventb.core.predicate="DESCEND∈BOOL"/>
<org.eventb.core.prPred name="p194" org.eventb.core.predicate="OFF=FALSE"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬Landed=LongStepReached"/>
<org.eventb.core.prPred name="p153" org.eventb.core.predicate="SCXML_it∈SCXML_iq">
<org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬ShortStepReached=off"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({FALSE}∩{TRUE})∪({TRUE}∩{TRUE})∧({FALSE}∩{TRUE})∩({TRUE}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬on=off"/>
<org.eventb.core.prPred name="p117" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p106" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬LongStepReached=TurnDone"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬toTakeoff=TurnDone"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p175" org.eventb.core.predicate="SCXML_TRIGGER={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p205" org.eventb.core.predicate="{TRUE}={TRUE}∪({FALSE}∩{TRUE})∪({LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p126" org.eventb.core.predicate="START∈BOOL"/>
<org.eventb.core.prPred name="p166" org.eventb.core.predicate="{toLand}∪{toFly}∪SCXML_FutureInternalTrigger1={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2"/>
<org.eventb.core.prPred name="p161" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p195" org.eventb.core.predicate="START=FALSE"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})"/>
<org.eventb.core.prPred name="p125" org.eventb.core.predicate="OFF∈BOOL"/>
<org.eventb.core.prPred name="p146" org.eventb.core.predicate="LANDED∈BOOL"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬LongStepReached=off"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p196" org.eventb.core.predicate="FALSE=SHUTDOWN"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p202" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p198" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p138" org.eventb.core.predicate="TURN3∈BOOL">
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p154" org.eventb.core.predicate="cancel∈SCXML_iq">
<org.eventb.core.prIdent name="SCXML_iq" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p178" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬ShortStepReached=TurnDone"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p206" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{FALSE}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p143" org.eventb.core.predicate="ALIGN∈BOOL">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p149" org.eventb.core.predicate="{TRUE}=({TRUE}∩{TRUE})∪({ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p151" org.eventb.core.predicate="{TRUE}={TRUE}∪({ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p160" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}"/>
<org.eventb.core.prPred name="p184" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p192" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p207" org.eventb.core.predicate="{TRUE}={TRUE}∪({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p214" org.eventb.core.predicate="{TRUE}=({FALSE}∩{TRUE})∪{TRUE}∪({FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p173" org.eventb.core.predicate="SCXML_raisedTriggers⊆{toLand}∪{toFly}∪SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬on=LongStepReached"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)"/>
<org.eventb.core.prPred name="p183" org.eventb.core.predicate="{TRUE}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)"/>
<org.eventb.core.prPred name="p156" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩(SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on})=(∅ ⦂ ℙ(SCXML_TRIGGER))"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p123" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p137" org.eventb.core.predicate="FORWARD3∈BOOL">
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p109" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p158" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪{toTakeoff}∪{on}"/>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})"/>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="cancel__CLIMB2_ABORT/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p89">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p89" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="CLIMB2=TRUE">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="CLIMB=TRUE"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="cancel__CLIMB2_ABORT/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8,p9,p10"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7,p8,p9,p10"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p29,p30,p31,p32"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34,p10,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p18,p19,p20,p21,p13,p22,p23,p24,p14,p25,p26,p15,p27,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p34,p10,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p18,p19,p20,p21,p13,p22,p23,p24,p14,p25,p26,p15,p27,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p32,p30,p31"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p32,p30,p31"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50,p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50,p51"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p32,p54,p55,p56,p57,p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53,p32,p54,p55,p56,p57,p51"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59,p60,p61,p62,p63,p64,p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59,p60,p61,p62,p63,p64,p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p88">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p88" org.eventb.core.prHyps="p88"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="CLIMB2=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="CLIMB=TRUE"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toFly__TAKEOFF_FLY/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p74" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p96">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94,p95"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p96" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∧({FALSE}∩{TRUE})∩({FALSE}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒partition({TRUE},{FALSE}∩{TRUE},{FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="CLIMB=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toFly__TAKEOFF_FLY/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p95">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93,p94"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p95" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toFly__TAKEOFF_FLY/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p95">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93,p94"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p95" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="HOVER=TRUE⇒⊤">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="HOVER=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CLIMB_HOVER/distinct_states_in_CLIMB_sm/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p74" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p98">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96,p97"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p98" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="FALSE=TRUE⇒{TRUE}=({FALSE}∩{TRUE})∪({FALSE}∩{TRUE})∧({FALSE}∩{TRUE})∩({FALSE}∩{TRUE})=(∅ ⦂ ℙ(BOOL))"/>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒partition({TRUE},{FALSE}∩{TRUE},{FALSE}∩{TRUE})"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="toFly∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="ABORT=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{toFly}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="ABORT=TRUE⇒⊤">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="CLIMB2=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CLIMB_HOVER/CLIMB2_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p97">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95,p96"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p97" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="toFly∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="ABORT=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{toFly}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="ABORT=TRUE⇒⊤">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB2=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CLIMB_HOVER/ABORT_substateof_CLIMB/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p8,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p16,p17,p18,p19,p11,p20,p21,p22,p12,p23,p24,p13,p25,p14,p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p30,p52,p53,p54,p55,p49"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57,p58,p59,p60,p61,p62,p63"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="p76" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p97">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p78"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95,p96"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p97" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=off">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬TurnDone=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger1)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="toFly∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="ABORT=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="⊤⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="SCXML_FutureExternalTrigger0=SCXML_FutureExternalTrigger1∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger0,SCXML_FutureInternalTrigger1,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{toFly}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=off">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger0,SCXML_FutureExternalTrigger1,{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},{off},SCXML_FutureExternalTrigger1)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="ABORT=TRUE⇒⊤">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB2=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger0=SCXML_FutureInternalTrigger1∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪{off}∪SCXML_FutureExternalTrigger1">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger1">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
</org.eventb.core.prFile>
