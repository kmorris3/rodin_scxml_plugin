<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
<org.eventb.core.prProof name="INITIALISATION/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/charge_init/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/BATERRY_substateof_OPERATIONAL/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__OPERATIONAL_OPERATIONAL/BATERRY_substateof_OPERATIONAL/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9,p10,p11,p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9,p10,p11,p12"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p10,p11,p32,p33,p34,p35,p36,p12,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p19,p20,p21,p15,p22,p23,p16,p24,p17,p18"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p10,p11,p32,p33,p34,p35,p36,p12,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p19,p20,p21,p15,p22,p23,p16,p24,p17,p18"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p29,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p29,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50,p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50,p51"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p29,p54,p55,p56,p57,p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53,p29,p54,p55,p56,p57,p51"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59,p60,p61,p62,p63,p64,p65"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59,p60,p61,p62,p63,p64,p65"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p73"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p75"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p87">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p87" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p105">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p77"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98,p99,p100,p101,p102,p103,p104"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p105" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="BATERRY=TRUE⇒⊤">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="⊤⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p105" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="DESCEND=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="FLY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="FLY=TRUE⇒⊤">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="DESCEND=TRUE⇒⊤">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="TAKEOFF=TRUE⇒⊤">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="LANDED=TRUE⇒⊤">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="TRUE=TRUE⇒⊤"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__OPERATIONAL_OPERATIONAL/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__OPERATIONAL_OPERATIONAL/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p104">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p76"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97,p98,p99,p100,p101,p102,p103"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p104" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="BATERRY=TRUE⇒⊤">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="⊤⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="DESCEND=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="FLY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="FLY=TRUE⇒⊤">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="DESCEND=TRUE⇒⊤">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE⇒⊤">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="LANDED=TRUE⇒⊤">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__LANDED_OPERATIONAL/BATERRY_substateof_OPERATIONAL/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8,p9,p10,p11,p12,p13"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7,p8,p9,p10,p11,p12,p13"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p11,p12,p33,p34,p35,p36,p37,p13,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p20,p21,p22,p16,p23,p24,p17,p25,p18,p19"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p11,p12,p33,p34,p35,p36,p37,p13,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p20,p21,p22,p16,p23,p24,p17,p25,p18,p19"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p30,p28,p29"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p30,p28,p29"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p52"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54,p30,p55,p56,p57,p58,p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54,p30,p55,p56,p57,p58,p52"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60,p61,p62,p63,p64,p65,p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60,p61,p62,p63,p64,p65,p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p76"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p89">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p89" org.eventb.core.prHyps="p89"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="LANDED=TRUE"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__LANDED_OPERATIONAL/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__LANDED_OPERATIONAL/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p90">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p90" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="LANDED=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="BATERRY_BATERRY__ALIGN_GOFORWARD/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="BATERRY_BATERRY__ALIGN_GOFORWARD/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p96">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p96" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒DESCEND=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="DESCEND=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="ALIGN=TRUE⇒DESCEND=TRUE">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{toLand}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="toLand∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="ALIGN=TRUE">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="BATERRY=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="BATERRY_BATERRY__GOFORWARD_DESCEND2/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="BATERRY_BATERRY__GOFORWARD_DESCEND2/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p96">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p96" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒DESCEND=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="DESCEND=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="GOFORWARD=TRUE⇒DESCEND=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{toLand}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="toLand∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="GOFORWARD=TRUE">
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="BATERRY=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="FORWARD4_HOLD__BATERRY_BATERRY/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="FORWARD4_HOLD__BATERRY_BATERRY/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p80" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p96">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p96" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="FLY=TRUE">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="FORWARD4=TRUE⇒FLY=TRUE">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{toLand}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="toLand∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="FORWARD4=TRUE">
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒FLY=TRUE">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="BATERRY=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CLIMB_HOVER__BATERRY_BATERRY/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="CLIMB_HOVER__BATERRY_BATERRY/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="p84" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p104">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
<org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102,p103"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p104" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="⊤⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="toFly∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="ABORT=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="CLIMB2=TRUE⇒CLIMB=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{toLand}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="toLand∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="{toFly}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="CLIMB=TRUE⇒TAKEOFF=TRUE">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="ABORT=TRUE⇒⊤">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="BATERRY=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="CLIMB2=TRUE⇒⊤">
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="BATERRY_BATERRY/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="BATERRY_BATERRY/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p92">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p92" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{toLand}⊆SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="toLand∈SCXML_raisedTriggers">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_raisedTriggers" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="BATERRY=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__START_OPERATIONAL/BATERRY_substateof_OPERATIONAL/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p86">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p86" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="TRUE=TRUE⇒TRUE=TRUE"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__START_OPERATIONAL/charge_type/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="charge'" org.eventb.core.type="ℤ"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="charge'∈0 ‥ 100"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="toTakeoff__START_OPERATIONAL/BATERRY_onentry_0/FIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p86">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p86" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="0 ‥ 100≠(∅ ⦂ ℙ(ℤ))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="off__LANDED_SHUTDOWN/BATERRY_substateof_OPERATIONAL/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p90">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p90" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="LANDED=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="⊤⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))∧{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))∧{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="off__OPERATIONAL_SHUTDOWN/BATERRY_substateof_OPERATIONAL/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p9,p10,p31,p32,p33,p34,p35,p11,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p18,p19,p20,p14,p21,p22,p15,p23,p16,p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p28,p26,p27"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p28,p26,p27"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p28,p53,p54,p55,p56,p50"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61,p62,p63,p64"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE}))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p76"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p79"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p83"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="p77" org.eventb.core.prInfHyps="p86"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p104">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
<org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
<org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
<org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
<org.eventb.core.prHypAction name="HIDE10" org.eventb.core.prHyps="p76"/>
<org.eventb.core.prHypAction name="HIDE11" org.eventb.core.prHyps="p79"/>
<org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prHypAction name="HIDE14" org.eventb.core.prHyps="p85"/>
<org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97,p98,p99,p100,p101,p102,p103"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p104" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬Landed∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬toLand=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="BATERRY=TRUE⇒⊤">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger1,SCXML_FutureInternalTrigger2,{toLand},{toFly})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},SCXML_FutureInternalTrigger2)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="CLIMB=TRUE⇒partition({TRUE},{CLIMB2}∩{TRUE},{ABORT}∩{TRUE})">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧({FORWARD1}∩{TRUE})∩({TURN1}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN1}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN2}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN3}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({FORWARD4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN3}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({TURN4}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FORWARD4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TURN4}∩{TRUE})∩({HOLD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬toTakeoff=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬toFly=cancel">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p94" org.eventb.core.predicate="FLY=TRUE⇒{TRUE}=({FORWARD1}∩{TRUE})∪({TURN1}∩{TRUE})∪({FORWARD2}∩{TRUE})∪({TURN2}∩{TRUE})∪({FORWARD3}∩{TRUE})∪({TURN3}∩{TRUE})∪({FORWARD4}∩{TRUE})∪({TURN4}∩{TRUE})∪({HOLD}∩{TRUE})∧{FORWARD1}∩{TRUE}∩{TURN1}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN1}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN2}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN2}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN3}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{FORWARD4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{TURN3}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{TURN4}=(∅ ⦂ ℙ(BOOL))∧{FORWARD4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))∧{TURN4}∩{TRUE}∩{HOLD}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p95" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧{ALIGN}∩{TRUE}∩{GOFORWARD}=(∅ ⦂ ℙ(BOOL))∧{ALIGN}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))∧{GOFORWARD}∩{TRUE}∩{DESCEND2}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="({START}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="SCXML_FutureInternalTrigger1=SCXML_FutureInternalTrigger2∪{toLand}∪{toFly}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p100" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="partition({TRUE},{OFF}∩{TRUE},{START}∩{TRUE},{OPERATIONAL}∩{TRUE},{SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="{OFF}∩{TRUE}∩{START}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="⊤⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p98" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{FLY}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p101" org.eventb.core.predicate="{FLY}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬off=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="DESCEND=TRUE⇒partition({TRUE},{ALIGN}∩{TRUE},{GOFORWARD}∩{TRUE},{DESCEND2}∩{TRUE})">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬TurnDone∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="SCXML_TRIGGER=SCXML_FutureInternalTrigger∪SCXML_FutureExternalTrigger">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="{START}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="SCXML_FutureInternalTrigger2=SCXML_FutureInternalTrigger3∪{cancel}">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬toTakeoff=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬toTakeoff=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p104" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬off=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(SCXML_TRIGGER,SCXML_FutureInternalTrigger,SCXML_FutureExternalTrigger)">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬Landed=TurnDone">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="DESCEND=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="{OFF}∩{TRUE}∩{OPERATIONAL}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬Landed=LongStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="LANDED=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="({OFF}∩{TRUE})∩({OPERATIONAL}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="({OFF}∩{TRUE})∩({START}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,{toTakeoff},{off},{on},{Landed},{ShortStepReached},{LongStepReached},{TurnDone},SCXML_FutureExternalTrigger2)">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="TAKEOFF=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="FALSE=TRUE⇒FALSE=TRUE"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪{cancel}∪SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p97" org.eventb.core.predicate="{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬LongStepReached=TurnDone">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬toTakeoff=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="({START}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬Landed=ShortStepReached">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="SCXML_FutureExternalTrigger={toTakeoff}∪{off}∪{on}∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}∪SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬toTakeoff=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="FLY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="SCXML_FutureInternalTrigger∩SCXML_FutureExternalTrigger=(∅ ⦂ ℙ(SCXML_TRIGGER))">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="OPERATIONAL=TRUE⇒partition({TRUE},{TAKEOFF}∩{TRUE},{FLY}∩{TRUE},{DESCEND}∩{TRUE},{LANDED}∩{TRUE})">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="FLY=TRUE⇒⊤">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="SCXML_FutureExternalTrigger1=SCXML_FutureExternalTrigger2∪{Landed}∪{ShortStepReached}∪{LongStepReached}∪{TurnDone}">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="{OFF}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="DESCEND=TRUE⇒{TRUE}=({ALIGN}∩{TRUE})∪({GOFORWARD}∩{TRUE})∪({DESCEND2}∩{TRUE})∧({ALIGN}∩{TRUE})∩({GOFORWARD}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({ALIGN}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({GOFORWARD}∩{TRUE})∩({DESCEND2}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ALIGN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="DESCEND2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="GOFORWARD" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger1,SCXML_FutureExternalTrigger2,{Landed},{ShortStepReached},{LongStepReached},{TurnDone})">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger1" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬off=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="{OPERATIONAL}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="SCXML_FutureInternalTrigger={toLand}∪{toFly}∪SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p99" org.eventb.core.predicate="{TAKEOFF}∩{TRUE}∩{DESCEND}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="SCXML_FutureExternalTrigger=SCXML_FutureExternalTrigger0∪{toTakeoff}∪{off}∪{on}">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="FLY=TRUE⇒partition({TRUE},{FORWARD1}∩{TRUE},{TURN1}∩{TRUE},{FORWARD2}∩{TRUE},{TURN2}∩{TRUE},{FORWARD3}∩{TRUE},{TURN3}∩{TRUE},{FORWARD4}∩{TRUE},{TURN4}∩{TRUE},{HOLD}∩{TRUE})">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FORWARD4" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOLD" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN1" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN2" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN3" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TURN4" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬on=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger,{toLand},{toFly},{cancel},SCXML_FutureInternalTrigger3)">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ShortStepReached=TurnDone">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="TurnDone" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="({OPERATIONAL}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬off=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬on∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬on=ShortStepReached">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p102" org.eventb.core.predicate="{FLY}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="{START}∩{TRUE}∩{SHUTDOWN}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧({CLIMB}∩{TRUE})∩({HOVER}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="TAKEOFF=TRUE⇒{TRUE}=({CLIMB}∩{TRUE})∪({HOVER}∩{TRUE})∧{CLIMB}∩{TRUE}∩{HOVER}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(SCXML_FutureExternalTrigger,SCXML_FutureExternalTrigger0,{toTakeoff},{off},{on})">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬ShortStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ShortStepReached=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="ShortStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="({OFF}∩{TRUE})∩({SHUTDOWN}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬on=LongStepReached">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬toLand=toFly">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="DESCEND=TRUE⇒⊤">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p96" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧{CLIMB2}∩{TRUE}∩{ABORT}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬toLand∈SCXML_FutureInternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toLand" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="{TRUE}=({OFF}∩{TRUE})∪({START}∩{TRUE})∪({OPERATIONAL}∩{TRUE})∪({SHUTDOWN}∩{TRUE})">
<org.eventb.core.prIdent name="OFF" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="SHUTDOWN" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="START" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="partition(SCXML_FutureInternalTrigger2,SCXML_FutureInternalTrigger3,{cancel})">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="CLIMB=TRUE⇒{TRUE}=({CLIMB2}∩{TRUE})∪({ABORT}∩{TRUE})∧({CLIMB2}∩{TRUE})∩({ABORT}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="ABORT" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="CLIMB2" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p103" org.eventb.core.predicate="{DESCEND}∩{TRUE}∩{LANDED}=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬toTakeoff=off">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬toFly∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toFly" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="TAKEOFF=TRUE⇒partition({TRUE},{CLIMB}∩{TRUE},{HOVER}∩{TRUE})">
<org.eventb.core.prIdent name="CLIMB" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="HOVER" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="TAKEOFF=TRUE⇒⊤">
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬cancel∈SCXML_FutureInternalTrigger3">
<org.eventb.core.prIdent name="SCXML_FutureInternalTrigger3" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="cancel" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="LANDED=TRUE⇒⊤">
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬LongStepReached∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="LongStepReached" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬off=on">
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬off∈SCXML_FutureExternalTrigger2">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger2" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="off" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬on=Landed">
<org.eventb.core.prIdent name="Landed" org.eventb.core.type="SCXML_TRIGGER"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="on" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="OPERATIONAL=TRUE⇒{TRUE}=({TAKEOFF}∩{TRUE})∪({FLY}∩{TRUE})∪({DESCEND}∩{TRUE})∪({LANDED}∩{TRUE})∧({TAKEOFF}∩{TRUE})∩({FLY}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({TAKEOFF}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({DESCEND}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({FLY}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))∧({DESCEND}∩{TRUE})∩({LANDED}∩{TRUE})=(∅ ⦂ ℙ(BOOL))">
<org.eventb.core.prIdent name="DESCEND" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="FLY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="LANDED" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="TAKEOFF" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬toTakeoff∈SCXML_FutureExternalTrigger0">
<org.eventb.core.prIdent name="SCXML_FutureExternalTrigger0" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="SCXML_TRIGGER" org.eventb.core.type="ℙ(SCXML_TRIGGER)"/>
<org.eventb.core.prIdent name="toTakeoff" org.eventb.core.type="SCXML_TRIGGER"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="BATERRY=TRUE⇒OPERATIONAL=TRUE">
<org.eventb.core.prIdent name="BATERRY" org.eventb.core.type="BOOL"/>
<org.eventb.core.prIdent name="OPERATIONAL" org.eventb.core.type="BOOL"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
</org.eventb.core.prFile>
