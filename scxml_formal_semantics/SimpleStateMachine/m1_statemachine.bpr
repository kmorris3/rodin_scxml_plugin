<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
<org.eventb.core.prProof name="INITIALISATION/typeof-active/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="init⊆states"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/typeof-active/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p57"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p9,p35,p13,p42,p18,p1,p28,p21,p4,p39,p30,p27,p3,p40,p25,p41,p26,p14,p37,p44,p7,p22,p2,p38,p20,p33,p16,p23,p11,p32,p17,p19,p36,p45,p5,p12,p24,p29,p49,p55,p56,p58,p62,p63,p64">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p66">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p16,p5,p12,p38,p24,p29,p3,p39,p64">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="current_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="new_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·dom(r)=dom(cl(r))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="root∈states"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="current_leaf_state∈active"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(cl(container))[{new_leaf_state}]∪{new_leaf_state}⊆states"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Tree(Sts)={rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn}"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);r⊆cl(r)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="states∈dom(Tree)"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="leaves⊆states"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀state⦂STATE·state∈states ∖ {root}⇒root∈(cl(container))[{state}]"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="new_leaf_state∈states"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·ran(r)=ran(cl(r))"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="container∈states ∖ {root} → states"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="init⊆states"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p⇒cl(r)⊆cl(p)"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=(cl(r);r)∪r"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="root ↦ container∈Tree(states)"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),T⦂ℙ(STATE)·r[T]⊆T⇒(cl(r))[T]⊆T"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="active=(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="current_leaf_state ↦ new_leaf_state∈transitions"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r;cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="active⊆states"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="(cl(container))[{new_leaf_state}]⊆states"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r∼)=(cl(r))∼"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="ran(container)=ran(cl(container))"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="states⊆STATE"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="init_leaf∈leaves"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="leaves=states ∖ ran(container)"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="(cl(container))[{new_leaf_state}]⊆states∧new_leaf_state∈states"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks}"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r⊆cl(r)"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=r∪(r;cl(r))"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="Tree∈ℙ(STATE) → ℙ(STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/update-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p21">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="container∈STATE ↔ STATE"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="STATE ↔ STATE"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/typeof-active_leaf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="init_leaf∈leaves"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="consistent-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="active∈dom(LinkedList)∧LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="active∈ℙ(STATE)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(STATE)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/consistent-active/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/consistent-active/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p1"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="LinkedList-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="active∈dom(LinkedList)∧LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="active∈ℙ(STATE)"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(STATE)"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/LinkedList-active/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/LinkedList-active/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p1"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="active-closure/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p26">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p1"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="container∈STATE ↔ STATE"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="STATE ↔ STATE"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="INITIALISATION/active-closure/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="init=(cl(container))[{init_leaf}]∪{init_leaf}"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/typeof-active_leaf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p8" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p4,p3,p5,p2,p30">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="current_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="new_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="new_leaf_state∈leaves"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="current_leaf_state∈active"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="current_leaf_state ↦ new_leaf_state∈transitions"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
</org.eventb.core.prPred>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/active-closure/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p2"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p5"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="new_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="(cl(container))[{new_leaf_state}]∪{new_leaf_state}=(cl(container))[{new_leaf_state}]∪{new_leaf_state}"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="LinkedList-active/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6" org.eventb.core.prSets="STATE" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p8"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with active=(cl(container))[{active_leaf}]∪{active_leaf}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p5">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p33"/>
<org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p2"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35,p36"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p26">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in goal" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41">
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p43">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ct hyp (¬root∈(cl(container))[{active_leaf}])" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p43">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="p45">
<org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p43"/>
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp mp (inst active_leaf)" org.eventb.core.prHyps="p6">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p48">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p4,p5,p32,p35,p36,p45">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p46">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p6"/>
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="p46"/>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p49"/>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p50"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="root=active_leaf"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="active_leaf ↦ root ↦ ((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container∈(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})((cl(container))[{active_leaf}]∪{active_leaf})"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="root∈(cl(((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container))[{active_leaf}]"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="active_leaf∈states ∖ {root}"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀state⦂STATE·state∈states ∖ {root}⇒root∈(cl(container))[{state}]"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="root∈(cl(container))[{active_leaf}]"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="root∈(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="container≠(∅ ⦂ ℙ(STATE×STATE))⇒root∉leaves"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="(cl(container))[{active_leaf}]∪{active_leaf}⊆states"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬root∈(cl(container))[{active_leaf}]⇒root=active_leaf"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬root=active_leaf"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="active=(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="root∈(cl(container))[{active_leaf}]∪{active_leaf}∧((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container∈((cl(container))[{active_leaf}]∪{active_leaf}) ∖ {root} ⤖ ((cl(container))[{active_leaf}]∪{active_leaf}) ∖ {active_leaf}∧root∈(cl(((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container))[{active_leaf}]"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="active⊆states"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="states⊆STATE"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="active_leaf ↦ root ↦ ((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container∈LinkedList((cl(container))[{active_leaf}]∪{active_leaf})"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container∈((cl(container))[{active_leaf}]∪{active_leaf}) ∖ {root} ⤖ ((cl(container))[{active_leaf}]∪{active_leaf}) ∖ {active_leaf}"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="active_leaf∈states"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="root∈(cl(container))[{active_leaf}]∨root=active_leaf"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬root∈(cl(container))[{active_leaf}]"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="root∈(cl(container))[{active_leaf}]∨root∈{active_leaf}"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬container=(∅ ⦂ ℙ(STATE×STATE))⇒¬root∈leaves"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="(cl(container))[{active_leaf}]⊆states"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="active_leaf"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.disjToImplRewrites"/>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.contrL1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.allmpD:0"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r13" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/typeof-transitions/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/range-preservation/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤∧⊤"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/range-preservation/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p44"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p54"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p33,p13,p40,p18,p1,p27,p21,p4,p37,p28,p26,p3,p38,p24,p39,p25,p14,p35,p42,p7,p22,p2,p36,p20,p31,p16,p23,p11,p30,p17,p19,p34,p43,p5,p12,p47,p52,p53,p55,p59,p60,p61">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="current_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="new_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·dom(r)=dom(cl(r))"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="root∈states"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="current_leaf_state∈active"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Tree(Sts)={rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn}"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);r⊆cl(r)"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="states∈dom(Tree)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀state⦂STATE·state∈states ∖ {root}⇒root∈(cl(container))[{state}]"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·ran(r)=ran(cl(r))"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="container∈states ∖ {root} → states"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="init⊆states"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p⇒cl(r)⊆cl(p)"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=(cl(r);r)∪r"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="root ↦ container∈Tree(states)"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),T⦂ℙ(STATE)·r[T]⊆T⇒(cl(r))[T]⊆T"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="active=(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="current_leaf_state ↦ new_leaf_state∈transitions"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r;cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="active⊆states"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="ran(container)=ran(cl(container))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r∼)=(cl(r))∼"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="states⊆STATE"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="init_leaf∈leaves"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="leaves=states ∖ ran(container)"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks}"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r⊆cl(r)"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=r∪(r;cl(r))"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="Tree∈ℙ(STATE) → ℙ(STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/typeof-container/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="container∈states ∖ {root} → states"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/leaves_are_states/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p55"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p34,p13,p41,p18,p1,p28,p21,p4,p38,p29,p27,p3,p39,p25,p40,p26,p14,p36,p43,p7,p22,p2,p37,p20,p32,p16,p23,p11,p31,p17,p19,p35,p44,p5,p12,p24,p48,p53,p54,p56,p60,p61,p62">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="current_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="new_leaf_state" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·dom(r)=dom(cl(r))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="root∈states"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="current_leaf_state∈active"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Tree(Sts)={rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn}"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);r⊆cl(r)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="leaves⊆states"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="states∈dom(Tree)"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀state⦂STATE·state∈states ∖ {root}⇒root∈(cl(container))[{state}]"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·ran(r)=ran(cl(r))"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="container∈states ∖ {root} → states"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="init⊆states"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p⇒cl(r)⊆cl(p)"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=(cl(r);r)∪r"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="root ↦ container∈Tree(states)"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),T⦂ℙ(STATE)·r[T]⊆T⇒(cl(r))[T]⊆T"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="active=(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="current_leaf_state ↦ new_leaf_state∈transitions"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r;cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="active⊆states"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r∼)=(cl(r))∼"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="ran(container)=ran(cl(container))"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="states⊆STATE"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="init_leaf∈leaves"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="leaves=states ∖ ran(container)"/>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks}"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r⊆cl(r)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=r∪(r;cl(r))"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="Tree∈ℙ(STATE) → ℙ(STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/thm12-range_preservation/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="r" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p4"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p6"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p21"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r)" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
<org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p2">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p32" org.eventb.core.prHyps=""/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈dom(cl)∧⊤"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="states⊆STATE">
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})">
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="⊤"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈dom(cl)"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="r∈STATE ↔ STATE">
<org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE×STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="r∈dom(cl)">
<org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE×STATE)"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="STATE ↔ STATE"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="transition/thm12-range_preservation/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·ran(r)=ran(cl(r))"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="different_layer/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="s1,s2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="STATE" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s1,s2)" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p65,p66,p67">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with active=(cl(container))[{active_leaf}]∪{active_leaf}" org.eventb.core.prHyps="p10">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p67" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p66" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p66,p15,p67,p18"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74,p75"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p39">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p8,p34,p12,p41,p17,p38,p25,p13,p37,p43,p6,p22,p1,p36,p2,p27,p20,p4,p39,p29,p26,p28,p23,p31,p16,p3,p40,p24,p11,p19,p32,p15,p21,p10,p18,p35,p44,p48,p54,p55,p57,p61,p62,p63,p65,p66,p67,p71,p72,p73,p74,p75">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p77">
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="p39"/>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p78">
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with active=(cl(container))[{active_leaf}]∪{active_leaf}" org.eventb.core.prHyps="p10">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p70"/>
<org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p71"/>
<org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p67" org.eventb.core.prInfHyps="p72"/>
<org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p66" org.eventb.core.prInfHyps="p73"/>
<org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p66,p15,p67,p18"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74,p75"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p39">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p79">
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p79" org.eventb.core.prHyps="p8,p34,p12,p41,p17,p38,p25,p13,p37,p43,p6,p22,p1,p36,p2,p27,p20,p4,p39,p29,p26,p28,p23,p31,p16,p3,p40,p24,p11,p19,p32,p15,p21,p10,p18,p35,p44,p48,p54,p55,p57,p61,p62,p63,p65,p66,p67,p71,p72,p73,p74,p75">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·dom(r)=dom(cl(r))"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="root∈states"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="s1∈states ∖ {root}">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Tree(Sts)={rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn}"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="s2∈active ∖ {root}">
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);r⊆cl(r)"/>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="states∈dom(Tree)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="leaves⊆states"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀state⦂STATE·state∈states ∖ {root}⇒root∈(cl(container))[{state}]"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="s1∈dom(container)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="s1∈active ∖ {root}∧s2∈active ∖ {root}∧¬s1=s2⇒s1∈dom(container)∧container∈STATE ⇸ STATE∧s2∈dom(container)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="s2∈((cl(container))[{active_leaf}]∪{active_leaf}) ∖ {root}">
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="container∈STATE ⇸ STATE"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·ran(r)=ran(cl(r))"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p⇒cl(r)⊆cl(p)"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="container∈states ∖ {root} → states"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="init⊆states"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=(cl(r);r)∪r"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="(cl(container))[{active_leaf}]∪{active_leaf}⊆states"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="root ↦ container∈Tree(states)"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),T⦂ℙ(STATE)·r[T]⊆T⇒(cl(r))[T]⊆T"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="active=(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="init=(cl(container))[{init_leaf}]∪{init_leaf}"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="s1∈active ∖ {root}">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r;cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="active⊆states"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="s2∈states ∖ {root}">
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r∼)=(cl(r))∼"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="ran(container)=ran(cl(container))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈active ∖ {root}∧s2∈active ∖ {root}∧¬s1=s2⇒s1∈dom(container)∧container∈STATE ⇸ STATE∧s2∈dom(container)"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="states⊆STATE"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="active_leaf ↦ root ↦ ((cl(container))[{active_leaf}]∪{active_leaf}) ◁ container∈LinkedList((cl(container))[{active_leaf}]∪{active_leaf})"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="init_leaf∈leaves"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬s1=s2">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="leaves=states ∖ ran(container)"/>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈active ∖ {root}∧s2∈active ∖ {root}∧s1≠s2⇒s1∈dom(container)∧container∈STATE ⇸ STATE∧s2∈dom(container)"/>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="s1∈dom(container)∧container∈STATE ⇸ STATE∧s2∈dom(container)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="active_leaf∈states"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks}"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r⊆cl(r)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=r∪(r;cl(r))"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="Tree∈ℙ(STATE) → ℙ(STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="s1∈((cl(container))[{active_leaf}]∪{active_leaf}) ∖ {root}">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="(cl(container))[{active_leaf}]⊆states"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="s2∈dom(container)">
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="states ∖ {root}"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
<org.eventb.core.prProof name="different_layer/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="s1,s2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="STATE" org.eventb.core.psManual="true">
<org.eventb.core.lang name="L"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p45"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p46"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
<org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
<org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
<org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p56"/>
<org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
<org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
<org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
<org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
<org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
<org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
<org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s1,s2)" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
<org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p65,p66,p67">
<org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p10"/>
<org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p57" org.eventb.core.prInfHyps="p69"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70,p71,p72,p73"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in active ◁ container∈active ∖ {root} ⤖ active ∖ {active_leaf}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74,p75"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74,p75"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in active ◁ container∈active ∖ {root} ↣ active ∖ {active_leaf}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76,p77"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p76,p77"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in active ◁ container∈active ∖ {root} ⤔ active ∖ {active_leaf}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79,p80"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p79,p80"/>
<org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="rewrites converse in hyp ((active ◁ container)∼)" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p81"/>
<org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in container∼ ▷ active∈active ∖ {active_leaf} ⇸ active ∖ {root}" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82,p83"/>
<org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p82,p83"/>
<org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ct goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p85" org.eventb.core.prHyps="p84">
<org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp mp (inst container(s1),s1,s2)" org.eventb.core.prHyps="p83">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p86">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p86" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p87">
<org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p87" org.eventb.core.prHyps="p38">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p88">
<org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p88" org.eventb.core.prHyps="p15,p20,p63,p65,p66,p67,p70,p71,p73,p75,p78,p79,p82,p84">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
<org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p89">
<org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p89" org.eventb.core.prHyps="p38"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p90" org.eventb.core.prHyps="p86" org.eventb.core.prUnsel="p86">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87,p89"/>
<org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p90" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p91">
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p91" org.eventb.core.prHyps="p8,p34,p12,p41,p17,p39,p25,p13,p37,p43,p6,p22,p1,p36,p2,p27,p21,p4,p38,p29,p26,p28,p23,p31,p16,p3,p40,p24,p11,p19,p32,p15,p20,p10,p35,p44,p48,p54,p55,p57,p61,p62,p63,p65,p66,p67,p70,p71,p73,p75,p78,p79,p82,p83,p84,p87,p89">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p92">
<org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p92" org.eventb.core.prHyps="p8,p34,p12,p41,p17,p39,p25,p13,p37,p43,p6,p22,p1,p36,p2,p27,p21,p4,p38,p29,p26,p28,p23,p31,p16,p3,p40,p24,p11,p19,p32,p15,p20,p10,p35,p44,p48,p54,p55,p57,p61,p62,p63,p65,p66,p67,p70,p71,p73,p75,p78,p79,p82,p83,p84,p87,p89">
<org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1;2;3:30000"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p86,p93" org.eventb.core.prUnsel="p86">
<org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p83"/>
<org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
<org.eventb.core.prAnte name="'">
<org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="p65" org.eventb.core.prInfHyps="p85"/>
<org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p85"/>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e3"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.0"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
<org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
</org.eventb.core.prAnte>
</org.eventb.core.prRule>
<org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
<org.eventb.core.prIdent name="active" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="active_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
<org.eventb.core.prIdent name="container" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prIdent name="init" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="init_leaf" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="leaves" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="root" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="states" org.eventb.core.type="ℙ(STATE)"/>
<org.eventb.core.prIdent name="transitions" org.eventb.core.type="ℙ(STATE×STATE)"/>
<org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·dom(r)=dom(cl(r))"/>
<org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p54" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p3" org.eventb.core.predicate="transitions∈leaves ↔ leaves"/>
<org.eventb.core.prPred name="p4" org.eventb.core.predicate="root∈states"/>
<org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
<org.eventb.core.prPred name="p74" org.eventb.core.predicate="active ◁ container∈active ∖ {root} ↣ active ∖ {active_leaf}"/>
<org.eventb.core.prPred name="p88" org.eventb.core.predicate="s1∈states ∖ {root}">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈active ∖ {root}∧s2∈active ∖ {root}∧s1≠s2⇒container(s1)≠container(s2)"/>
<org.eventb.core.prPred name="p75" org.eventb.core.predicate="ran(active ◁ container)=active ∖ {active_leaf}"/>
<org.eventb.core.prPred name="p81" org.eventb.core.predicate="container∼ ▷ active∈active ∖ {active_leaf} ⇸ active ∖ {root}"/>
<org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀x⦂STATE,x0⦂STATE,x1⦂STATE·x ↦ x0∈container∼ ▷ active∧x ↦ x1∈container∼ ▷ active⇒x0=x1"/>
<org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Tree(Sts)={rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn}"/>
<org.eventb.core.prPred name="p20" org.eventb.core.predicate="active_leaf∈leaves"/>
<org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p66" org.eventb.core.predicate="s2∈active ∖ {root}">
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p57" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);r⊆cl(r)"/>
<org.eventb.core.prPred name="p73" org.eventb.core.predicate="root∈(cl(active ◁ container))[{active_leaf}]"/>
<org.eventb.core.prPred name="p91" org.eventb.core.predicate="container(s1) ↦ s1∈container∼ ▷ active">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p27" org.eventb.core.predicate="states∈dom(Tree)"/>
<org.eventb.core.prPred name="p28" org.eventb.core.predicate="leaves⊆states"/>
<org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀state⦂STATE·state∈states ∖ {root}⇒root∈(cl(container))[{state}]"/>
<org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
<org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈active ∖ {root}∧s2∈active ∖ {root}∧¬s1=s2⇒¬container(s1)=container(s2)"/>
<org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p87" org.eventb.core.predicate="s1∈dom(container)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p90" org.eventb.core.predicate="container(s1) ↦ s1∈container∼ ▷ active∧container(s1) ↦ s2∈container∼ ▷ active">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p68" org.eventb.core.predicate="¬container(s1)=container(s2)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p89" org.eventb.core.predicate="container∈STATE ⇸ STATE"/>
<org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·ran(r)=ran(cl(r))"/>
<org.eventb.core.prPred name="p76" org.eventb.core.predicate="active ◁ container∈active ∖ {root} ⤔ active ∖ {active_leaf}"/>
<org.eventb.core.prPred name="p38" org.eventb.core.predicate="container∈states ∖ {root} → states"/>
<org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p⇒cl(r)⊆cl(p)"/>
<org.eventb.core.prPred name="p40" org.eventb.core.predicate="init⊆states"/>
<org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=(cl(r);r)∪r"/>
<org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p70" org.eventb.core.predicate="active_leaf∈active"/>
<org.eventb.core.prPred name="p2" org.eventb.core.predicate="root ↦ container∈Tree(states)"/>
<org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
<org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),T⦂ℙ(STATE)·r[T]⊆T⇒(cl(r))[T]⊆T"/>
<org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
<org.eventb.core.prPred name="p86" org.eventb.core.predicate="s1∈dom(container)∧container∈STATE ⇸ STATE">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p8" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
<org.eventb.core.prPred name="p9" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})"/>
<org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl))"/>
<org.eventb.core.prPred name="p10" org.eventb.core.predicate="active=(cl(container))[{active_leaf}]∪{active_leaf}"/>
<org.eventb.core.prPred name="p71" org.eventb.core.predicate="root∈active"/>
<org.eventb.core.prPred name="p93" org.eventb.core.predicate="s1=s2">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p11" org.eventb.core.predicate="init=(cl(container))[{init_leaf}]∪{init_leaf}"/>
<org.eventb.core.prPred name="p67" org.eventb.core.predicate="s1∈active ∖ {root}">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p80" org.eventb.core.predicate="(active ◁ container)∼∈active ∖ {active_leaf} ⇸ active ∖ {root}"/>
<org.eventb.core.prPred name="p77" org.eventb.core.predicate="dom(active ◁ container)=active ∖ {root}"/>
<org.eventb.core.prPred name="p82" org.eventb.core.predicate="container∼ ▷ active∈active ∖ {active_leaf} ↔ active ∖ {root}"/>
<org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r);cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r;cl(r)⊆cl(r)"/>
<org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
<org.eventb.core.prPred name="p15" org.eventb.core.predicate="active⊆states"/>
<org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)"/>
<org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
<org.eventb.core.prPred name="p69" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks})(active)"/>
<org.eventb.core.prPred name="p79" org.eventb.core.predicate="active ◁ container∈active ∖ {root} ⇸ active ∖ {active_leaf}"/>
<org.eventb.core.prPred name="p18" org.eventb.core.predicate="active_leaf ↦ root ↦ active ◁ container∈LinkedList(active)"/>
<org.eventb.core.prPred name="p19" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r∼)=(cl(r))∼"/>
<org.eventb.core.prPred name="p23" org.eventb.core.predicate="ran(container)=ran(cl(container))"/>
<org.eventb.core.prPred name="p56" org.eventb.core.predicate="states⊆STATE"/>
<org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
<org.eventb.core.prPred name="p24" org.eventb.core.predicate="init_leaf∈leaves"/>
<org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬s1=s2">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p26" org.eventb.core.predicate="leaves=states ∖ ran(container)"/>
<org.eventb.core.prPred name="p85" org.eventb.core.predicate="⊥"/>
<org.eventb.core.prPred name="p64" org.eventb.core.predicate="s1∈active ∖ {root}∧s2∈active ∖ {root}∧¬s1=s2⇒¬container(s1)=container(s2)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
<org.eventb.core.prPred name="p30" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
<org.eventb.core.prPred name="p92" org.eventb.core.predicate="container(s1) ↦ s2∈container∼ ▷ active">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p31" org.eventb.core.predicate="container∈dom(cl)"/>
<org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
<org.eventb.core.prPred name="p55" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧lst∈(cl(lnks))[{fst}] ∣ fst ↦ lst ↦ lnks}"/>
<org.eventb.core.prPred name="p72" org.eventb.core.predicate="active ◁ container∈active ∖ {root} ⤖ active ∖ {active_leaf}"/>
<org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r⊆cl(r)"/>
<org.eventb.core.prPred name="p35" org.eventb.core.predicate="active∈dom(LinkedList)"/>
<org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·cl(r)=r∪(r;cl(r))"/>
<org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
<org.eventb.core.prPred name="p84" org.eventb.core.predicate="container(s1)=container(s2)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prPred>
<org.eventb.core.prPred name="p41" org.eventb.core.predicate="Tree∈ℙ(STATE) → ℙ(STATE × (STATE ↔ STATE))"/>
<org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}⇒lnks∈dom(cl)∧⊤)"/>
<org.eventb.core.prPred name="p42" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})"/>
<org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
<org.eventb.core.prPred name="p78" org.eventb.core.predicate="dom(container)∩active=active ∖ {root}"/>
<org.eventb.core.prExpr name="e3" org.eventb.core.expression="s2">
<org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e0" org.eventb.core.expression="states ∖ {root}"/>
<org.eventb.core.prExpr name="e1" org.eventb.core.expression="container(s1)">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prExpr>
<org.eventb.core.prExpr name="e2" org.eventb.core.expression="s1">
<org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
</org.eventb.core.prExpr>
<org.eventb.core.prReas name="r16" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
<org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
<org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
<org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
<org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
<org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
<org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.contrL1"/>
<org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
<org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
<org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
<org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
<org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
<org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
<org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.convRewrites"/>
<org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.allmpD:0"/>
<org.eventb.core.prReas name="r14" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
<org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
<org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
</org.eventb.core.prProof>
</org.eventb.core.prFile>
