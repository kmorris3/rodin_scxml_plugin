machine m1_scxml_statemachine
includes scxml.scxml_m1_scxml_refinement
includes SimpleStateMachine.m2_refined_statemachine
 
refines m0_scxml_statemachine

sees c1_scxml_statemachine c0_4_tree_prop
	
events 
	event INITIALISATION
	synchronises INITIALISATION
	then
		@update-refined_active: refined_active ≔ refined_init
		@update-refined_active_leaf: refined_active_leaf ≔ refined_init_leaf
	end

	event raiseOldExternalTrigger refines raiseExternalTrigger
	synchronises raiseOldExternalTrigger
	end
	
	event raiseNewExternalTrigger
	synchronises raiseNewExternalTrigger
	end

	event dequeueOldExternal refines dequeueExternal
	synchronises dequeueOldExternal
	end
	
	event dequeueNewExternal
	synchronises dequeueNewExternal
	end

	event dequeueOldInternal refines dequeueInternal
	synchronises dequeueOldInternal
	end
	
	event dequeueNewInternal
	synchronises dequeueNewInternal
	end
	
	event oldTriggeredTransition refines triggeredTransition
	synchronises oldTriggeredTransition
	synchronises old_transition
	where 
		@is_triggered:	refined_transition ∈ dom(triggeredTransitions)
		@trigger:		triggeredTransitions(refined_transition) = t
	end
	
	event newTriggeredTransition  refines futureTransition
	synchronises newTriggeredTransition
	synchronises new_transition
	where 
		@is_triggered:	refined_transition ∈ dom(triggeredTransitions)
		@trigger:		triggeredTransitions(refined_transition) = t 
	end

	event oldCompleteTriggered refines completeTriggered
	synchronises oldCompleteTriggered
	where
		@finalisedFired: source[refinedFinalisedTransitions] ∩ refined_active = ∅
	end
	
	event newCompleteTriggered
	synchronises newCompleteTriggered
	where
		@finalisedFired: source[refinedFinalisedTransitions] ∩ refined_active = ∅
	end

	event oldUntriggeredTransition refines untriggeredTransition
	synchronises oldUntriggeredTransition
	synchronises old_transition
	where 
		@not_triggered: 	refined_transition ∉ dom(refinedTriggeredTransitions)
	end
	
	event newUntriggeredTransition refines futureTransition
	synchronises newUntriggeredTransition
	synchronises new_transition
	where 
		@not_triggered: 	refined_transition ∉ dom(refinedTriggeredTransitions)
	end

	event oldCompleteUntriggered refines completeUntriggered
	synchronises oldCompleteUntriggered
	where
		@finalisedFired: source[refinedFinalisedTransitions] ∩ refined_active = ∅
	end
	
	event newCompleteUntriggered
	synchronises newCompleteUntriggered
	where
		@finalisedFired: source[refinedFinalisedTransitions] ∩ refined_active = ∅
	end

end