context gluing_scxml_statemachine_ctx
extends 
	abs_scxml_statemachine_ctx
	cnc_scxml_statemachine_ctx
	gluing_statemachine_ctx 
	//gluing_scxml_ctx	//not needed so far
axioms
@finalised: 	∀tr· tr ∈ abs_finalisedTransitions ⇒ cnc_source[{tr}]=abs_source[{tr}]  //guards of finalised transitions cannot be strengthened
@refinedF:		abs_finalisedTransitions ⊆ cnc_finalisedTransitions					//once finalised, always finalised 
 
// These axioms ensure that a triggered transition remains triggered in refinements and an untriggered transition remains untriggered
// this is needed for refinement. Note that the original axiom, domaintr, is not strong enough because transitionlink is not injective.
// The two replacement axioms are sufficient for automatic proof of the GD POs for the abstract triggered/untriggered condition.
//@domaintr:		transition_link[dom(cnc_triggeredTransitions)] = dom(abs_triggeredTransitions)
@stayTriggered:	 	∀t·t∈dom(transition_link) ∧ t∈dom(cnc_triggeredTransitions) ⇒ transition_link(t) ∈ dom(abs_triggeredTransitions)
@stayUnTriggered:	∀t·t∈dom(transition_link) ∧ t∉dom(cnc_triggeredTransitions) ⇒ transition_link(t) ∉ dom(abs_triggeredTransitions)
//this ensures that we do not even change the trigger for a different one
@linkingtr_tr: 	∀t·t∈dom(transition_link) ∧ t∈dom(cnc_triggeredTransitions) ⇒		//refined transitions have the same trigger as their abstract counterpart
					 cnc_triggeredTransitions(t)=abs_triggeredTransitions(transition_link(t))
		 
end