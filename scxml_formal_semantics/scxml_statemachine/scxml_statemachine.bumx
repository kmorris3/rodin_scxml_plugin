machine scxml_statemachine

/*
 * This machine joins the scxml and statemachine models together
 * 
 * This means that we synchronise the scxml step events with the staatemachine transition events.
 * 
 * 
 */
  
includes scxml 
includes statemachine

sees scxml_statemachine_ctx c0_4_tree_prop
 
events
	event INITIALISATION
	synchronises INITIALISATION
	//synchronises INITIALISATION	// cannot synch since both events have the same name hence...
	then
		@update-active: active ≔ init					//copied from scxml_statemachine
		@update-active_leaf: active_leaf ≔ init_leaf	//copied from scxml_statemachine
	end

	event raiseExternalTrigger
	synchronises raiseExternalTrigger
	end
	
	event dequeueExternalTrigger
	synchronises dequeueExternalTrigger
	end
	
	event dequeueInternalTrigger
	synchronises dequeueInternalTrigger
	end
	
	event triggeredTransition
	synchronises triggeredStep
	synchronises transition
	where 
		@is_triggered:	transition ∈ dom(triggeredTransitions)
		@this_trigger:		triggeredTransitions(transition) = trigger 
	end
	
	event discardTrigger
	synchronises discardTrigger
	where
		@finalisedFired: source[finalisedTransitions] ∩ active = ∅
	end
	
	event untriggeredStep
	synchronises untriggeredStep
	synchronises transition
	where 
		@not_triggered: 	transition ∉ dom(triggeredTransitions)
	end
	
	event completion
	synchronises completion
	where
		@finalisedFired: source[finalisedTransitions] ∩ active = ∅
	end
	
//	event futureDequeue	//needed to allow for future triggers starting a run
//	synchronises futureDequeue	
//	end
	
	event futureStep	//needed if we allow adding raising of abstract internal triggers in later refinements
	synchronises futureStep
	end

end