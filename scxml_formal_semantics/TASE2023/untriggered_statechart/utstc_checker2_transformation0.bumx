machine utstc_checker2_transformation0
refines utstc_checker
sees utstc_ctx2
variables
	finished
	result
invariants
	@result: finished = TRUE ⇒ result = bool(
		enabling ∈ transformations → ℙ1(states) ∧
		exiting ∈ transformations → ℙ1(states) ∧
		(∀trf, s, r ·
    		trf ∈ transformations ∧
    		s ∈ exiting(trf) ∧
    		r ∈ regions ∧ 
    		s ∈ r
    	⇒
    		exiting(trf) ∩ r = {s} ∨ r ⊆ exiting(trf)) ∧
    	(∀trf, s, r ·
    		trf ∈ transformations ∧
    		s ∈ exiting(trf) ∧
    		r ∈ regions ∧
    		container[r] = {s}
    	⇒
    		exiting(trf) ∩ r ≠ ∅) ∧
    	(∀trf, s, r · trf ∈ transformations ∧ 
    		s ∈ enabling(trf) ∧
    		r ∈ regions ∧
    		s ∈ r
    	⇒
    		exiting(trf) ∩ r = {s})
	)
events
	event INITIALISATION extends INITIALISATION
	end

	convergent event checkFailed extends checkFailed
	when
		@grd2: ¬(
			enabling ∈ transformations → ℙ1(states) ∧
			exiting ∈ transformations → ℙ1(states) ∧
			(∀trf, s, r ·
    			trf ∈ transformations ∧
    			s ∈ exiting(trf) ∧
    			r ∈ regions ∧ 
    			s ∈ r
    		⇒
    			exiting(trf) ∩ r = {s} ∨ r ⊆ exiting(trf)) ∧
	    	(∀trf, s, r ·
    			trf ∈ transformations ∧
    			s ∈ exiting(trf) ∧
    			r ∈ regions ∧
    			container[r] = {s}
    		⇒
    			exiting(trf) ∩ r ≠ ∅) ∧
	    	(∀trf, s, r · trf ∈ transformations ∧ 
    			s ∈ enabling(trf) ∧
    			r ∈ regions ∧
    			s ∈ r
    		⇒
    			exiting(trf) ∩ r = {s})
		)
	end

	convergent event checkSuccessful extends checkSuccessful
	when
		@grd2: (
			enabling ∈ transformations → ℙ1(states) ∧
			exiting ∈ transformations → ℙ1(states) ∧
			(∀trf, s, r ·
    			trf ∈ transformations ∧
    			s ∈ exiting(trf) ∧
    			r ∈ regions ∧ 
    			s ∈ r
    		⇒
    			exiting(trf) ∩ r = {s} ∨ r ⊆ exiting(trf)) ∧
	    	(∀trf, s, r ·
    			trf ∈ transformations ∧
    			s ∈ exiting(trf) ∧
    			r ∈ regions ∧
    			container[r] = {s}
    		⇒
    			exiting(trf) ∩ r ≠ ∅) ∧
	    	(∀trf, s, r · trf ∈ transformations ∧ 
    			s ∈ enabling(trf) ∧
    			r ∈ regions ∧
    			s ∈ r
    		⇒
    			exiting(trf) ∩ r = {s})
		)
	end

end