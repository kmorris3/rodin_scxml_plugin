machine scxml_m0_scxml 
sees scxml_c0_abstract

variables
	iq
	eq
	dt
	uc

invariants
	@iq: iq ∈ ℙ(AbstractInternalTriggers)
	@eq: eq ∈ ℙ(AbstractExternalTriggers)
	@dt: dt ∈ DeQueueType
	@dtwd: dt ⊆ AbstractInternalTriggers ∪ AbstractExternalTriggers
	@uc: uc ∈ BOOL
	
	@firingTriggered: dt ≠ ∅ ⇒ uc=FALSE		//just a sanity check
	@readyToDequeue: uc=TRUE ⇒ dt = ∅		//just a sanity check
		
events

	event INITIALISATION
	then
		@iq_init:	iq ≔ ∅ 
		@eq_init: 	eq ≔ ∅
		@dt_init:	dt ≔ ∅
		@uc_init: 	uc ≔ FALSE
	end
	
	event raiseExternalTrigger
	any t where
		@t:			t ∈ AbstractExternalTriggers
	then
		@eq_set:		eq ≔ eq ∪ {t}
	end
	
	event dequeueExternal
	any t new_eq where 
		@uc:			uc = TRUE
		theorem @dt:		dt = ∅	//sanity check
		@t: 			t ∈ eq
		@new_eq:		new_eq = eq ∖ {t}
		@iq:			iq = ∅
	then 
		@dt_set: 	dt ≔ {t}
		@eq_set:		eq ≔ new_eq 
		@uc_set:		uc ≔ FALSE
	end

	event dequeueInternal
	any t new_iq where 
		@uc:			uc = TRUE
		theorem @dt:		dt = ∅	//sanity check
		@t: 			t ∈ iq
		@new_iq:		new_iq = iq ∖ {t}
	then 
		@dt_set: 	dt ≔ {t}
		@eq_set:		iq ≔ new_iq 
		@uc_set:		uc ≔ FALSE
	end
	
	event triggeredTransition 
	any t R
	where 
		@t: 			t ∈ dt
		theorem @uc:		uc = FALSE	//sanity check
		@R:			R ⊆ AbstractInternalTriggers
	then 
		@dt_set: 	dt ≔ ∅
		@iq_set:		iq ≔ iq ∪ R		//raised triggers
	end
	
	event completeTriggered
		any t where 
		@t: 			t ∈ dt
		theorem @uc:		uc = FALSE	//sanity check			 
	then 
		@dt_set: 	dt ≔ ∅
	end
	
	event untriggeredTransition
	any R
	where 
		@dt: 		dt = ∅
		@uc:			uc = FALSE		
		@R:			R ⊆ AbstractInternalTriggers
	then 
		@iq_set:		iq ≔ iq ∪ R		//raised triggers
	end
	
	event completeUntriggered
	where
		@dt: 		dt = ∅
		@uc:			uc = FALSE
	then
		@uc_set:		uc ≔ TRUE
	end
	
//	event futureTransition	//needed if we allow adding raising of abstract internal triggers in later refinements
//	any R
//	where 
//		@R:			R ⊆ AbstractInternalTriggers
//		@uc:			uc = FALSE		
//	then 
//		@iq_set:		iq ≔ iq ∪ R		//raised triggers
//	end
	
end

