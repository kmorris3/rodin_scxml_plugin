<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="active-closure/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="LinkedList-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p108">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p106" org.eventb.core.prInfHyps="p107"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p106"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p107" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109,p110"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p108" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p111">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for cl(abs_container)" org.eventb.core.prGoal="p111" org.eventb.core.prHyps="p4">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p111" org.eventb.core.prHyps="p112">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for cl(abs_container)" org.eventb.core.prGoal="p111" org.eventb.core.prHyps="p2">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p111" org.eventb.core.prHyps="p113">
                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p111" org.eventb.core.prHyps="p3">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p114">
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p114" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115">
                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p112"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p113"/>
                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p115" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p3"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}∈dom(LinkedList)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="cl(abs_container)∈STATE ↔ STATE"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_active∈dom(LinkedList)∧LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="LinkedList∈ℙ(STATE) → ℙ(STATE × STATE × (STATE ↔ STATE))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}∈ℙ(STATE)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}∈dom(LinkedList)∧LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="abs_active⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="abs_active_leaf∈abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})"/>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="LinkedList∈ℙ(STATE) ⇸ ℙ(STATE × STATE × ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="cl∈(STATE ↔ STATE) → (STATE ↔ STATE)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="cl(abs_container)∈ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(STATE)"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="LinkedList-active/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p77"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p106">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p104" org.eventb.core.prInfHyps="p105"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p104"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p105" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107,p108"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="abs_active⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="abs_active_leaf∈abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ abs_active ◁ abs_container∈LinkedList(abs_active)"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ ((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ◁ abs_container∈LinkedList((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="different_layer/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="s1,s2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p110">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p106" org.eventb.core.prInfHyps="p107"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p108" org.eventb.core.prInfHyps="p109"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p106,p108"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p107" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111,p112"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s1,s2)" org.eventb.core.prGoal="p110" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p113">
                                                                                <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p113" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p117" org.eventb.core.prHyps="p114,p115,p116">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p117" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118"/>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p119">
                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p119" org.eventb.core.prHyps="p2"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p120"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="abs_container∈STATE ⇸ STATE"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒s1∈dom(abs_container)∧abs_container∈STATE ⇸ STATE∧s2∈dom(abs_container)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}">
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p120" org.eventb.core.predicate="s2∈dom(abs_container)">
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒s1∈dom(abs_container)∧abs_container∈STATE ⇸ STATE∧s2∈dom(abs_container)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="¬s1=s2">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="s1∈dom(abs_container)∧abs_container∈STATE ⇸ STATE∧s2∈dom(abs_container)">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_container∈abs_states ∖ {abs_root} → abs_states"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="s1∈dom(abs_container)">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="abs_active⊆abs_states"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="abs_active_leaf∈abs_states"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ abs_active ◁ abs_container∈LinkedList(abs_active)">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒s1∈dom(abs_container)∧abs_container∈STATE ⇸ STATE∧s2∈dom(abs_container)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ ((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ◁ abs_container∈LinkedList((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒s1∈dom(abs_container)∧abs_container∈STATE ⇸ STATE∧s2∈dom(abs_container)">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="different_layer/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="s1,s2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p78"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p109">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p105" org.eventb.core.prInfHyps="p106"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p107" org.eventb.core.prInfHyps="p108"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p105,p107"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p106" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110,p111"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s1,s2)" org.eventb.core.prGoal="p109" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p112">
                                                                                <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p112" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p113,p114,p115"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}">
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="¬s1=s2">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="s1" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="s2" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="abs_active⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="abs_active_leaf∈abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ abs_active ◁ abs_container∈LinkedList(abs_active)">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ ((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ◁ abs_container∈LinkedList((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="container_active/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p112">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p107" org.eventb.core.prInfHyps="p108"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p109" org.eventb.core.prInfHyps="p110"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p46" org.eventb.core.prInfHyps="p111"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p107,p109,p46"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p108" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113,p114"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s)" org.eventb.core.prGoal="p112" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115">
                                                                                <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p115" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p117" org.eventb.core.prHyps="p116">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p117" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118"/>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p119">
                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p119" org.eventb.core.prHyps="p2"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="abs_container∈STATE ⇸ STATE"/>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="s∈dom(abs_container)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}⇒s∈dom(abs_container)∧abs_container∈STATE ⇸ STATE">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_container∈abs_states ∖ {abs_root} → abs_states"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="abs_active⊆abs_states"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="abs_active_leaf∈abs_states"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀s⦂STATE·s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}⇒s∈dom(abs_container)∧abs_container∈STATE ⇸ STATE"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ abs_active ◁ abs_container∈LinkedList(abs_active)">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂STATE·s∈abs_active ∖ {abs_root}⇒s∈dom(abs_container)∧abs_container∈STATE ⇸ STATE"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="s∈dom(abs_container)∧abs_container∈STATE ⇸ STATE">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ ((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ◁ abs_container∈LinkedList((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="container_active/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p111">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p106" org.eventb.core.prInfHyps="p107"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p108" org.eventb.core.prInfHyps="p109"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p110"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p106,p108,p45"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p107" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112,p113"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s)" org.eventb.core.prGoal="p111" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p114">
                                                                                <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p114" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p115"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂STATE·s∈abs_active ∖ {abs_root}⇒abs_container(s)∈abs_active"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}⇒abs_container(s)∈(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="abs_active⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="abs_active_leaf∈abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ abs_active ◁ abs_container∈LinkedList(abs_active)">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀s⦂STATE·s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}⇒abs_container(s)∈(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ ((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ◁ abs_container∈LinkedList((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_container(s)∈(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="internal_queue/WD"/>
    <org.eventb.core.prProof name="external_queue/WD"/>
    <org.eventb.core.prProof name="readyToDequeue/THM"/>
    <org.eventb.core.prProof name="INITIALISATION/typeof-active/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_init" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_init⊆abs_states"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/typeof-active_leaf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_init_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_leaves" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_init_leaf∈abs_leaves"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/active-closure/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_init" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_init_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_init=(cl(abs_container))[{abs_init_leaf}]∪{abs_init_leaf}"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/internal_queue/INV"/>
    <org.eventb.core.prProof name="INITIALISATION/external_queue/INV"/>
    <org.eventb.core.prProof name="INITIALISATION/dequeue_trigger/INV"/>
    <org.eventb.core.prProof name="INITIALISATION/dequeue_triggerwd/INV"/>
    <org.eventb.core.prProof name="INITIALISATION/firingTriggered/INV"/>
    <org.eventb.core.prProof name="raiseExternalTrigger/external_queue/INV"/>
    <org.eventb.core.prProof name="raiseExternalTrigger/external_queue_set/WD"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/dequeue_trigger/THM"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/trigger/WD"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/external_queue/INV"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/dequeue_trigger/INV"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/dequeue_triggerwd/INV"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/firingTriggered/INV"/>
    <org.eventb.core.prProof name="dequeueExternalTrigger/external_queue_set/WD"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/dequeue_trigger/THM"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/trigger/WD"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/internal_queue/INV"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/dequeue_trigger/INV"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/dequeue_triggerwd/INV"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/firingTriggered/INV"/>
    <org.eventb.core.prProof name="dequeueInternalTrigger/external_queue_set/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/source-active/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/new_leaf_state/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/range-preservation/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/range-preservation/THM"/>
    <org.eventb.core.prProof name="triggeredTransition/leaves_are_states/THM"/>
    <org.eventb.core.prProof name="triggeredTransition/typeof-container/THM"/>
    <org.eventb.core.prProof name="triggeredTransition/completed/THM"/>
    <org.eventb.core.prProof name="triggeredTransition/raised_triggers/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/tr_st/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/typeof-active/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/typeof-active_leaf/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/active-closure/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/internal_queue/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/dequeue_trigger/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/dequeue_triggerwd/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/firingTriggered/INV"/>
    <org.eventb.core.prProof name="triggeredTransition/update-active/WD"/>
    <org.eventb.core.prProof name="triggeredTransition/internal_queue_set/WD"/>
    <org.eventb.core.prProof name="discardTrigger/completed/THM"/>
    <org.eventb.core.prProof name="discardTrigger/raised_triggers/WD"/>
    <org.eventb.core.prProof name="discardTrigger/internal_queue/INV"/>
    <org.eventb.core.prProof name="discardTrigger/dequeue_trigger/INV"/>
    <org.eventb.core.prProof name="discardTrigger/dequeue_triggerwd/INV"/>
    <org.eventb.core.prProof name="discardTrigger/firingTriggered/INV"/>
    <org.eventb.core.prProof name="discardTrigger/internal_queue_set/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/source-active/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/new_leaf_state/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/range-preservation/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/range-preservation/THM"/>
    <org.eventb.core.prProof name="untriggeredTransition/leaves_are_states/THM"/>
    <org.eventb.core.prProof name="untriggeredTransition/typeof-container/THM"/>
    <org.eventb.core.prProof name="untriggeredTransition/new_raised_trigger/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/tr_st/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/typeof-active/INV"/>
    <org.eventb.core.prProof name="untriggeredTransition/typeof-active_leaf/INV"/>
    <org.eventb.core.prProof name="untriggeredTransition/active-closure/INV"/>
    <org.eventb.core.prProof name="untriggeredTransition/internal_queue/INV"/>
    <org.eventb.core.prProof name="untriggeredTransition/update-active/WD"/>
    <org.eventb.core.prProof name="untriggeredTransition/internal_queue_set/WD"/>
    <org.eventb.core.prProof name="futureUntriggeredTransition/new_raised_trigger/WD"/>
    <org.eventb.core.prProof name="futureUntriggeredTransition/internal_queue/INV"/>
    <org.eventb.core.prProof name="futureUntriggeredTransition/internal_queue_set/WD"/>
    <org.eventb.core.prProof name="completion/firingTriggered/INV"/>
    <org.eventb.core.prProof name="abs_internal_queue/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p2" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p5,p2" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p5,p2" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p5,p2" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p5,p2" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p55" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_InternalTriggers∈dom(Seq)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_InternalTriggers∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_external_queue/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p1" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p5,p1" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p5,p1" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p5,p1" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p5,p1" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p2">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p91">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                        <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p73"/>
                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                        <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p80"/>
                                        <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p81"/>
                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                        <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p91" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="abs_ExternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) → ℙ(ℕ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_ExternalTriggers∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="abs_ExternalTriggers∈ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_ExternalTriggers∈dom(Seq)∧⊤"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="abs_ExternalTriggers∈dom(Seq)"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(TRIGGERS)"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_readyToDequeue/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p108" org.eventb.core.prInfHyps="p109"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p110" org.eventb.core.prInfHyps="p111"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p112" org.eventb.core.prInfHyps="p113"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p46" org.eventb.core.prInfHyps="p114"/>
                                                                <org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p108,p110,p112,p46"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p109" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115,p116"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118" org.eventb.core.prHyps="p117">
                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p118" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118">
                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p119"/>
                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p119" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p120"/>
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_completed=TRUE" org.eventb.core.prHyps="p117">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p120" org.eventb.core.prInfHyps="p121"/>
                                                                                                        <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p120"/>
                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p121" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p122"/>
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p122"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_active_leaf" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_active=(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀s⦂STATE·s∈abs_active ∖ {abs_root}⇒abs_container(s)∈abs_active">
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧s2∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="¬⊥⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p122" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p121" org.eventb.core.predicate="TRUE=FALSE"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="abs_active⊆abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_active_leaf∈abs_states">
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ abs_active ◁ abs_container∈LinkedList(abs_active)">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀s⦂STATE·s∈((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ∖ {abs_root}⇒abs_container(s)∈(cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}">
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="abs_active_leaf ↦ abs_root ↦ ((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf}) ◁ abs_container∈LinkedList((cl(abs_container))[{abs_active_leaf}]∪{abs_active_leaf})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_completed=TRUE"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p120" org.eventb.core.predicate="abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/abs_internal_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/abs_external_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/abs_dequeue_trigger/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="DeQueueType" org.eventb.core.type="ℙ(ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))∈DeQueueType"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/abs_dequeue_triggerwd/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_ExternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/abs_firingTriggered/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))≠(∅ ⦂ ℙ(TRIGGERS))⇒FALSE=FALSE"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_raiseExternalTrigger/abs_external_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_raiseExternalTrigger/external_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p108"/>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p109">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p109" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_external_queue ↦ abs_trigger∈dom(Seq_append)∧Seq_append∈ℙ(ℤ × TRIGGERS) × TRIGGERS ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="Seq_append∈ℙ(ℤ × TRIGGERS) × TRIGGERS ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_append∈Seq(TRIGGERS) × TRIGGERS → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="abs_external_queue ↦ abs_trigger∈dom(Seq_append)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/dequeue_trigger/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p58"/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤⇒⊥"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_completed=TRUE"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/trigger/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24,p25" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115"/>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_external_queue∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_external_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_external_queue∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × TRIGGERS) ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × TRIGGERS) ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_external_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_head∈Seq(TRIGGERS) ∖ {∅ ⦂ ℙ(ℤ×TRIGGERS)} → TRIGGERS"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/abs_external_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p22,p23" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p21"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p60"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p79"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p86"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_external_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_external_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/abs_dequeue_trigger/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25,p1" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_dequeue_trigger=∅" org.eventb.core.prHyps="p1">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p115"/>
                                                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p116"/>
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_trigger=Seq_head(abs_external_queue)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p117"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="DeQueueType" org.eventb.core.type="ℙ(ℙ(TRIGGERS))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="{Seq_head(abs_external_queue)}∈DeQueueType"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_dequeue_trigger∈DeQueueType"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_external_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{abs_trigger}∈DeQueueType"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_external_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_trigger=Seq_head(abs_external_queue)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))∈DeQueueType"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/abs_dequeue_triggerwd/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25,p1" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p63"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p63"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p82"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_dequeue_trigger=∅" org.eventb.core.prHyps="p1">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p116" org.eventb.core.prInfHyps="p117"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p116"/>
                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p117"/>
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_trigger=Seq_head(abs_external_queue)" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p2">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_ExternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="abs_trigger∈abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_external_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{abs_trigger}⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_external_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="Seq_head(abs_external_queue)∈abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_trigger=Seq_head(abs_external_queue)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_dequeue_trigger⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/abs_firingTriggered/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p23,p24" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p22"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_external_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{abs_trigger}≠(∅ ⦂ ℙ(TRIGGERS))⇒FALSE=FALSE"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_external_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueExternalTrigger/external_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24,p25" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115"/>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_external_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_external_queue∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_external_queue∈dom(Seq_tail)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_external_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_tail∈Seq(TRIGGERS) ∖ {∅ ⦂ ℙ(ℤ×TRIGGERS)} → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_external_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="Seq_tail∈ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/dequeue_trigger/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p58"/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤⇒⊥"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_completed=TRUE"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/trigger/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24,p25" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115"/>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_internal_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_internal_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="Seq_head∈ℙ(ℤ × TRIGGERS) ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_internal_queue∈dom(Seq_head)∧Seq_head∈ℙ(ℤ × TRIGGERS) ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_head∈Seq(TRIGGERS) ∖ {∅ ⦂ ℙ(ℤ×TRIGGERS)} → TRIGGERS"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_internal_queue∈dom(Seq_head)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/abs_internal_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p22,p23" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p21"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p60"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p79"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p86"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_internal_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_internal_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/abs_dequeue_trigger/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25,p2" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_dequeue_trigger=∅" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p115"/>
                                                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p116"/>
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_trigger=Seq_head(abs_internal_queue)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p117"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="DeQueueType" org.eventb.core.type="ℙ(ℙ(TRIGGERS))"/>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_trigger=Seq_head(abs_internal_queue)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="{Seq_head(abs_internal_queue)}∈DeQueueType"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_dequeue_trigger∈DeQueueType"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_internal_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{abs_trigger}∈DeQueueType"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_internal_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))∈DeQueueType"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/abs_dequeue_triggerwd/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25,p2" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p63"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p63"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p82"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_dequeue_trigger=∅" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p116" org.eventb.core.prInfHyps="p117"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p116"/>
                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p117"/>
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with abs_trigger=Seq_head(abs_internal_queue)" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p1">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_ExternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_trigger=Seq_head(abs_internal_queue)"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="abs_trigger∈abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{abs_trigger}⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_internal_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_internal_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="(∅ ⦂ ℙ(TRIGGERS))⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="Seq_head(abs_internal_queue)∈abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_dequeue_trigger⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/abs_firingTriggered/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p23,p24" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p22"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_trigger" org.eventb.core.type="TRIGGERS"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{abs_trigger}≠(∅ ⦂ ℙ(TRIGGERS))⇒FALSE=FALSE"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_internal_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_internal_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_dequeueInternalTrigger/external_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24,p25" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115"/>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤⇒⊤"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_internal_queue≠(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬⊤⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_internal_queue=(∅ ⦂ ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Seq_tail∈Seq(TRIGGERS) ∖ {∅ ⦂ ℙ(ℤ×TRIGGERS)} → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_internal_queue∈dom(Seq_tail)∧Seq_tail∈ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_internal_queue∈dom(Seq_tail)"/>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=TRUE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="Seq_tail∈ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/source-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p109">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p109" org.eventb.core.prHyps="p1">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p110">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p110" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_source" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_transition∈dom(abs_source)∧abs_source∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="abs_transition∈dom(abs_source)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="abs_source∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_source∈abs_transitions → abs_states"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_transition∈abs_transitions"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_transitions"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/new_leaf_state/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="STATE,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p3">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p85"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p112">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p112" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p113">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p113" org.eventb.core.prHyps="p4"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_transition∈dom(abs_target)∧abs_target∈TRANSITION ⇸ STATE∧(abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="abs_transition∈dom(abs_target)∧abs_target∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="abs_target∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_transition∈dom(abs_target)∧abs_target∈TRANSITION ⇸ STATE∧(abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="abs_target∈abs_transitions → abs_states"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_transition∈abs_transitions"/>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="abs_transition∈dom(abs_target)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_transitions"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/range-preservation/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊥">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="abs_new_leaf_state=abs_target(abs_transition)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/range-preservation/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="ran(abs_container)=ran(cl(abs_container))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/leaves_are_states/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_leaves" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_leaves⊆abs_states"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/typeof-container/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈abs_states ∖ {abs_root} → abs_states"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/completed/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25,p15" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="p60" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p62"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊥">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="abs_completed=TRUE⇒⊤"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/raised_triggers/WD"/>
    <org.eventb.core.prProof name="abs_triggeredTransition/tr_st/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p28,p17" org.eventb.core.prInfHyps="p27"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p27"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p115" org.eventb.core.prHyps="p2">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_TransitionStep∈TRANSITION ⇸ STEPS"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_transition∈dom(abs_TransitionStep)"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_transition∈dom(abs_TransitionStep)∧abs_TransitionStep∈TRANSITION ⇸ STEPS"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_transition∈abs_transitions"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_TransitionStep∈abs_transitions ↣ abs_Steps"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_transitions"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/typeof-active/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE,STEPS,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27,p16" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p115" org.eventb.core.prInfHyps="p116"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p117" org.eventb.core.prInfHyps="p118"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p115,p117"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p119"/>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p120"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]∪{abs_new_leaf_state}⊆abs_states"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]⊆abs_states∧abs_new_leaf_state∈abs_states"/>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p120" org.eventb.core.predicate="abs_new_leaf_state∈abs_states"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]⊆abs_states"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_StepTrigger(abs_TransitionStep(abs_transition))∈abs_dequeue_trigger">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_StepTrigger(abs_Step)∈abs_dequeue_trigger">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/typeof-active_leaf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_leaves" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_new_leaf_state∈abs_leaves"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/active-closure/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p26,p15" org.eventb.core.prInfHyps="p25"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p22"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p25"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]∪{abs_new_leaf_state}=(cl(abs_container))[{abs_new_leaf_state}]∪{abs_new_leaf_state}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/abs_internal_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STEPS,TRANSITION,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27,p16" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p87"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p114" org.eventb.core.prInfHyps="p115"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p116" org.eventb.core.prInfHyps="p117"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p114,p116"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepRaised" org.eventb.core.type="ℙ(STEPS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="Seq_concat(abs_internal_queue ↦ abs_StepRaised(abs_TransitionStep(abs_transition)))∈Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Seq_concat(abs_internal_queue ↦ abs_StepRaised(abs_Step))∈Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_StepTrigger(abs_TransitionStep(abs_transition))∈abs_dequeue_trigger">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_StepTrigger(abs_Step)∈abs_dequeue_trigger">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/abs_dequeue_trigger/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STEPS,TRANSITION,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27,p16" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p87"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p114" org.eventb.core.prInfHyps="p115"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p116" org.eventb.core.prInfHyps="p117"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p114,p116"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="DeQueueType" org.eventb.core.type="ℙ(ℙ(TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_Step)}∈DeQueueType"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_TransitionStep(abs_transition))}∈DeQueueType"/>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_StepTrigger(abs_TransitionStep(abs_transition))∈abs_dequeue_trigger"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_StepTrigger(abs_Step)∈abs_dequeue_trigger"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/abs_dequeue_triggerwd/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STEPS,TRANSITION,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27,p16" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p87"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p114" org.eventb.core.prInfHyps="p115"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p116" org.eventb.core.prInfHyps="p117"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p114,p116"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_ExternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_Step)}⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_StepTrigger(abs_TransitionStep(abs_transition))∈abs_dequeue_trigger"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_StepTrigger(abs_Step)∈abs_dequeue_trigger"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_TransitionStep(abs_transition))}⊆abs_InternalTriggers∪abs_ExternalTriggers"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/abs_firingTriggered/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p26,p16" org.eventb.core.prInfHyps="p25"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p25"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_Step)}≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_Step)}≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/update-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p63" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊥">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="abs_new_leaf_state=abs_target(abs_transition)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/internal_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="STEPS,TRANSITION,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p25"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p27"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p31,p20" org.eventb.core.prInfHyps="p30"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p27"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p30"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p91"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p100" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p116"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p101" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p117"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p3">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p122">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p118" org.eventb.core.prInfHyps="p119"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p120" org.eventb.core.prInfHyps="p121"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p118,p120"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p122" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p123">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for abs_TransitionStep(abs_transition)" org.eventb.core.prGoal="p123" org.eventb.core.prHyps="p5">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p123" org.eventb.core.prHyps="p124">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for abs_TransitionStep(abs_transition)" org.eventb.core.prGoal="p123" org.eventb.core.prHyps="p2">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p123" org.eventb.core.prHyps="p125">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p123" org.eventb.core.prHyps="p1">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p124">
                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p124" org.eventb.core.prHyps="p124"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p126">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p126" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p127"/>
                                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p128">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p128" org.eventb.core.prHyps="p4"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepRaised" org.eventb.core.type="ℙ(STEPS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p123" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepRaised)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_TransitionStep∈TRANSITION ⇸ STEPS"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p125" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈STEPS"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepRaised)∧abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)∧abs_internal_queue ↦ abs_StepRaised(abs_Step)∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p127" org.eventb.core.predicate="abs_internal_queue ↦ abs_StepRaised(abs_TransitionStep(abs_transition))∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq_concat∈Seq(TRIGGERS) × Seq(TRIGGERS) → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_StepRaised∈abs_Steps → Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="abs_Steps⊆STEPS"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p126" org.eventb.core.predicate="abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p121" org.eventb.core.predicate="abs_StepTrigger(abs_TransitionStep(abs_transition))∈abs_dequeue_trigger">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p124" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈abs_Steps"/>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p128" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p122" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepRaised)∧abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)∧abs_internal_queue ↦ abs_StepRaised(abs_TransitionStep(abs_transition))∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p120" org.eventb.core.predicate="abs_StepTrigger(abs_Step)∈abs_dequeue_trigger">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="abs_TransitionStep∈abs_transitions ↣ abs_Steps"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_Steps"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/completed/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="p55" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p57"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p59"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p76"/>
                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p83"/>
                                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p84"/>
                                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊥">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="abs_completed=TRUE⇒⊤"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/raised_triggers/WD"/>
    <org.eventb.core.prProof name="abs_discardTrigger/abs_internal_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p21"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/abs_dequeue_trigger/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p21"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/abs_dequeue_triggerwd/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p21"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/abs_firingTriggered/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_Step)}≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_completed=FALSE"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger ∖ {abs_StepTrigger(abs_Step)}≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/internal_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p85"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p112"/>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p113">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p113" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p114"/>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p115">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p115" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepRaised" org.eventb.core.type="ℙ(STEPS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepRaised)∧abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)∧abs_internal_queue ↦ abs_StepRaised(abs_Step)∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="abs_internal_queue ↦ abs_StepRaised(abs_Step)∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈Seq(TRIGGERS) × Seq(TRIGGERS) → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_StepRaised∈abs_Steps → Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="abs_Steps⊆STEPS"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="abs_Step∈dom(abs_StepRaised)"/>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/source-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p57"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p82"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p109">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p109" org.eventb.core.prHyps="p1">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p110">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p110" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_source" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_transition∈dom(abs_source)∧abs_source∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="abs_transition∈dom(abs_source)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="abs_source∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_source∈abs_transitions → abs_states"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_transition∈abs_transitions"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_transitions"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/new_leaf_state/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="STATE,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p3">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p7,p8" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p85"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p112">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p112" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p113">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p113" org.eventb.core.prHyps="p4"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_transition∈dom(abs_target)∧abs_target∈TRANSITION ⇸ STATE∧(abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="abs_transition∈dom(abs_target)∧abs_target∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="abs_target∈TRANSITION ⇸ STATE"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_transition∈dom(abs_target)∧abs_target∈TRANSITION ⇸ STATE∧(abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="abs_target∈abs_transitions → abs_states"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_transition∈abs_transitions"/>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="abs_transition∈dom(abs_target)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_transitions"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/range-preservation/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊥">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="abs_new_leaf_state=abs_target(abs_transition)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/range-preservation/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="ran(abs_container)=ran(cl(abs_container))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/leaves_are_states/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_leaves" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_leaves⊆abs_states"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/typeof-container/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈abs_states ∖ {abs_root} → abs_states"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/new_raised_trigger/WD"/>
    <org.eventb.core.prProof name="abs_untriggeredTransition/typeof-active/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STATE,STEPS,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p30,p16" org.eventb.core.prInfHyps="p29"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p29"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p91"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p100" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p116"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p101" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p117"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p118" org.eventb.core.prInfHyps="p119"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p118"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p120"/>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p121"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]∪{abs_new_leaf_state}⊆abs_states"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]⊆abs_states∧abs_new_leaf_state∈abs_states"/>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))"/>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p121" org.eventb.core.predicate="abs_new_leaf_state∈abs_states"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="abs_states⊆STATE"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p120" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]⊆abs_states"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈abs_Steps ∖ dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_Step∈abs_Steps ∖ dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/typeof-active_leaf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="abs_leaves" org.eventb.core.type="ℙ(STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_new_leaf_state∈abs_leaves"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/active-closure/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p6"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p3,p4" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p20"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p25"/>
                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="p29,p15" org.eventb.core.prInfHyps="p28"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p22"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p25"/>
                        <org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p28"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(cl(abs_container))[{abs_new_leaf_state}]∪{abs_new_leaf_state}=(cl(abs_container))[{abs_new_leaf_state}]∪{abs_new_leaf_state}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/abs_internal_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="STEPS,TRANSITION,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="p30,p16" org.eventb.core.prInfHyps="p29"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p29"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p90"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p100" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p116"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p119">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p117" org.eventb.core.prInfHyps="p118"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p117"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepRaised" org.eventb.core.type="ℙ(STEPS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="Seq_concat(abs_internal_queue ↦ abs_StepRaised(abs_TransitionStep(abs_transition)))∈Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Seq_concat(abs_internal_queue ↦ abs_StepRaised(abs_Step))∈Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈abs_Steps ∖ dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_Step∈abs_Steps ∖ dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/update-active/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STATE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prHypAction name="REWRITE23" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
        <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_container∈dom(cl)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊥">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="abs_new_leaf_state=abs_target(abs_transition)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/internal_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="STEPS,TRANSITION,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="p8,p9" org.eventb.core.prInfHyps="p17"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p25"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p27"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p31" org.eventb.core.prInfHyps="p30"/>
                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="p34,p20" org.eventb.core.prInfHyps="p33"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p27"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p30"/>
                        <org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p33"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p70"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p94"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p100" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p116"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p101" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p117"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p102" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p118"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p103" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p119"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p104" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p120"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with abs_TransitionStep(abs_transition)=abs_Step" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p3">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p123">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p121" org.eventb.core.prInfHyps="p122"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p121"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p123" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p124">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for abs_TransitionStep(abs_transition)" org.eventb.core.prGoal="p124" org.eventb.core.prHyps="p5">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p124" org.eventb.core.prHyps="p125">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for abs_TransitionStep(abs_transition)" org.eventb.core.prGoal="p124" org.eventb.core.prHyps="p2">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p124" org.eventb.core.prHyps="p126">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p124" org.eventb.core.prHyps="p1">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p125">
                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p125" org.eventb.core.prHyps="p125"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p127">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p127" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p128"/>
                                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p129">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p129" org.eventb.core.prHyps="p4"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepRaised" org.eventb.core.type="ℙ(STEPS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p124" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepRaised)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_TransitionStep∈TRANSITION ⇸ STEPS"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p126" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈STEPS"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepRaised)∧abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)∧abs_internal_queue ↦ abs_StepRaised(abs_Step)∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p128" org.eventb.core.predicate="abs_internal_queue ↦ abs_StepRaised(abs_TransitionStep(abs_transition))∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="abs_TransitionStep(abs_transition)=abs_Step"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Seq_concat∈Seq(TRIGGERS) × Seq(TRIGGERS) → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_StepRaised∈abs_Steps → Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="abs_Steps⊆STEPS"/>
        <org.eventb.core.prPred name="p122" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈abs_Steps ∖ dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p127" org.eventb.core.predicate="abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p121" org.eventb.core.predicate="abs_Step∈abs_Steps ∖ dom(abs_StepTrigger)">
            <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p125" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈abs_Steps"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p120" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p129" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p123" org.eventb.core.predicate="abs_TransitionStep(abs_transition)∈dom(abs_StepRaised)∧abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)∧abs_internal_queue ↦ abs_StepRaised(abs_TransitionStep(abs_transition))∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="abs_TransitionStep∈abs_transitions ↣ abs_Steps"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_Steps"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_futureUntriggeredTransition/new_raised_trigger/WD"/>
    <org.eventb.core.prProof name="abs_futureUntriggeredTransition/abs_internal_queue/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p1"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p5"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p2,p3" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p21"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p60"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p61"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p85"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="abs_Steps⊆STEPS">
            <org.eventb.core.prIdent name="STEPS" org.eventb.core.type="ℙ(STEPS)"/>
            <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_futureUntriggeredTransition/internal_queue_set/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p27"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p27"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p63"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p88"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p89"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p96" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p115"/>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p116">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p116" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p117"/>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p118">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p118" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_InternalTriggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepRaised" org.eventb.core.type="ℙ(STEPS×ℙ(ℤ×TRIGGERS))"/>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_internal_queue" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepRaised)∧abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)∧abs_internal_queue ↦ abs_StepRaised(abs_Step)∈dom(Seq_concat)∧Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="abs_internal_queue ↦ abs_StepRaised(abs_Step)∈dom(Seq_concat)"/>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Seq_concat∈Seq(TRIGGERS) × Seq(TRIGGERS) → Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_StepRaised∈abs_Steps → Seq(abs_InternalTriggers)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="abs_transitions⊆TRANSITION">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="abs_Steps⊆STEPS"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="abs_Step∈dom(abs_StepRaised)"/>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="abs_StepRaised∈STEPS ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="Seq_concat∈ℙ(ℤ × TRIGGERS) × ℙ(ℤ × TRIGGERS) ⇸ ℙ(ℤ × TRIGGERS)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_completion/abs_firingTriggered/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p3"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p7"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p9"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p11"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="p4,p5" org.eventb.core.prInfHyps="p13"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p15"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p18"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p21"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p23"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="p1" org.eventb.core.prInfHyps="p26"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="HIDE20" org.eventb.core.prHyps="p23"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p26"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒TRUE=FALSE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_untriggeredTransition/tr_st/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRANSITION">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p27"/>
                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="p31,p17" org.eventb.core.prInfHyps="p30"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p54" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p27"/>
                        <org.eventb.core.prHypAction name="HIDE23" org.eventb.core.prHyps="p30"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬(∀p·¬([[1]]⊆p∧p;p⊆p))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in ¬¬([[1]]⊆[[0]]∧[[0]];[[0]]⊆[[0]])" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p67"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p67"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p76" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77"/>
                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p82" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                <org.eventb.core.prHypAction name="HIDE8" org.eventb.core.prHyps="p84"/>
                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                <org.eventb.core.prHypAction name="HIDE12" org.eventb.core.prHyps="p91"/>
                                                <org.eventb.core.prHypAction name="HIDE13" org.eventb.core.prHyps="p92"/>
                                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p94"/>
                                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p95"/>
                                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p96"/>
                                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p97"/>
                                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p98"/>
                                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p99"/>
                                                <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p100"/>
                                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p101"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p102"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p103"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p75" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p104"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p105"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p106"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p107"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p108"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p109"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p93" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p110"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p94" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p111"/>
                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p95" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p112"/>
                                                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p97" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p113"/>
                                                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p98" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p114"/>
                                                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p99" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p115"/>
                                                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p100" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p116"/>
                                                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p101" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p117"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p118">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p118" org.eventb.core.prHyps="p2">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p119">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p119" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.1"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        <org.eventb.core.prIdent name="abs_transitions" org.eventb.core.type="ℙ(TRANSITION)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·¬¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·T⊆TRIGGERS ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·⊤ ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="∀S⦂ℙ(STATE)·⊤⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p111" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p119" org.eventb.core.predicate="abs_TransitionStep∈TRANSITION ⇸ STEPS"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·S⊆STATE∧r ↦ c∈Tree(S)∧T⊆TRANSITION∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·S⊆TRIGGERS∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p114" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p115" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p109" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·r ↦ c∈Tree(S)∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p113" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·⊤⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p118" org.eventb.core.predicate="abs_transition∈dom(abs_TransitionStep)"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="cl=(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·⊤ ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_transition∈dom(abs_TransitionStep)∧abs_TransitionStep∈TRANSITION ⇸ STEPS"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·⊤⇒(∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_completed=TRUE⇒⊤">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·⊤⇒Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="Tree=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts∧(∀n⦂STATE·n∈Sts ∖ {rt}⇒rt∈(cl(prn))[{n}]) ∣ rt ↦ prn})">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="abs_states⊆STATE">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_states" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="STATE_MACHINE={S⦂ℙ(STATE),r⦂STATE,c⦂ℙ(STATE×STATE),T⦂ℙ(TRANSITION),s⦂ℙ(TRANSITION×STATE),t⦂ℙ(TRANSITION×STATE)·⊤∧r ↦ c∈Tree(S)∧⊤∧s∈T → S∧t∈T → S ∣ S ↦ r ↦ c ↦ T ↦ s ↦ t}">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="STATE_MACHINE" org.eventb.core.type="ℙ(ℙ(STATE)×STATE×ℙ(STATE×STATE)×ℙ(TRANSITION)×ℙ(TRANSITION×STATE)×ℙ(TRANSITION×STATE))"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="abs_transitions⊆TRANSITION"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="abs_Steps⊆STEPS"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p108" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(Seq_append(s ↦ t) ↦ T)=Seq_append(Seq_keep(s ↦ T) ↦ t)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·⊤∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧⊤⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p110" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p107" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·Seq_keep((∅ ⦂ ℙ(ℤ×TRIGGERS)) ↦ T)=(∅ ⦂ ℙ(ℤ×TRIGGERS))">
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·⊤ ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·⊤∧s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Seq=(λT⦂ℙ(TRIGGERS)·⊤ ∣ {n⦂ℤ,s⦂ℙ(ℤ×TRIGGERS)·n∈ℕ∧s∈0 ‥ n − 1 → T ∣ s})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS)·T⊆TRIGGERS⇒Seq_empty∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_empty" org.eventb.core.type="ℙ(ℤ×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p106" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(T)∧s2∈Seq(T)⇒Seq_concat(s1 ↦ s2)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_concat" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Seq_append=(λs⦂ℙ(ℤ×TRIGGERS) ↦ t⦂TRIGGERS·s∈Seq(TRIGGERS)∧⊤ ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s)∧(i&lt;Seq_length(s)⇒v=s(i))∧(i=Seq_length(s)⇒v=t) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_completed=TRUE⇒abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))">
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p116" org.eventb.core.predicate="∀Sts⦂ℙ(STATE),fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p117" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∃p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_transition∈abs_transitions"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),S⦂ℙ(TRIGGERS)·s∈Seq(S)⇒s∈Seq(TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·T⊆TRIGGERS∧s∈Seq(T)∧t∈T⇒Seq_append(s ↦ t)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p112" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="TRIGGERS" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_TransitionStep∈abs_transitions ↣ abs_Steps"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="abs_transitions"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/trigger_dequeued/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25,p17" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                        <org.eventb.core.prHypAction name="REWRITE21" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                        <org.eventb.core.prHypAction name="HIDE22" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p2"/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_Triggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)∧abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="⊤∧abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_StepTrigger∈abs_Steps ⇸ abs_Triggers"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_triggeredTransition/dequeue_trigger_set/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="p28,p17" org.eventb.core.prInfHyps="p27"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p24"/>
                                <org.eventb.core.prHypAction name="REWRITE22" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps=""/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="abs_container∈dom(cl)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊥">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)∧abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒⊤∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="abs_new_leaf_state=abs_target(abs_transition)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬abs_new_leaf_state=abs_target(abs_transition)⇒abs_new_leaf_state ↦ abs_target(abs_transition)∈cl(abs_container)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="abs_new_leaf_state≠abs_target(abs_transition)⇒abs_container∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_new_leaf_state" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="abs_target" org.eventb.core.type="ℙ(TRANSITION×STATE)"/>
            <org.eventb.core.prIdent name="abs_transition" org.eventb.core.type="TRANSITION"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/trigger_dequeued/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p2"/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prIdent name="abs_Steps" org.eventb.core.type="ℙ(STEPS)"/>
        <org.eventb.core.prIdent name="abs_Triggers" org.eventb.core.type="ℙ(TRIGGERS)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)∧abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="⊤∧abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬abs_dequeue_trigger=(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_StepTrigger∈abs_Steps ⇸ abs_Triggers"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="abs_discardTrigger/dequeue_trigger_set/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="STEPS,TRIGGERS">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p4"/>
                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p8"/>
                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p10"/>
                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p12"/>
                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="p5,p6" org.eventb.core.prInfHyps="p14"/>
                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p16"/>
                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p19"/>
                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p22"/>
                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p24"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p39" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                        <org.eventb.core.prHypAction name="REWRITE11" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                        <org.eventb.core.prHypAction name="REWRITE12" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                        <org.eventb.core.prHypAction name="REWRITE13" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                        <org.eventb.core.prHypAction name="REWRITE14" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                        <org.eventb.core.prHypAction name="REWRITE15" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                        <org.eventb.core.prHypAction name="REWRITE16" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                        <org.eventb.core.prHypAction name="REWRITE17" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                        <org.eventb.core.prHypAction name="REWRITE18" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                        <org.eventb.core.prHypAction name="REWRITE19" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                        <org.eventb.core.prHypAction name="REWRITE20" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                        <org.eventb.core.prHypAction name="HIDE21" org.eventb.core.prHyps="p24"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="abs_Step" org.eventb.core.type="STEPS"/>
        <org.eventb.core.prIdent name="abs_StepTrigger" org.eventb.core.type="ℙ(STEPS×TRIGGERS)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬nullTrigger∈InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="nullTrigger∉InternalTriggerType">
            <org.eventb.core.prIdent name="InternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬nullTrigger∈ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)∧abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="abs_Step∉ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="nullTrigger∉ExternalTriggerType">
            <org.eventb.core.prIdent name="ExternalTriggerType" org.eventb.core.type="ℙ(TRIGGERS)"/>
            <org.eventb.core.prIdent name="nullTrigger" org.eventb.core.type="TRIGGERS"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧t∉T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="TRIGGERS∈dom(Seq)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬abs_Step∈ran(abs_TransitionStep)">
            <org.eventb.core.prIdent name="TRANSITION" org.eventb.core.type="ℙ(TRANSITION)"/>
            <org.eventb.core.prIdent name="abs_TransitionStep" org.eventb.core.type="ℙ(TRANSITION×STEPS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)∧⊤))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(∀i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀t⦂TRIGGERS,T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧¬t∈T∧s∈Seq(TRIGGERS)⇒Seq_keep(s ↦ T)=Seq_keep(Seq_append(s ↦ t) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_append" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Seq_tail=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ {i⦂ℤ,v⦂TRIGGERS·i∈0 ‥ Seq_length(s) − 2∧v=s(i+1) ∣ i ↦ v})">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·∀p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(¬fst=lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧¬fst=lst⇒lnks∈dom(cl))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧⊤">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧¬Seq_head(s)∈T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)⇒finite(s)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)∧Tree∈ℙ(STATE) ⇸ ℙ(STATE × ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀rt⦂STATE,prn⦂ℙ(STATE×STATE)·rt∈Sts∧prn∈Sts ∖ {rt} → Sts⇒(∀n⦂STATE·n∈Sts ∖ {rt}⇒prn∈dom(cl)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="abs_StepTrigger∈STEPS ⇸ TRIGGERS"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(TRIGGERS)∧Seq_head(s)∉T⇒Seq_keep(s ↦ T)=Seq_keep(Seq_tail(s) ↦ T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
            <org.eventb.core.prIdent name="Seq_keep" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·⊤∧⊤∧(s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀S⦂ℙ(STATE)·S⊆STATE⇒S∈dom(Tree)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="Tree" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×ℙ(STATE×STATE)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒0∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cl∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·⊤∧⊤∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="abs_Step∈dom(abs_StepTrigger)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS),t⦂TRIGGERS·s∈Seq(TRIGGERS)∧t∈TRIGGERS⇒s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(∀i⦂ℤ·i∈0 ‥ Seq_length(s)∧i&lt;Seq_length(s)⇒i∈dom(s)∧s∈ℤ ⇸ TRIGGERS)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀s1⦂ℙ(ℤ×TRIGGERS),s2⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s1∈Seq(TRIGGERS)∧s2∈Seq(TRIGGERS)⇒(∀i⦂ℤ,v⦂TRIGGERS·s1∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧s2∈dom(Seq_length)∧(i∈0 ‥ Seq_length(s1)+Seq_length(s2) − 1⇒(i&lt;Seq_length(s1)⇒i∈dom(s1)∧s1∈ℤ ⇸ TRIGGERS)∧((i&lt;Seq_length(s1)⇒v=s1(i))∧i≥Seq_length(s1)⇒i − Seq_length(s1)∈dom(s2)∧s2∈ℤ ⇸ TRIGGERS))))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒⊤">
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒(∀i⦂ℤ·s∈dom(Seq_length)∧Seq_length∈ℙ(ℤ × TRIGGERS) ⇸ ℤ∧(i∈0 ‥ Seq_length(s) − 2⇒i+1∈dom(s)∧s∈ℤ ⇸ TRIGGERS)))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_length" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℤ)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀s⦂ℙ(ℤ×TRIGGERS)·TRIGGERS∈dom(Seq)∧Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))∧(s∈Seq(TRIGGERS)⇒finite(s))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="abs_dequeue_trigger≠(∅ ⦂ ℙ(TRIGGERS))⇒abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
            <org.eventb.core.prIdent name="abs_dequeue_trigger" org.eventb.core.type="ℙ(TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧s1≠s2⇒abs_container(s1)≠abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="LinkedList=(λSts⦂ℙ(STATE)·Sts⊆STATE ∣ {fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks})">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Seq∈ℙ(TRIGGERS) ⇸ ℙ(ℙ(ℤ × TRIGGERS))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Seq_head=(λs⦂ℙ(ℤ×TRIGGERS)·s∈Seq(TRIGGERS)∧s≠(∅ ⦂ ℙ(ℤ×TRIGGERS)) ∣ s(0))">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_head" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×TRIGGERS)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀T⦂ℙ(TRIGGERS),s⦂ℙ(ℤ×TRIGGERS)·T⊆TRIGGERS∧s∈Seq(T)∧¬s=(∅ ⦂ ℙ(ℤ×TRIGGERS))⇒Seq_tail(s)∈Seq(T)">
            <org.eventb.core.prIdent name="Seq" org.eventb.core.type="ℙ(ℙ(TRIGGERS)×ℙ(ℙ(ℤ×TRIGGERS)))"/>
            <org.eventb.core.prIdent name="Seq_tail" org.eventb.core.type="ℙ(ℙ(ℤ×TRIGGERS)×ℙ(ℤ×TRIGGERS))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒¬(∀p⦂ℙ(STATE×STATE)·¬(r⊆p∧p;p⊆p))">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="abs_completed=FALSE">
            <org.eventb.core.prIdent name="abs_completed" org.eventb.core.type="BOOL"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·LinkedList(Sts)={fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧(fst≠lst⇒lst∈(cl(lnks))[{fst}]) ∣ fst ↦ lst ↦ lnks}">
            <org.eventb.core.prIdent name="LinkedList" org.eventb.core.type="ℙ(ℙ(STATE)×ℙ(STATE×STATE×ℙ(STATE×STATE)))"/>
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀Sts⦂ℙ(STATE)·Sts⊆STATE⇒(∀fst⦂STATE,lst⦂STATE,lnks⦂ℙ(STATE×STATE)·fst∈Sts∧lst∈Sts∧lnks∈Sts ∖ {lst} ⤖ Sts ∖ {fst}∧fst≠lst⇒lnks∈dom(cl)∧⊤)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∀s1⦂STATE,s2⦂STATE·s1∈abs_active ∖ {abs_root}∧s2∈abs_active ∖ {abs_root}∧¬s1=s2⇒¬abs_container(s1)=abs_container(s2)">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_active" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="abs_container" org.eventb.core.type="ℙ(STATE×STATE)"/>
            <org.eventb.core.prIdent name="abs_root" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀r⦂ℙ(STATE×STATE),p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p⇒cl(r)⊆p">
            <org.eventb.core.prIdent name="STATE" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="cl" org.eventb.core.type="ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
