<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="InitialWD/Op-WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Initial" org.eventb.core.type="ℙ(STATE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationWD" org.eventb.core.label="TransformationWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st))))∨¬Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="InitialWD" org.eventb.core.label="InitialWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Initial(st)⊆States(Tree(st))∧Initial(st)≠(∅ ⦂ ℙ(STATE))∧(∀s⦂STATE·¬s∈Initial(st) ∖ {Root(Tree(st))}∨(s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE∧Parent(Tree(st))(s)∈Initial(st))))∨¬Initial(st)⊆States(Tree(st))∨¬Initial(st)≠(∅ ⦂ ℙ(STATE))∨(∃s⦂STATE·s∈Initial(st) ∖ {Root(Tree(st))}∧s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE∧¬Parent(Tree(st))(s)∈Initial(st))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Initial(st)⊆States(Tree(st))∧Initial(st)≠(∅ ⦂ ℙ(STATE))∧(∀s⦂STATE·s∈Initial(st) ∖ {Root(Tree(st))}⇒Parent(Tree(st))(s)∈Initial(st))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p3,p4">
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s)" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p7">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9"/>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p10"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(Initial(st)⊆States(Tree(st))∧Initial(st)≠(∅ ⦂ ℙ(STATE))⇒(∀s⦂STATE·s∈Initial(st) ∖ {Root(Tree(st))}⇒s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="s∈dom(Parent(Tree(st)))">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Parent(Tree(st))∈STATE ⇸ STATE">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·Initial(st)⊆States(Tree(st))∧¬Initial(st)=(∅ ⦂ ℙ(STATE))⇒(∀s⦂STATE·s∈Initial(st) ∖ {Root(Tree(st))}⇒s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Initial(st)⊆States(Tree(st))∧¬Initial(st)=(∅ ⦂ ℙ(STATE))⇒(∀s⦂STATE·s∈Initial(st) ∖ {Root(Tree(st))}⇒s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="s∈Initial(st) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Initial(st)⊆States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬Initial(st)=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀s⦂STATE·s∈Initial(st) ∖ {Root(Tree(st))}⇒s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="s∈Initial(st) ∖ {Root(Tree(st))}⇒s∈dom(Parent(Tree(st)))∧Parent(Tree(st))∈STATE ⇸ STATE">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="region_wd_inf/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationWD" org.eventb.core.label="TransformationWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st))))∨¬Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)⇒RegionsWD(st))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)⇒RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)⇒RegionsWD(st)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="regions_wd_inf/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s,st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion on RegionsWD(st)" org.eventb.core.prHyps="p3">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p8">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p8"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p4,p5,p9,p10,p11,p12">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="RegionsWD(st)∧s∈States(Tree(st))∧¬s=Root(Tree(st))⇒(∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬s=Root(Tree(st))">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(RegionsWD(st)∧s∈States(Tree(st))∧¬s=Root(Tree(st))⇒(∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·RegionsWD(st)∧s∈States(Tree(st))∧¬s=Root(Tree(st))⇒(∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="s∈States(Tree(st))">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="transformation_wd_inf/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st))))∨¬Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion on StatechartWD(st)" org.eventb.core.prHyps="p3">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p6">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p8"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)⇒TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)⇒TransformationsWD(st))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TreeWD(Tree(st))∧RegionsWD(st)∧⊥">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)⇒TransformationsWD(st)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="region_type_inf/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p4,p6,p7,p8"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p4"/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·RegionsWD(st)⇒Regions(st)⊆ℙ(States(Tree(st)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(RegionsWD(st)⇒Regions(st)⊆ℙ(States(Tree(st))))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="RegionsWD(st)⇒Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="statechart_wd_tree-inf/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,n" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p5">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p4,p7,p8"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p5"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p9">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p9"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p4">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p10">
                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p10"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto backward) on goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p4">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="backward"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p10">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p9">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p9"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p4">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p10">
                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p10"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto backward) on goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="backward"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p11">
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees n)" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                        <org.eventb.core.prIdent name="n" org.eventb.core.type="STATE"/>
                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p13">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p4">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p9">
                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p9"/>
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p4">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p10">
                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p10"/>
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root reachability (auto backward) on goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p4">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p5">
                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p13"/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_reachability-inf"/>
                                                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="backward"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="n∈States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="n" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)⇒TreeWD(Tree(st)))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)⇒TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)⇒TreeWD(Tree(st))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="n" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="n" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="statechart_wd_regions-inf/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion on StatechartWD(st)" org.eventb.core.prHyps="p3">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p6">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p8"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)⇒RegionsWD(st))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)⇒RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TreeWD(Tree(st))∧⊥∧TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)⇒RegionsWD(st)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="statechart_wd_transformation-inf/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="p3">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion on StatechartWD(st)" org.eventb.core.prHyps="p3">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p5,p6">
                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p5"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p8"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)⇒TransformationsWD(st))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)⇒TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="TreeWD(Tree(st))∧RegionsWD(st)∧⊥">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)⇒TransformationsWD(st)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="TransformationsWD/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,r,s,c,trf" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf)" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                                                <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p9">
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p9"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p12">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p4"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p13">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p14">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf,s,r)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                                <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                                <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                                                                <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p9,p18,p19,p20">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p5,p9,p4,p19,p3,p14,p18,p20">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf,s,r)" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                                <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                                                <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                                                                                <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p9,p27,p20,p28">
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p3">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p9"/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p31">
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p3"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p32">
                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p33">
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf)" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
                                                                                                <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p9">
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p3">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p9"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p31">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p3"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p37">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="p38">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf,c,r)" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41">
                                                                                                                <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                                                                                <org.eventb.core.prIdent name="c" org.eventb.core.type="STATE"/>
                                                                                                                <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                                                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p9,p42,p20">
                                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p44">
                                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p5">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p9"/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p45">
                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p5"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p46">
                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf,c,r)" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47">
                                                                                                                <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                                                                                <org.eventb.core.prIdent name="c" org.eventb.core.type="STATE"/>
                                                                                                                <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                                                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p48,p9,p42,p49,p20">
                                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Domain closure is complete (auto backward) on goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps=""/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="domain_closure-inf"/>
                                                                                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="backward"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p53">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closure partial function inference (auto backward) on goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps=""/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure_⇸-inf"/>
                                                                                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="backward"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p54">
                                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p55">
                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees trf)" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
                                                                                                                        <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
                                                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p9">
                                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p44">
                                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p5">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p9"/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p45">
                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p5"/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="trf∈dom(Enabling(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))))))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Parent(Tree(st))[r]={c}">
            <org.eventb.core.prIdent name="c" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="c" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="trf∈dom(Exiting(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="trf∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="s∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="trf∈Transformation(st)⇒trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬r={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·(trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))))))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="s∈r">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="trf∈dom(Entering(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="c" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="trf" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧((∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})⇒(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE))∧((∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf))⇒(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE))))))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="regions_wd_inf_1/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees s,st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p8,p9,p10,p11"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p12,p11,p4,p8,p5,p10">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬s=Root(Tree(st))">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·RegionsWD(st)∧s∈States(Tree(st))∧¬s=Root(Tree(st))⇒(∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(RegionsWD(st)∧s∈States(Tree(st))∧¬s=Root(Tree(st))⇒(∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="RegionsWD(st)∧s∈States(Tree(st))∧¬s=Root(Tree(st))⇒(∃r⦂ℙ(STATE)·r∈Regions(st)∧s∈r)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="s∈States(Tree(st))">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="regions_wd_inf_2/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,r,s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p8,p9,p10"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p8">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p11">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p11"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p8">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p12">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p12"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p8" org.eventb.core.prInfHyps="p11,p12,p13"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p8"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p14,p15,p16,p17"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p42"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p43"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p36"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p7"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p20,p37,p19,p35,p18,p44,p12,p34,p45,p38,p40,p11,p41,p17,p39,p22,p26,p32,p33,p5,p14,p4,p16">
                                                                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="s∈r">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧r∈Regions(st)∧s∈r⇒Parent(Tree(st))[r]={Parent(Tree(st))(s)}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)∧r∈Regions(st)∧s∈r⇒Parent(Tree(st))[r]={Parent(Tree(st))(s)})"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)∧r∈Regions(st)∧s∈r⇒Parent(Tree(st))[r]={Parent(Tree(st))(s)}"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Parent(Tree(st))[r]={Parent(Tree(st))(s)}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="transformation_wd_inf_1/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p3,p4">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p5,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p20,p21,p4"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)∧TransformationsWD(st)⇒Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st))))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧TransformationsWD(st)⇒Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)∧TransformationsWD(st)⇒Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="transformation_wd_inf_2/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p3,p4">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p7,p5,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p20,p21,p4"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧TransformationsWD(st)⇒Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)∧TransformationsWD(st)⇒Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)∧TransformationsWD(st)⇒Exiting(st)∈Transformation(st) → ℙ(States(Tree(st))))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="transformation_wd_inf_3/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p3,p4">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p7,p8,p5,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p6">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p20,p21,p4"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p6"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧TransformationsWD(st)⇒Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)∧TransformationsWD(st)⇒Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)∧TransformationsWD(st)⇒Entering(st)∈Transformation(st) → ℙ(States(Tree(st))))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="transformation_wd_inf_4/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p22,p23,p4"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p22">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p33">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p33"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p22">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p34">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p34"/>
                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p35"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p27"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p33,p34,p36"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p22"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p37,p38,p39,p40"/>
                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p23"/>
                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p43"/>
                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p36"/>
                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p10,p28,p9,p26,p8,p44,p34,p25,p41,p29,p31,p33,p32,p30,p40,p12,p16,p5,p42,p24,p37,p39">
                                                                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                                                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧TransformationsWD(st)∧tr∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(tr))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧TransformationsWD(st)∧tr∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(tr)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬Root(Tree(st))∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧TransformationsWD(st)∧tr∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="inf1/S-INF"/>
    <org.eventb.core.prProof name="regions_wd_inf_3/S-INF" org.eventb.core.confidence="1000" org.eventb.core.prFresh="st,r,s" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p3,p4,p5">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p8,p9,p10"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p8">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p11">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p11"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p8">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7,p12">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p7,p12"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p8" org.eventb.core.prInfHyps="p11,p12,p13"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p8"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p14,p15,p16,p17"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p7"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p7" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p7">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p42"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p43"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p36"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p7"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p7"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p43" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="p4,p5,p11,p12,p14,p16,p17,p18,p19,p20,p22,p26,p32,p33,p34,p35,p37,p38,p39,p40,p41,p44,p45">
                                                                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                                                                                                            <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="s∈r ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∃region⦂ℙ(STATE)·region∈Regions(st)∧s∈region">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·⊤⇒(StatechartWD(st)∧r∈Regions(st)∧s∈r ∖ {Root(Tree(st))}⇒(∃region⦂ℙ(STATE)·region∈Regions(st)∧s∈region))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION)·StatechartWD(st)∧r∈Regions(st)∧s∈r ∖ {Root(Tree(st))}⇒(∃region⦂ℙ(STATE)·region∈Regions(st)∧s∈region)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧r∈Regions(st)∧s∈r ∖ {Root(Tree(st))}⇒(∃region⦂ℙ(STATE)·region∈Regions(st)∧s∈region)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="not_exiting_region_1/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,r,s,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5,p6,p7">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p10,p11,p12"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p13">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p13"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p14">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p14"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p13,p14,p15"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p11"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p44"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p15"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p45"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p38"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p9"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧r∈Regions(st)∧tr∈Transformation(st)∧Parent(Tree(st))[r]={s}∧r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))⇒¬s∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧r∈Regions(st)∧tr∈Transformation(st)∧Parent(Tree(st))[r]={s}∧r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))⇒s∉Exiting(st)(tr))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬s∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧r∈Regions(st)∧tr∈Transformation(st)∧Parent(Tree(st))[r]={s}∧r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))⇒¬s∈Exiting(st)(tr)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Parent(Tree(st))[r]={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Axiom5/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,r,s,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5,p6,p7">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p10,p11,p12"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p13">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p13"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p14">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p14"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p13,p14,p15"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p11"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p44"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p15"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p45"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p38"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p9"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="s∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈Exiting(st)(tr)∧Parent(Tree(st))[r]={s}⇒¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈Exiting(st)(tr)∧Parent(Tree(st))[r]={s}⇒¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈Exiting(st)(tr)∧Parent(Tree(st))[r]={s}⇒r∩Exiting(st)(tr)≠(∅ ⦂ ℙ(STATE)))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Parent(Tree(st))[r]={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Axiom8/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,r,s,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p11,p12,p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p4"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p10"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p11">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10,p14">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p10,p14"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p11">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10,p15">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p10,p15"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p14,p15,p16"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p11"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p10"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p17,p18,p19,p20"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p10"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p10"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p10">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p16" org.eventb.core.prInfHyps="p45"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p46"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p39"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p10"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p10"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈r∧¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))∧¬s∈Exiting(st)(tr)⇒s∉Enabling(st)(tr))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬s∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈r∧¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))∧¬s∈Exiting(st)(tr)⇒¬s∈Enabling(st)(tr)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="s∈r">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬s∈Enabling(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈r∧¬r∩Exiting(st)(tr)=(∅ ⦂ ℙ(STATE))∧¬s∈Exiting(st)(tr)⇒¬s∈Enabling(st)(tr)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Axiom6/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,r,s,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5,p6,p7">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p10,p11,p12"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p13">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p13"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p14">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p14"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p13,p14,p15"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p11"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p44"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p15"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p45"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p38"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p9"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="s∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="s∈r">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="r∩Exiting(st)(tr)={s}∨r⊆Exiting(st)(tr)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈Exiting(st)(tr)∧s∈r⇒r∩Exiting(st)(tr)={s}∨r⊆Exiting(st)(tr)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈Exiting(st)(tr)∧s∈r⇒r∩Exiting(st)(tr)={s}∨r⊆Exiting(st)(tr))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈Exiting(st)(tr)∧s∈r⇒r∩Exiting(st)(tr)={s}∨r⊆Exiting(st)(tr)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Axiom7/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,r,s,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p3,p4,p5,p6,p7">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p10,p11,p12"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p13">
                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p13"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p10">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9,p14">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p9,p14"/>
                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p13,p14,p15"/>
                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p10"/>
                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p11"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p9"/>
                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9">
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p9">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p44"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p15"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p45"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p38"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p9"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p45" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧r∩Exiting(st)(tr)={s}∧¬r={s}⇒r∩Enabling(st)(tr)={s}"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="r∩Enabling(st)(tr)={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="r∩Exiting(st)(tr)={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬r={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧r∩Exiting(st)(tr)={s}∧r≠{s}⇒r∩Enabling(st)(tr)={s})"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧r∩Exiting(st)(tr)={s}∧¬r={s}⇒r∩Enabling(st)(tr)={s}">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Axiom9/S-INF" org.eventb.core.confidence="0" org.eventb.core.prFresh="st,r,s,tr" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="STATE,TRANSFORMATION">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="closure" org.eventb.core.label="closure" org.eventb.core.predicate="⊤" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S×S)×ℙ(S×S))" org.eventb.theory.core.wd="∀r⦂ℙ(S×S)·r∈S ↔ S⇒(∀p⦂ℙ(S×S)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(S×S)))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/Closure/closure.tuf|org.eventb.theory.core.theoryRoot#closure|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λr⦂ℙ(S×S)·r∈S ↔ S ∣ inter({p⦂ℙ(S×S)·r⊆p∧p;p⊆p ∣ p})"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="TREE">
                <org.eventb.theory.core.scTypeArgument name="NODE" org.eventb.theory.core.givenType="NODE"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_TREE">
                    <org.eventb.theory.core.scConstructorArgument name="States" org.eventb.core.type="ℙ(NODE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Root" org.eventb.core.type="NODE"/>
                    <org.eventb.theory.core.scConstructorArgument name="Parent" org.eventb.core.type="ℙ(NODE×NODE)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TreeWD" org.eventb.core.label="TreeWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·¬n∈States(tr) ∖ {Root(tr)}∨((∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])))∨¬Root(tr)∈States(tr)∨¬Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∨(∃n⦂NODE·n∈States(tr) ∖ {Root(tr)}∧(∀r⦂ℙ(NODE×NODE)·r∈NODE ↔ NODE⇒(∀p⦂ℙ(NODE×NODE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(NODE×NODE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(NODE×NODE))))∧Parent(tr)∈dom(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∧(closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))∈ℙ(NODE × NODE) ⇸ ℙ(NODE × NODE)∧¬Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])">
                <org.eventb.theory.core.scOperatorArgument name="tr" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="TREE(NODE)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/Tree/Tree.tuf|org.eventb.theory.core.theoryRoot#Tree|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Root(tr)∈States(tr)∧Parent(tr)∈States(tr) ∖ {Root(tr)} → States(tr)∧(∀n⦂NODE·n∈States(tr) ∖ {Root(tr)}⇒Root(tr)∈((closure ⦂ ℙ(ℙ(NODE×NODE)×ℙ(NODE×NODE)))(Parent(tr)))[{n}])"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STATECHART">
                <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.theory.core.givenType="STATE"/>
                <org.eventb.theory.core.scTypeArgument name="TRANSFORMATION" org.eventb.theory.core.givenType="TRANSFORMATION"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Cons_STATECHART">
                    <org.eventb.theory.core.scConstructorArgument name="Tree" org.eventb.core.type="TREE(STATE)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Regions" org.eventb.core.type="ℙ(ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Transformation" org.eventb.core.type="ℙ(TRANSFORMATION)"/>
                    <org.eventb.theory.core.scConstructorArgument name="Enabling" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Exiting" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                    <org.eventb.theory.core.scConstructorArgument name="Entering" org.eventb.core.type="ℙ(TRANSFORMATION×ℙ(STATE))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="RegionsWD" org.eventb.core.label="RegionsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·¬r1∈Regions(st)∨¬r2∈Regions(st)∨¬r1≠r2∨r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·¬r∈Regions(st)∨(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})))∨¬Regions(st)⊆ℙ(States(Tree(st)))∨(∃r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2∧¬r1∩r2=(∅ ⦂ ℙ(STATE)))∨¬union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∨(∃r⦂ℙ(STATE)·r∈Regions(st)∧(∀p⦂STATE·¬p∈States(Tree(st))∨¬Parent(Tree(st))[r]={p}))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Regions(st)⊆ℙ(States(Tree(st)))∧(∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE)))∧union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p}))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="TransformationsWD" org.eventb.core.label="TransformationsWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={s}∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Exiting(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s})∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧r⊆Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨¬r≠{s}∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Enabling(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Enabling(st)(trf))∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨¬s∈r∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨¬Parent(Tree(st))[r]={c}∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧c∉Exiting(st)(trf)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬s∈Entering(st)(trf))∨¬r∈Regions(st)∨¬s∈r∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r={s}))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]⊆Entering(st)(trf))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·¬trf∈Transformation(st)∨¬r∈Regions(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Entering(st)(trf)))∧(∀trf⦂TRANSFORMATION·¬trf∈Transformation(st)∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Root(Tree(st))∉Exiting(st)(trf))))∨¬Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∨¬Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∨¬Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s}∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬r⊆Exiting(st)(trf))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r={s}∧r≠{s}∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Enabling(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Exiting(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))∧((trf∈dom(Enabling(st))∧Enabling(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE)))∨(trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬c∉Exiting(st)(trf))))∨(∃trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r={s})∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]⊆Entering(st)(trf)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Entering(st))∧Entering(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Entering(st)(trf))∨(∃trf⦂TRANSFORMATION·trf∈Transformation(st)∧trf∈dom(Exiting(st))∧Exiting(st)∈TRANSFORMATION ⇸ ℙ(STATE)∧¬Root(Tree(st))∉Exiting(st)(trf))">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))∧Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))∧Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf))∧(∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s})∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE)))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf))∧(∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="StatechartWD" org.eventb.core.label="StatechartWD" org.eventb.core.predicate="⊤" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st))∨(((Root(Tree(st))∈States(Tree(st))∧Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∧(∀n⦂STATE·¬n∈States(Tree(st)) ∖ {Root(Tree(st))}∨((∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}])))∨¬Root(Tree(st))∈States(Tree(st))∨¬Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))∨(∃n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}∧(∀r⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE⇒(∀p⦂ℙ(STATE×STATE)·(r⊆p∧p;p⊆p)∨¬r⊆p∨¬p;p⊆p)∧{p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}≠(∅ ⦂ ℙ(ℙ(STATE×STATE))))∧Parent(Tree(st))∈dom(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∧(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))∈ℙ(STATE × STATE) ⇸ ℙ(STATE × STATE)∧¬Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]))∧¬TreeWD(Tree(st)))∨¬RegionsWD(st)∨¬TransformationsWD(st)">
                <org.eventb.theory.core.scOperatorArgument name="st" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/StateCharts/StateChart.tuf|org.eventb.theory.core.theoryRoot#StateChart|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="TreeWD(Tree(st))∧RegionsWD(st)∧TransformationsWD(st)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees r,s,st,tr)" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
                        <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
                        <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
                        <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8">
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p9" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p12,p13,p14"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p12">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p15">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11,p15"/>
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p12">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p16">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11,p16"/>
                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p15,p16,p17"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p18,p19,p20,p21"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p46"/>
                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p17"/>
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p40" org.eventb.core.prInfHyps="p47"/>
                                                                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p40"/>
                                                                                                                        <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p11"/>
                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p50">
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="p11">
                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="StatechartWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p12,p13,p14"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p5"/>
                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Root type inference (auto forward)" org.eventb.core.prHyps="p12">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p15">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11,p15"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Tree Parent type inference (auto forward)" org.eventb.core.prHyps="p12">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11,p16">
                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p11,p16"/>
                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TreeWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p15,p16,p17"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="RegionsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p18,p19,p20,p21"/>
                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="TransformationsWD expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p11"/>
                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE8" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE9" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE10" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="closure expansion (exp. def.)" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p11">
                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p46"/>
                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p17"/>
                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p40" org.eventb.core.prInfHyps="p47"/>
                                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p40"/>
                                                                                                                                <org.eventb.core.prHypAction name="SELECT4" org.eventb.core.prHyps="p11"/>
                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p47" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.TransformationsWD"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.RegionsWD"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Tree.TreeWD"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Parent_type-inf"/>
                                                                            <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Tree"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Root_type-inf"/>
                                                                    <org.eventb.core.prString name=".isForward" org.eventb.core.prSValue="forward"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="StateCharts"/>
                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="StateChart"/>
                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="StateChart.StatechartWD"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="Closure"/>
                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="closure"/>
                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="closure.closure"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Exiting(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Enabling(st)∈Transformation(st) → ℙ1(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="∃x⦂STATE·x ↦ s∈(λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st)))∧x∈Enabling(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧¬r={s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒¬Root(Tree(st))∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Regions(st)⊆ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈r∧s∈Entering(st)(tr)∧¬Parent(Tree(st))(s)∈Entering(st)(tr)⇒¬Parent(Tree(st))(s)∈Exiting(st)(tr)∧(∃x⦂STATE·x ↦ s∈(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st)))∧x∈Enabling(st)(tr))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]⊆Entering(st)(trf)⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧Parent(Tree(st))[r]={s}⇒Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∃x⦂STATE·x ↦ s∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∧x∈Enabling(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬Parent(Tree(st))(s)∈Exiting(st)(tr)∧(∃x⦂STATE·x ↦ s∈(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st)))∧x∈Enabling(st)(tr))">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="RegionsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Parent(Tree(st))(s)∈Entering(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩inter({p⦂ℙ(STATE×STATE)·Parent(Tree(st))⊆p∧p;p⊆p ∣ p})∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="StatechartWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="TransformationsWD(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="∃x⦂STATE·x ↦ s∈(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st)))∧x∈Enabling(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧¬r1=r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈r∧s∈Entering(st)(tr)∧¬Parent(Tree(st))(s)∈Entering(st)(tr)⇒¬Parent(Tree(st))(s)∈Exiting(st)(tr)∧(∃x⦂STATE·x ↦ s∈(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st)))∧x∈Enabling(st)(tr))">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀r1⦂ℙ(STATE),r2⦂ℙ(STATE)·r1∈Regions(st)∧r2∈Regions(st)∧r1≠r2⇒r1∩r2=(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩Parent(Tree(st))[r]≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="r∈Regions(st)">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="union(Regions(st))=States(Tree(st)) ∖ {Root(Tree(st))}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Exiting(st)(trf)∩r={s}∧r≠{s}⇒Enabling(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Entering(st)∈Transformation(st) → ℙ(States(Tree(st)))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]∩Exiting(st)(trf)=(∅ ⦂ ℙ(STATE))∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))⇒Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Parent(Tree(st))∈States(Tree(st)) ∖ {Root(Tree(st))} → States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀n⦂STATE·n∈States(Tree(st)) ∖ {Root(Tree(st))}⇒Root(Tree(st))∈((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))[{n}]">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬Parent(Tree(st))(s)∈Exiting(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧Entering(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]≠(∅ ⦂ ℙ(STATE))∧c∉Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="s∈r">
            <org.eventb.core.prIdent name="r" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="TreeWD(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧¬Exiting(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((λr⦂ℙ(STATE×STATE)·r∈STATE ↔ STATE ∣ inter({p⦂ℙ(STATE×STATE)·r⊆p∧p;p⊆p ∣ p}))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀trf⦂TRANSFORMATION·trf∈Transformation(st)⇒Root(Tree(st))∉Entering(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Enabling(st)(trf)∧r∈Regions(st)∧Exiting(st)(trf)∩r≠(∅ ⦂ ℙ(STATE))∧s∈r⇒Exiting(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="s∈Entering(st)(tr)">
            <org.eventb.core.prIdent name="s" org.eventb.core.type="STATE"/>
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Root(Tree(st))∈States(Tree(st))">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀r⦂ℙ(STATE)·r∈Regions(st)⇒(∃p⦂STATE·p∈States(Tree(st))∧Parent(Tree(st))[r]={p})">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Exiting(st)(trf)∧r∈Regions(st)∧s∈r⇒Exiting(st)(trf)∩r={s}∨r⊆Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,s⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧s∈Entering(st)(trf)∧r∈Regions(st)∧s∈r⇒Entering(st)(trf)∩r={s}">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="tr∈Transformation(st)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
            <org.eventb.core.prIdent name="tr" org.eventb.core.type="TRANSFORMATION"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀r⦂ℙ(STATE),s⦂STATE,st⦂STATECHART(STATE,TRANSFORMATION),tr⦂TRANSFORMATION·⊤⇒(StatechartWD(st)∧tr∈Transformation(st)∧r∈Regions(st)∧s∈r∧s∈Entering(st)(tr)∧¬Parent(Tree(st))(s)∈Entering(st)(tr)⇒Parent(Tree(st))(s)∉Exiting(st)(tr)∧(∃x⦂STATE·x ↦ s∈(closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st)))∧x∈Enabling(st)(tr)))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀trf⦂TRANSFORMATION,c⦂STATE,r⦂ℙ(STATE)·trf∈Transformation(st)∧r∈Regions(st)∧Parent(Tree(st))[r]={c}∧¬Entering(st)(trf)∩r=(∅ ⦂ ℙ(STATE))∧Entering(st)(trf)∩Parent(Tree(st))[r]=(∅ ⦂ ℙ(STATE))⇒¬Enabling(st)(trf)∩((closure ⦂ ℙ(ℙ(STATE×STATE)×ℙ(STATE×STATE)))(Parent(Tree(st))))∼[{c}]=(∅ ⦂ ℙ(STATE))∧¬c∈Exiting(st)(trf)">
            <org.eventb.core.prIdent name="st" org.eventb.core.type="STATECHART(STATE,TRANSFORMATION)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.theory.rbp.reduceToClassicLanguageReasoner"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.theory.rbp.autoInferenceReasoner:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
